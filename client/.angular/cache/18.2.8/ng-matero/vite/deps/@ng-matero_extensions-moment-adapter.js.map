{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-matero/extensions-moment-adapter/fesm2022/extensions-moment-adapter.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateModule, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as i1 from '@angular/material/core';\nimport { MAT_DATE_LOCALE, DateAdapter } from '@angular/material/core';\nimport { DatetimeAdapter, MTX_DATETIME_FORMATS } from '@ng-matero/extensions/core';\nimport * as _moment from 'moment';\nconst moment = 'default' in _moment ? _moment.default : _moment;\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\nclass MomentDatetimeAdapter extends DatetimeAdapter {\n  constructor(matDateLocale, matMomentAdapterOptions, _delegate) {\n    super(_delegate);\n    this._useUtc = false;\n    this.setLocale(matDateLocale || moment.locale());\n    this._useUtc = matMomentAdapterOptions.useUtc;\n  }\n  setLocale(locale) {\n    super.setLocale(locale);\n    const momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, i => super.createDate(2017, 0, i + 1).format('D')),\n      hours: range(24, i => this.createDatetime(2017, 0, 1, i, 0).format('H')),\n      minutes: range(60, i => this.createDatetime(2017, 0, 1, 1, i).format('m')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n  getHour(date) {\n    return super.clone(date).hour();\n  }\n  getMinute(date) {\n    return super.clone(date).minute();\n  }\n  isInNextMonth(startDate, endDate) {\n    const nextMonth = this.getDateInNextMonth(startDate);\n    return super.sameMonthAndYear(nextMonth, endDate);\n  }\n  createDatetime(year, month, date, hour, minute) {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n    if (hour < 0 || hour > 23) {\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\n    }\n    if (minute < 0 || minute > 59) {\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\n    }\n    let result;\n    if (this._useUtc) {\n      result = moment.utc({\n        year,\n        month,\n        date,\n        hour,\n        minute\n      });\n    } else {\n      result = moment({\n        year,\n        month,\n        date,\n        hour,\n        minute\n      });\n    }\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result.locale(this.locale);\n  }\n  getFirstDateOfMonth(date) {\n    return super.clone(date).startOf('month');\n  }\n  getHourNames() {\n    return this._localeData.hours;\n  }\n  getMinuteNames() {\n    return this._localeData.minutes;\n  }\n  addCalendarHours(date, hours) {\n    return super.clone(date).add({\n      hours\n    });\n  }\n  addCalendarMinutes(date, minutes) {\n    return super.clone(date).add({\n      minutes\n    });\n  }\n  deserialize(value) {\n    return this._delegate.deserialize(value);\n  }\n  getDateInNextMonth(date) {\n    return super.clone(date).date(1).add({\n      month: 1\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MomentDatetimeAdapter_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MomentDatetimeAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8), i0.ɵɵinject(i1.DateAdapter));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MomentDatetimeAdapter,\n      factory: MomentDatetimeAdapter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDatetimeAdapter, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    }]\n  }, {\n    type: i1.DateAdapter\n  }], null);\n})();\nconst MTX_MOMENT_DATETIME_FORMATS = {\n  parse: {\n    dateInput: 'L',\n    monthInput: 'MMMM',\n    yearInput: 'YYYY',\n    datetimeInput: 'L LT',\n    timeInput: 'LT'\n  },\n  display: {\n    dateInput: 'L',\n    monthInput: 'MMMM',\n    yearInput: 'YYYY',\n    datetimeInput: 'L LT',\n    timeInput: 'LT',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n    popupHeaderDateLabel: 'ddd, DD MMM'\n  }\n};\nclass MomentDatetimeModule {\n  /** @nocollapse */static {\n    this.ɵfac = function MomentDatetimeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MomentDatetimeModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MomentDatetimeModule,\n      imports: [MomentDateModule]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: DatetimeAdapter,\n        useClass: MomentDatetimeAdapter\n      }],\n      imports: [MomentDateModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDatetimeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MomentDateModule],\n      providers: [{\n        provide: DatetimeAdapter,\n        useClass: MomentDatetimeAdapter\n      }]\n    }]\n  }], null, null);\n})();\nfunction provideMomentDatetimeAdapter(formats = MTX_MOMENT_DATETIME_FORMATS, options) {\n  const providers = [{\n    provide: DateAdapter,\n    useClass: MomentDateAdapter,\n    deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n  }, {\n    provide: DatetimeAdapter,\n    useClass: MomentDatetimeAdapter\n  }, {\n    provide: MTX_DATETIME_FORMATS,\n    useValue: formats\n  }];\n  if (options) {\n    providers.push({\n      provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n      useValue: options\n    });\n  }\n  return providers;\n}\nclass MtxMomentDatetimeModule {\n  /** @nocollapse */static {\n    this.ɵfac = function MtxMomentDatetimeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxMomentDatetimeModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MtxMomentDatetimeModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideMomentDatetimeAdapter()]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxMomentDatetimeModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideMomentDatetimeAdapter()]\n    }]\n  }], null, null);\n})();\n/**\n * @deprecated Use `MtxMomentDatetimeModule` instead.\n */\nconst MatMomentDatetimeModule = MtxMomentDatetimeModule;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MTX_MOMENT_DATETIME_FORMATS, MatMomentDatetimeModule, MomentDatetimeAdapter, MomentDatetimeModule, MtxMomentDatetimeModule, provideMomentDatetimeAdapter };\n"],
  "mappings": "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",
  "names": []
}
