{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-matero/extensions/fesm2022/mtxDatetimepicker.mjs"],
  "sourcesContent": ["import { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, Optional, Injectable, Directive, ElementRef, ViewChild, inject, Injector, afterNextRender, InjectionToken, forwardRef, Attribute, ContentChild, TemplateRef, NgModule } from '@angular/core';\nimport { MatButton, MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { UP_ARROW, DOWN_ARROW, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1 from '@ng-matero/extensions/core';\nimport { MTX_DATETIME_FORMATS } from '@ng-matero/extensions/core';\nimport { normalizePassiveListenerOptions, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport { coerceNumberProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport * as i2 from '@angular/material/form-field';\nconst _forTrack0 = ($index, $item) => $item.value;\nfunction MtxClock_For_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"font-size\", item_r1.fontSize)(\"left\", item_r1.left + \"%\")(\"top\", item_r1.top + \"%\");\n    i0.ɵɵclassProp(\"mtx-clock-cell-disabled\", !item_r1.enabled)(\"mtx-clock-cell-selected\", ctx_r1._selectedHour === item_r1.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r1.displayValue);\n  }\n}\nfunction MtxClock_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", item_r3.left + \"%\")(\"top\", item_r3.top + \"%\");\n    i0.ɵɵclassProp(\"mtx-clock-cell-disabled\", !item_r3.enabled)(\"mtx-clock-cell-selected\", ctx_r1._selectedMinute === item_r3.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r3.displayValue);\n  }\n}\nconst _c0 = [\"mtx-calendar-body\", \"\"];\nfunction MtxCalendarBody_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction MtxCalendarBody_For_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"colspan\", ctx_r0._firstRowOffset);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0._firstRowOffset >= ctx_r0.labelMinRequiredCells ? ctx_r0.label : \"\", \" \");\n  }\n}\nfunction MtxCalendarBody_For_2_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 5);\n    i0.ɵɵlistener(\"click\", function MtxCalendarBody_For_2_For_3_Template_td_click_0_listener() {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._cellClicked(item_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ɵ$index_14_r4 = ctx.$index;\n    const ɵ$index_7_r5 = i0.ɵɵnextContext().$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mtx-calendar-body-active\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4))(\"mtx-calendar-body-disabled\", !item_r3.enabled);\n    i0.ɵɵproperty(\"tabindex\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4) ? 0 : -1);\n    i0.ɵɵattribute(\"data-mat-row\", ɵ$index_7_r5)(\"data-mat-col\", ɵ$index_14_r4)(\"aria-label\", item_r3.ariaLabel)(\"aria-disabled\", !item_r3.enabled || null);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mtx-calendar-body-selected\", ctx_r0.selectedValue === item_r3.value)(\"mtx-calendar-body-today\", ctx_r0.todayValue === item_r3.value);\n    i0.ɵɵattribute(\"aria-selected\", ctx_r0.selectedValue === item_r3.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r3.displayValue, \" \");\n  }\n}\nfunction MtxCalendarBody_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵtemplate(1, MtxCalendarBody_For_2_Conditional_1_Template, 2, 2, \"td\", 3);\n    i0.ɵɵrepeaterCreate(2, MtxCalendarBody_For_2_For_3_Template, 3, 15, \"td\", 4, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    const ɵ$index_7_r5 = ctx.$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ɵ$index_7_r5 === 0 && ctx_r0._firstRowOffset ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(row_r6);\n  }\n}\nfunction MtxMonthView_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵattribute(\"aria-label\", day_r1.long);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\nconst _c1 = [\"hourInput\"];\nconst _c2 = [\"minuteInput\"];\nfunction MtxTime_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"button\", 10);\n    i0.ɵɵlistener(\"keydown\", function MtxTime_Conditional_8_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    })(\"click\", function MtxTime_Conditional_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ampmChange.emit(\"AM\"));\n    });\n    i0.ɵɵtext(2, \"AM\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 11);\n    i0.ɵɵlistener(\"keydown\", function MtxTime_Conditional_8_Template_button_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    })(\"click\", function MtxTime_Conditional_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ampmChange.emit(\"PM\"));\n    });\n    i0.ɵɵtext(4, \"PM\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mtx-time-ampm-active\", ctx_r2.AMPM === \"AM\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"mtx-time-ampm-active\", ctx_r2.AMPM === \"PM\");\n  }\n}\nfunction MtxTime_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MtxTime_Conditional_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._handleCancel());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function MtxTime_Conditional_10_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._handleOk());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2._datetimepickerIntl.cancelLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", (ctx_r2.minuteInputDirective == null ? null : ctx_r2.minuteInputDirective.invalid) || (ctx_r2.hourInputDirective == null ? null : ctx_r2.hourInputDirective.invalid));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2._datetimepickerIntl.okLabel, \" \");\n  }\n}\nfunction MtxCalendar_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MtxCalendar_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MtxCalendar_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkPortalOutlet\", ctx_r0._calendarHeaderPortal);\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_0_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 9);\n    i0.ɵɵelement(1, \"path\", 10);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._yearClicked());\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MtxCalendar_Conditional_2_Conditional_0_Conditional_3_Template, 2, 0, \":svg:svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"active\", ctx_r0.currentView === \"year\" || ctx_r0.currentView === \"multi-year\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r0._yearButtonLabel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0._yearButtonText);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.multiYearSelector || ctx_r0.type === \"year\" ? 3 : -1);\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_1_Conditional_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0._dateClicked());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"active\", ctx_r0.currentView === \"month\")(\"not-clickable\", ctx_r0.type === \"month\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r0._dateButtonLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._dateButtonText);\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 19)(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Conditional_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r0 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r0._ampmClicked(\"AM\"));\n    });\n    i0.ɵɵtext(2, \"AM\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Conditional_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r0 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r0._ampmClicked(\"PM\"));\n    });\n    i0.ɵɵtext(4, \"PM\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"active\", ctx_r0._AMPM === \"AM\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"active\", ctx_r0._AMPM === \"PM\");\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 14)(1, \"span\", 15)(2, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0._hoursClicked());\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5, \":\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0._minutesClicked());\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Conditional_8_Template, 5, 4, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"active\", ctx_r0.currentView === \"clock\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"active\", ctx_r0._clockView === \"hour\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r0._hourButtonLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._hoursButtonText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"active\", ctx_r0._clockView === \"minute\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r0._minuteButtonLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._minutesButtonText);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.twelvehour ? 8 : -1);\n  }\n}\nfunction MtxCalendar_Conditional_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, MtxCalendar_Conditional_2_Conditional_1_Conditional_1_Template, 2, 6, \"button\", 11)(2, MtxCalendar_Conditional_2_Conditional_1_Conditional_2_Template, 9, 11, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.type !== \"time\" ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.type.endsWith(\"time\") ? 2 : -1);\n  }\n}\nfunction MtxCalendar_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MtxCalendar_Conditional_2_Conditional_0_Template, 4, 5, \"button\", 6)(1, MtxCalendar_Conditional_2_Conditional_1_Template, 3, 2, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.type !== \"time\" ? 0 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.type !== \"year\" ? 1 : -1);\n  }\n}\nfunction MtxCalendar_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 22)(2, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_4_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._previousClicked());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 24);\n    i0.ɵɵelement(4, \"path\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"div\", 26);\n    i0.ɵɵlistener(\"@slideCalendar.done\", function MtxCalendar_Conditional_4_Template_div_animation_slideCalendar_done_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._calendarStateDone());\n    });\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function MtxCalendar_Conditional_4_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._nextClicked());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(9, \"svg\", 24);\n    i0.ɵɵelement(10, \"path\", 28);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r0._previousEnabled());\n    i0.ɵɵattribute(\"aria-disabled\", !ctx_r0._previousEnabled())(\"aria-label\", ctx_r0._prevButtonLabel);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"@slideCalendar\", ctx_r0._calendarState);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0._yearPeriodText);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"disabled\", !ctx_r0._nextEnabled());\n    i0.ɵɵattribute(\"aria-disabled\", !ctx_r0._nextEnabled())(\"aria-label\", ctx_r0._nextButtonLabel);\n  }\n}\nfunction MtxCalendar_Case_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mtx-month-view\", 29);\n    i0.ɵɵlistener(\"_userSelection\", function MtxCalendar_Case_5_Template_mtx_month_view__userSelection_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._userSelected());\n    })(\"selectedChange\", function MtxCalendar_Case_5_Template_mtx_month_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._dateSelected($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activeDate\", ctx_r0._activeDate)(\"dateFilter\", ctx_r0._dateFilterForViews)(\"selected\", ctx_r0.selected)(\"type\", ctx_r0.type);\n  }\n}\nfunction MtxCalendar_Case_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mtx-year-view\", 29);\n    i0.ɵɵlistener(\"_userSelection\", function MtxCalendar_Case_6_Template_mtx_year_view__userSelection_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._userSelected());\n    })(\"selectedChange\", function MtxCalendar_Case_6_Template_mtx_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._monthSelected($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activeDate\", ctx_r0._activeDate)(\"dateFilter\", ctx_r0._dateFilterForViews)(\"selected\", ctx_r0.selected)(\"type\", ctx_r0.type);\n  }\n}\nfunction MtxCalendar_Case_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mtx-multi-year-view\", 30);\n    i0.ɵɵlistener(\"_userSelection\", function MtxCalendar_Case_7_Template_mtx_multi_year_view__userSelection_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._userSelected());\n    })(\"selectedChange\", function MtxCalendar_Case_7_Template_mtx_multi_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0._yearSelected($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activeDate\", ctx_r0._activeDate)(\"dateFilter\", ctx_r0._dateFilterForViews)(\"maxDate\", ctx_r0.maxDate)(\"minDate\", ctx_r0.minDate)(\"selected\", ctx_r0.selected)(\"type\", ctx_r0.type);\n  }\n}\nfunction MtxCalendar_Case_8_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mtx-time\", 33);\n    i0.ɵɵlistener(\"_userSelection\", function MtxCalendar_Case_8_Conditional_0_Template_mtx_time__userSelection_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._userSelected());\n    })(\"activeDateChange\", function MtxCalendar_Case_8_Conditional_0_Template_mtx_time_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._onActiveDateChange($event));\n    })(\"selectedChange\", function MtxCalendar_Case_8_Conditional_0_Template_mtx_time_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._timeSelected($event));\n    })(\"ampmChange\", function MtxCalendar_Case_8_Conditional_0_Template_mtx_time_ampmChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._ampmClicked($event));\n    })(\"clockViewChange\", function MtxCalendar_Case_8_Conditional_0_Template_mtx_time_clockViewChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._clockView = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"AMPM\", ctx_r0._AMPM)(\"clockView\", ctx_r0._clockView)(\"twelvehour\", ctx_r0.twelvehour)(\"dateFilter\", ctx_r0.dateFilter)(\"interval\", ctx_r0.timeInterval)(\"maxDate\", ctx_r0.maxDate)(\"minDate\", ctx_r0.minDate)(\"selected\", ctx_r0._activeDate)(\"actionsPortal\", ctx_r0.actionsPortal);\n  }\n}\nfunction MtxCalendar_Case_8_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mtx-clock\", 34);\n    i0.ɵɵlistener(\"_userSelection\", function MtxCalendar_Case_8_Conditional_1_Template_mtx_clock__userSelection_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._userSelected());\n    })(\"activeDateChange\", function MtxCalendar_Case_8_Conditional_1_Template_mtx_clock_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._onActiveDateChange($event));\n    })(\"selectedChange\", function MtxCalendar_Case_8_Conditional_1_Template_mtx_clock_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._dialTimeSelected($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"AMPM\", ctx_r0._AMPM)(\"dateFilter\", ctx_r0.dateFilter)(\"interval\", ctx_r0.timeInterval)(\"maxDate\", ctx_r0.maxDate)(\"minDate\", ctx_r0.minDate)(\"selected\", ctx_r0._activeDate)(\"startView\", ctx_r0._clockView)(\"twelvehour\", ctx_r0.twelvehour);\n  }\n}\nfunction MtxCalendar_Case_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MtxCalendar_Case_8_Conditional_0_Template, 1, 9, \"mtx-time\", 31)(1, MtxCalendar_Case_8_Conditional_1_Template, 1, 8, \"mtx-clock\", 32);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.timeInput ? 0 : 1);\n  }\n}\nfunction MtxDatetimepickerContent_ng_template_2_Template(rf, ctx) {}\nconst _c3 = [\"button\"];\nconst _c4 = [[[\"\", \"mtxDatetimepickerToggleIcon\", \"\"]]];\nconst _c5 = [\"[mtxDatetimepickerToggleIcon]\"];\nfunction MtxDatetimepickerToggle_Conditional_2_Case_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MtxDatetimepickerToggle_Conditional_2_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MtxDatetimepickerToggle_Conditional_2_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 5)(2, \"path\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MtxDatetimepickerToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MtxDatetimepickerToggle_Conditional_2_Case_0_Template, 2, 0, \":svg:svg\", 2)(1, MtxDatetimepickerToggle_Conditional_2_Case_1_Template, 2, 0, \":svg:svg\", 2)(2, MtxDatetimepickerToggle_Conditional_2_Case_2_Template, 3, 0, \":svg:svg\", 2);\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional((tmp_2_0 = ctx_r0.datetimepicker.type) === \"time\" ? 0 : tmp_2_0 === \"datetime\" ? 1 : 2);\n  }\n}\nconst _c6 = [\"*\"];\nfunction MtxDatetimepickerActions_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nvar MtxDatetimepickerFilterType;\n(function (MtxDatetimepickerFilterType) {\n  MtxDatetimepickerFilterType[MtxDatetimepickerFilterType[\"DATE\"] = 0] = \"DATE\";\n  MtxDatetimepickerFilterType[MtxDatetimepickerFilterType[\"HOUR\"] = 1] = \"HOUR\";\n  MtxDatetimepickerFilterType[MtxDatetimepickerFilterType[\"MINUTE\"] = 2] = \"MINUTE\";\n})(MtxDatetimepickerFilterType || (MtxDatetimepickerFilterType = {}));\nconst activeEventOptions = normalizePassiveListenerOptions({\n  passive: false\n});\nconst CLOCK_RADIUS = 50;\nconst CLOCK_INNER_RADIUS = 27.5;\nconst CLOCK_OUTER_RADIUS = 41.25;\nconst CLOCK_TICK_RADIUS = 7.0833;\n/**\n * A clock that is used as part of the datetimepicker.\n * @docs-private\n */\nclass MtxClock {\n  constructor(_elementRef, _adapter, _changeDetectorRef, _document) {\n    this._elementRef = _elementRef;\n    this._adapter = _adapter;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._document = _document;\n    /** Step over minutes. */\n    this.interval = 1;\n    /** Whether the clock uses 12 hour format. */\n    this.twelvehour = false;\n    /** Whether the time is now in AM or PM. */\n    this.AMPM = 'AM';\n    /** Emits when the currently selected date changes. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date is activated. */\n    this.activeDateChange = new EventEmitter();\n    /** Emits when any date is selected. */\n    this._userSelection = new EventEmitter();\n    /** Whether the clock is in hour view. */\n    this._hourView = true;\n    this._hours = [];\n    this._minutes = [];\n    this._timeChanged = false;\n    /** Called when the user has put their pointer down on the clock. */\n    this._pointerDown = event => {\n      this._timeChanged = false;\n      this.setTime(event);\n      this._bindGlobalEvents(event);\n    };\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     */\n    this._pointerMove = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      this.setTime(event);\n    };\n    /** Called when the user has lifted their pointer. Bound on the document level. */\n    this._pointerUp = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      this._removeGlobalEvents();\n      if (this._timeChanged) {\n        this.selectedChange.emit(this.activeDate);\n        if (!this._hourView) {\n          this._userSelection.emit();\n        }\n      }\n    };\n  }\n  /**\n   * The date to display in this clock view.\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    const oldActiveDate = this._activeDate;\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\n    if (!this._adapter.sameMinute(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n    if (this._selected) {\n      this.activeDate = this._selected;\n    }\n  }\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  /** Whether the clock should be started in hour or minute view. */\n  set startView(value) {\n    this._hourView = value !== 'minute';\n  }\n  get _hand() {\n    const hour = this._adapter.getHour(this.activeDate);\n    this._selectedHour = hour;\n    this._selectedMinute = this._adapter.getMinute(this.activeDate);\n    let deg = 0;\n    let radius = CLOCK_OUTER_RADIUS;\n    if (this._hourView) {\n      const outer = this._selectedHour > 0 && this._selectedHour < 13;\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n      if (this.twelvehour) {\n        radius = CLOCK_OUTER_RADIUS;\n      }\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\n    } else {\n      deg = Math.round(this._selectedMinute * (360 / 60));\n    }\n    return {\n      height: `${radius}%`,\n      marginTop: `${50 - radius}%`,\n      transform: `rotate(${deg}deg)`\n    };\n  }\n  ngAfterContentInit() {\n    this.activeDate = this._activeDate || this._adapter.today();\n    this._init();\n  }\n  ngOnDestroy() {\n    this._removeGlobalEvents();\n  }\n  ngOnChanges() {\n    this._init();\n  }\n  /** Binds our global move and end events. */\n  _bindGlobalEvents(triggerEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n    if (isTouch) {\n      document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n  }\n  /** Removes any global event listeners that we may have added. */\n  _removeGlobalEvents() {\n    const document = this._document;\n    document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n  }\n  /** Initializes this clock view. */\n  _init() {\n    this._hours.length = 0;\n    this._minutes.length = 0;\n    const hourNames = this._adapter.getHourNames();\n    const minuteNames = this._adapter.getMinuteNames();\n    if (this.twelvehour) {\n      const hours = [];\n      for (let i = 0; i < hourNames.length; i++) {\n        const radian = i / 6 * Math.PI;\n        const radius = CLOCK_OUTER_RADIUS;\n        const hour = i;\n        const date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), hour, 0);\n        // Check if the date is enabled, no need to respect the minute setting here\n        const enabled = (!this.minDate || this._adapter.compareDatetime(date, this.minDate, false) >= 0) && (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate, false) <= 0) && (!this.dateFilter || this.dateFilter(date, MtxDatetimepickerFilterType.HOUR));\n        // display value for twelvehour clock should be from 1-12 not including 0 and not above 12\n        hours.push({\n          value: i,\n          displayValue: i % 12 === 0 ? '12' : hourNames[i % 12],\n          enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\n        });\n      }\n      // filter out AM or PM hours based on AMPM\n      if (this.AMPM === 'AM') {\n        this._hours = hours.filter(x => x.value < 12);\n      } else {\n        this._hours = hours.filter(x => x.value >= 12);\n      }\n    } else {\n      for (let i = 0; i < hourNames.length; i++) {\n        const radian = i / 6 * Math.PI;\n        const outer = i > 0 && i < 13;\n        const radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n        const date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), i, 0);\n        // Check if the date is enabled, no need to respect the minute setting here\n        const enabled = (!this.minDate || this._adapter.compareDatetime(date, this.minDate, false) >= 0) && (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate, false) <= 0) && (!this.dateFilter || this.dateFilter(date, MtxDatetimepickerFilterType.HOUR));\n        this._hours.push({\n          value: i,\n          displayValue: i === 0 ? '00' : hourNames[i],\n          enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\n          fontSize: i > 0 && i < 13 ? '' : '80%'\n        });\n      }\n    }\n    for (let i = 0; i < minuteNames.length; i += 5) {\n      const radian = i / 30 * Math.PI;\n      const date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), i);\n      const enabled = (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) && (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date, MtxDatetimepickerFilterType.MINUTE));\n      this._minutes.push({\n        value: i,\n        displayValue: i === 0 ? '00' : minuteNames[i],\n        enabled,\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\n      });\n    }\n  }\n  /**\n   * Set Time\n   * @param event\n   */\n  setTime(event) {\n    const trigger = this._elementRef.nativeElement;\n    const triggerRect = trigger.getBoundingClientRect();\n    const width = trigger.offsetWidth;\n    const height = trigger.offsetHeight;\n    const {\n      pageX,\n      pageY\n    } = getPointerPositionOnPage(event);\n    const x = width / 2 - (pageX - triggerRect.left - window.pageXOffset);\n    const y = height / 2 - (pageY - triggerRect.top - window.pageYOffset);\n    let radian = Math.atan2(-x, y);\n    const unit = Math.PI / (this._hourView ? 6 : this.interval ? 30 / this.interval : 30);\n    const z = Math.sqrt(x * x + y * y);\n    const outer = this._hourView && z > (width * (CLOCK_OUTER_RADIUS / 100) + width * (CLOCK_INNER_RADIUS / 100)) / 2;\n    if (radian < 0) {\n      radian = Math.PI * 2 + radian;\n    }\n    let value = Math.round(radian / unit);\n    let date;\n    if (this._hourView) {\n      if (this.twelvehour) {\n        if (this.AMPM === 'AM') {\n          value = value === 0 ? 12 : value;\n        } else {\n          // if we chosen 12 in PM, the value should be 0 for 0:00,\n          // else we can safely add 12 to the final value\n          value = value === 12 ? 0 : value + 12;\n        }\n      } else {\n        if (value === 12) {\n          value = 0;\n        }\n        value = outer ? value === 0 ? 12 : value : value === 0 ? 0 : value + 12;\n      }\n      date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), value, this._adapter.getMinute(this.activeDate));\n    } else {\n      if (this.interval) {\n        value *= this.interval;\n      }\n      if (value === 60) {\n        value = 0;\n      }\n      date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), value);\n    }\n    // if there is a dateFilter, check if the date is allowed if it is not then do not set/emit new date\n    // https://github.com/ng-matero/extensions/issues/244\n    if (this.dateFilter && !this.dateFilter(date, this._hourView ? MtxDatetimepickerFilterType.HOUR : MtxDatetimepickerFilterType.MINUTE)) {\n      return;\n    }\n    this._timeChanged = true;\n    this.activeDate = date;\n    this._changeDetectorRef.markForCheck();\n    this.activeDateChange.emit(this.activeDate);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxClock_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxClock)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DatetimeAdapter), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxClock,\n      selectors: [[\"mtx-clock\"]],\n      hostAttrs: [\"role\", \"clock\", 1, \"mtx-clock\"],\n      hostBindings: function MtxClock_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function MtxClock_mousedown_HostBindingHandler($event) {\n            return ctx._pointerDown($event);\n          })(\"touchstart\", function MtxClock_touchstart_HostBindingHandler($event) {\n            return ctx._pointerDown($event);\n          });\n        }\n      },\n      inputs: {\n        dateFilter: \"dateFilter\",\n        interval: \"interval\",\n        twelvehour: [2, \"twelvehour\", \"twelvehour\", booleanAttribute],\n        AMPM: \"AMPM\",\n        activeDate: \"activeDate\",\n        selected: \"selected\",\n        minDate: \"minDate\",\n        maxDate: \"maxDate\",\n        startView: \"startView\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        activeDateChange: \"activeDateChange\",\n        _userSelection: \"_userSelection\"\n      },\n      exportAs: [\"mtxClock\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 9,\n      vars: 6,\n      consts: [[1, \"mtx-clock-wrapper\"], [1, \"mtx-clock-center\"], [1, \"mtx-clock-hand\"], [1, \"mtx-clock-hours\"], [1, \"mtx-clock-cell\", 3, \"mtx-clock-cell-disabled\", \"mtx-clock-cell-selected\", \"fontSize\", \"left\", \"top\"], [1, \"mtx-clock-minutes\"], [1, \"mtx-clock-cell\", 3, \"mtx-clock-cell-disabled\", \"mtx-clock-cell-selected\", \"left\", \"top\"], [1, \"mtx-clock-cell\"]],\n      template: function MtxClock_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3);\n          i0.ɵɵrepeaterCreate(4, MtxClock_For_5_Template, 2, 11, \"div\", 4, _forTrack0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵrepeaterCreate(7, MtxClock_For_8_Template, 2, 9, \"div\", 6, _forTrack0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(ctx._hand);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"active\", ctx._hourView);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx._hours);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", !ctx._hourView);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx._minutes);\n        }\n      },\n      styles: [\".mtx-clock{position:relative;display:block;min-width:224px;margin:12px;box-sizing:border-box;-webkit-user-select:none;user-select:none;touch-action:none;font-size:var(--mtx-datetimepicker-clock-text-size, var(--mat-app-title-small-size))}.mtx-clock-wrapper{position:relative;width:100%;height:0;padding-top:100%;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-dial-background-color, var(--mat-app-surface-container-highest))}.mtx-clock-center{position:absolute;top:50%;left:50%;width:3%;height:3%;margin:-1.5%;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hand{position:absolute;inset:0;width:2px;margin:0 auto;transform-origin:bottom;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hand:before{content:\\\"\\\";position:absolute;top:-4px;left:-3px;width:8px;height:8px;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hours,.mtx-clock-minutes{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;visibility:hidden;transition:.35s;transform:scale(1.2)}.mtx-clock-hours.active,.mtx-clock-minutes.active{opacity:1;visibility:visible;transform:scale(1)}.mtx-clock-minutes{transform:scale(.8)}.mtx-clock-cell{position:absolute;display:flex;width:14.1666%;height:14.1666%;justify-content:center;box-sizing:border-box;border-radius:50%;align-items:center;cursor:pointer;color:var(--mtx-datetimepicker-clock-cell-text-color, var(--mat-app-on-surface))}.mtx-clock-cell.mtx-clock-cell-selected{color:#fff;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-cell:not(.mtx-clock-cell-selected,.mtx-clock-cell-disabled):hover{background-color:var(--mtx-datetimepicker-clock-cell-hover-state-background-color)}.mtx-clock-cell.mtx-clock-cell-disabled{pointer-events:none;color:var(--mtx-datetimepicker-clock-cell-disabled-state-text-color)}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxClock, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-clock',\n      host: {\n        'role': 'clock',\n        'class': 'mtx-clock',\n        '(mousedown)': '_pointerDown($event)',\n        '(touchstart)': '_pointerDown($event)'\n      },\n      exportAs: 'mtxClock',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<div class=\\\"mtx-clock-wrapper\\\">\\n  <div class=\\\"mtx-clock-center\\\"></div>\\n  <div class=\\\"mtx-clock-hand\\\" [style]=\\\"_hand\\\"></div>\\n  <div class=\\\"mtx-clock-hours\\\" [class.active]=\\\"_hourView\\\">\\n    @for (item of _hours; track item.value) {\\n      <div\\n        class=\\\"mtx-clock-cell\\\"\\n        [class.mtx-clock-cell-disabled]=\\\"!item.enabled\\\"\\n        [class.mtx-clock-cell-selected]=\\\"_selectedHour === item.value\\\"\\n        [style.fontSize]=\\\"item.fontSize\\\"\\n        [style.left]=\\\"item.left+'%'\\\"\\n        [style.top]=\\\"item.top+'%'\\\">{{ item.displayValue }}</div>\\n    }\\n  </div>\\n  <div class=\\\"mtx-clock-minutes\\\" [class.active]=\\\"!_hourView\\\">\\n    @for (item of _minutes; track item.value) {\\n      <div\\n        class=\\\"mtx-clock-cell\\\"\\n        [class.mtx-clock-cell-disabled]=\\\"!item.enabled\\\"\\n        [class.mtx-clock-cell-selected]=\\\"_selectedMinute === item.value\\\"\\n        [style.left]=\\\"item.left+'%'\\\"\\n        [style.top]=\\\"item.top+'%'\\\">{{ item.displayValue }}</div>\\n    }\\n  </div>\\n</div>\\n\",\n      styles: [\".mtx-clock{position:relative;display:block;min-width:224px;margin:12px;box-sizing:border-box;-webkit-user-select:none;user-select:none;touch-action:none;font-size:var(--mtx-datetimepicker-clock-text-size, var(--mat-app-title-small-size))}.mtx-clock-wrapper{position:relative;width:100%;height:0;padding-top:100%;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-dial-background-color, var(--mat-app-surface-container-highest))}.mtx-clock-center{position:absolute;top:50%;left:50%;width:3%;height:3%;margin:-1.5%;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hand{position:absolute;inset:0;width:2px;margin:0 auto;transform-origin:bottom;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hand:before{content:\\\"\\\";position:absolute;top:-4px;left:-3px;width:8px;height:8px;border-radius:50%;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-hours,.mtx-clock-minutes{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;visibility:hidden;transition:.35s;transform:scale(1.2)}.mtx-clock-hours.active,.mtx-clock-minutes.active{opacity:1;visibility:visible;transform:scale(1)}.mtx-clock-minutes{transform:scale(.8)}.mtx-clock-cell{position:absolute;display:flex;width:14.1666%;height:14.1666%;justify-content:center;box-sizing:border-box;border-radius:50%;align-items:center;cursor:pointer;color:var(--mtx-datetimepicker-clock-cell-text-color, var(--mat-app-on-surface))}.mtx-clock-cell.mtx-clock-cell-selected{color:#fff;background-color:var(--mtx-datetimepicker-clock-hand-background-color, var(--mat-app-primary))}.mtx-clock-cell:not(.mtx-clock-cell-selected,.mtx-clock-cell-disabled):hover{background-color:var(--mtx-datetimepicker-clock-cell-hover-state-background-color)}.mtx-clock-cell.mtx-clock-cell-disabled{pointer-events:none;color:var(--mtx-datetimepicker-clock-cell-disabled-state-text-color)}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.DatetimeAdapter\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    dateFilter: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    twelvehour: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    AMPM: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    startView: [{\n      type: Input\n    }]\n  });\n})();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the document. */\nfunction getPointerPositionOnPage(event) {\n  let point;\n  if (isTouchEvent(event)) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    point = event.touches[0] || event.changedTouches[0];\n  } else {\n    point = event;\n  }\n  return point;\n}\n\n/**\n * Animations used by the Material datetimepicker.\n * @docs-private\n */\nconst mtxDatetimepickerAnimations = {\n  /** Transforms the height of the datetimepicker's calendar. */\n  transformPanel: trigger('transformPanel', [transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  }), style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  })]))), transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([style({\n    opacity: 0,\n    transform: 'scale(0.7)'\n  }), style({\n    transform: 'none',\n    opacity: 1\n  })]))), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))]),\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [state('void', style({\n    opacity: 0\n  })), state('enter', style({\n    opacity: 1\n  })),\n  // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))]),\n  slideCalendar: trigger('slideCalendar', [transition('* => left', [animate(180, keyframes([style({\n    transform: 'translateX(100%)',\n    offset: 0.5\n  }), style({\n    transform: 'translateX(-100%)',\n    offset: 0.51\n  }), style({\n    transform: 'translateX(0)',\n    offset: 1\n  })]))]), transition('* => right', [animate(180, keyframes([style({\n    transform: 'translateX(-100%)',\n    offset: 0.5\n  }), style({\n    transform: 'translateX(100%)',\n    offset: 0.51\n  }), style({\n    transform: 'translateX(0)',\n    offset: 1\n  })]))])])\n};\n\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n  return Error(`MtxDatetimepicker: No provider found for ${provider}. You must add one of the following ` + `to your app config: provideNativeDatetimeAdapter, provideDateFnsDatetimeAdapter,` + `provideLuxonDatetimeAdapter, provideMomentDatetimeAdapter, or provide a ` + `custom implementation.`);\n}\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MtxCalendarCell {\n  constructor(value, displayValue, ariaLabel, enabled) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n  }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MtxCalendarBody {\n  constructor() {\n    /** The number of columns in the table. */\n    this.numCols = 7;\n    /** Whether to allow selection of disabled cells. */\n    this.allowDisabledSelection = false;\n    /** The cell number of the active cell in the table. */\n    this.activeCell = 0;\n    /** Emits when a new value is selected. */\n    this.selectedValueChange = new EventEmitter();\n  }\n  /** The number of blank cells to put at the beginning for the first row. */\n  get _firstRowOffset() {\n    return this.rows && this.rows.length && this.rows[0].length ? this.numCols - this.rows[0].length : 0;\n  }\n  _cellClicked(cell) {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n  _isActiveCell(rowIndex, colIndex) {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n    return cellNumber === this.activeCell;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxCalendarBody_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxCalendarBody)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxCalendarBody,\n      selectors: [[\"\", \"mtx-calendar-body\", \"\"]],\n      hostAttrs: [1, \"mtx-calendar-body\"],\n      inputs: {\n        label: \"label\",\n        rows: \"rows\",\n        todayValue: \"todayValue\",\n        selectedValue: \"selectedValue\",\n        labelMinRequiredCells: \"labelMinRequiredCells\",\n        numCols: \"numCols\",\n        allowDisabledSelection: \"allowDisabledSelection\",\n        activeCell: \"activeCell\"\n      },\n      outputs: {\n        selectedValueChange: \"selectedValueChange\"\n      },\n      exportAs: [\"mtxCalendarBody\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 3,\n      vars: 1,\n      consts: [[\"aria-hidden\", \"true\"], [\"role\", \"row\"], [1, \"mtx-calendar-body-label\"], [\"aria-hidden\", \"true\", 1, \"mtx-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mtx-calendar-body-cell\", 3, \"mtx-calendar-body-active\", \"mtx-calendar-body-disabled\", \"tabindex\"], [\"role\", \"gridcell\", 1, \"mtx-calendar-body-cell\", 3, \"click\", \"tabindex\"], [1, \"mtx-calendar-body-cell-content\"]],\n      template: function MtxCalendarBody_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, MtxCalendarBody_Conditional_0_Template, 3, 2, \"tr\", 0);\n          i0.ɵɵrepeaterCreate(1, MtxCalendarBody_For_2_Template, 4, 1, \"tr\", 1, i0.ɵɵrepeaterTrackByIdentity);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx._firstRowOffset < ctx.labelMinRequiredCells ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx.rows);\n        }\n      },\n      styles: [\".mtx-calendar-body{min-width:224px}.mtx-calendar-body-today:not(.mtx-calendar-body-selected){border-color:var(--mtx-datetimepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mtx-calendar-body-label{height:0;line-height:0;text-align:left;padding:7.1428571429% 4.7142857143%;font-size:var(--mtx-datetimepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mtx-datetimepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mtx-datetimepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}[dir=rtl] .mtx-calendar-body-label{text-align:right}.mtx-calendar-body-cell{position:relative;width:14.2857142857%;height:0;line-height:0;padding:7.1428571429% 0;text-align:center;outline:none;cursor:pointer}.mtx-calendar-body-disabled{cursor:default;pointer-events:none}.mtx-calendar-body-disabled>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-body-disabled>.mtx-calendar-body-today:not(.mtx-calendar-body-selected){border-color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;border:1px solid transparent;border-radius:999px;color:var(--mtx-datetimepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mtx-datetimepicker-calendar-date-outline-color)}.mtx-calendar-body-active>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){background-color:var(--mtx-datetimepicker-calendar-date-focus-state-background-color)}@media (hover: hover){.mtx-calendar-body-cell:not(.mtx-calendar-body-disabled):hover>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){background-color:var(--mtx-datetimepicker-calendar-date-hover-state-background-color)}}.mtx-calendar-body-selected{background-color:var(--mtx-datetimepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mtx-datetimepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mtx-calendar-body-disabled>.mtx-calendar-body-selected{background-color:var(--mtx-datetimepicker-calendar-date-selected-disabled-state-background-color)}.mtx-calendar-body-selected.mtx-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mtx-datetimepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mtx-calendar-body]',\n      host: {\n        class: 'mtx-calendar-body'\n      },\n      exportAs: 'mtxCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n@if (_firstRowOffset < labelMinRequiredCells) {\\n  <tr aria-hidden=\\\"true\\\">\\n    <td class=\\\"mtx-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\">{{ label }}</td>\\n  </tr>\\n}\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n@for (row of rows; track row; let rowIndex = $index) {\\n  <tr role=\\\"row\\\">\\n    <!--\\n      We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    -->\\n    @if (rowIndex === 0 && _firstRowOffset) {\\n      <td\\n        class=\\\"mtx-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" aria-hidden=\\\"true\\\">\\n        {{ _firstRowOffset >= labelMinRequiredCells ? label : '' }}\\n      </td>\\n    }\\n    @for (item of row; track item; let colIndex = $index) {\\n      <td\\n        role=\\\"gridcell\\\"\\n        class=\\\"mtx-calendar-body-cell\\\"\\n        [class.mtx-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n        [class.mtx-calendar-body-disabled]=\\\"!item.enabled\\\"\\n        [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n        [attr.data-mat-row]=\\\"rowIndex\\\"\\n        [attr.data-mat-col]=\\\"colIndex\\\"\\n        [attr.aria-label]=\\\"item.ariaLabel\\\"\\n        [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n        (click)=\\\"_cellClicked(item)\\\">\\n        <div class=\\\"mtx-calendar-body-cell-content\\\"\\n          [class.mtx-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n          [class.mtx-calendar-body-today]=\\\"todayValue === item.value\\\"\\n          [attr.aria-selected]=\\\"selectedValue === item.value\\\">\\n          {{ item.displayValue }}\\n        </div>\\n      </td>\\n    }\\n  </tr>\\n}\\n\",\n      styles: [\".mtx-calendar-body{min-width:224px}.mtx-calendar-body-today:not(.mtx-calendar-body-selected){border-color:var(--mtx-datetimepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mtx-calendar-body-label{height:0;line-height:0;text-align:left;padding:7.1428571429% 4.7142857143%;font-size:var(--mtx-datetimepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mtx-datetimepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mtx-datetimepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}[dir=rtl] .mtx-calendar-body-label{text-align:right}.mtx-calendar-body-cell{position:relative;width:14.2857142857%;height:0;line-height:0;padding:7.1428571429% 0;text-align:center;outline:none;cursor:pointer}.mtx-calendar-body-disabled{cursor:default;pointer-events:none}.mtx-calendar-body-disabled>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-body-disabled>.mtx-calendar-body-today:not(.mtx-calendar-body-selected){border-color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;border:1px solid transparent;border-radius:999px;color:var(--mtx-datetimepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mtx-datetimepicker-calendar-date-outline-color)}.mtx-calendar-body-active>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){background-color:var(--mtx-datetimepicker-calendar-date-focus-state-background-color)}@media (hover: hover){.mtx-calendar-body-cell:not(.mtx-calendar-body-disabled):hover>.mtx-calendar-body-cell-content:not(.mtx-calendar-body-selected){background-color:var(--mtx-datetimepicker-calendar-date-hover-state-background-color)}}.mtx-calendar-body-selected{background-color:var(--mtx-datetimepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mtx-datetimepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mtx-calendar-body-disabled>.mtx-calendar-body-selected{background-color:var(--mtx-datetimepicker-calendar-date-selected-disabled-state-background-color)}.mtx-calendar-body-selected.mtx-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mtx-datetimepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}\\n\"]\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    selectedValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }],\n    numCols: [{\n      type: Input\n    }],\n    allowDisabledSelection: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }]\n  });\n})();\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datetimepicker.\n * @docs-private\n */\nclass MtxMonthView {\n  constructor(_adapter, _dateFormats) {\n    this._adapter = _adapter;\n    this._dateFormats = _dateFormats;\n    this.type = 'date';\n    /** Emits when a new date is selected. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date is selected. */\n    this._userSelection = new EventEmitter();\n    if (!this._adapter) {\n      throw createMissingDateImplError('DatetimeAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MTX_DATETIME_FORMATS');\n    }\n    const firstDayOfWeek = this._adapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._adapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._adapter.getDayOfWeekNames('long');\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    const weekdays = longWeekdays.map((long, i) => {\n      return {\n        long,\n        narrow: narrowWeekdays[i]\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    this._activeDate = this._adapter.today();\n  }\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    const oldActiveDate = this._activeDate;\n    this._activeDate = value || this._adapter.today();\n    if (oldActiveDate && this._activeDate && !this._adapter.sameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      if (this._adapter.isInNextMonth(oldActiveDate, this._activeDate)) {\n        this.calendarState('right');\n      } else {\n        this.calendarState('left');\n      }\n    }\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = value;\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n  }\n  ngAfterContentInit() {\n    this._init();\n  }\n  /** Handles when a new date is selected. */\n  _dateSelected(date) {\n    const dateObject = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), date, this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n    this.selectedChange.emit(dateObject);\n    this._activeDate = dateObject;\n    if (this.type === 'date') {\n      this._userSelection.emit();\n    }\n  }\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._adapter.today());\n    const firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), 1, this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n    this._firstWeekOffset = (DAYS_PER_WEEK + this._adapter.getDayOfWeek(firstOfMonth) - this._adapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n    this._createWeekCells();\n  }\n  /** Creates MdCalendarCells for the dates in this month. */\n  _createWeekCells() {\n    const daysInMonth = this._adapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._adapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell === DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), i + 1, this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n      const enabled = !this.dateFilter || this.dateFilter(date);\n      const ariaLabel = this._adapter.format(date, this._dateFormats.display.dateA11yLabel);\n      this._weeks[this._weeks.length - 1].push(new MtxCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n    }\n  }\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  _getDateInCurrentMonth(date) {\n    return this._adapter.sameMonthAndYear(date, this.activeDate) ? this._adapter.getDate(date) : null;\n  }\n  calendarState(direction) {\n    this._calendarState = direction;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxMonthView_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxMonthView)(i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(MTX_DATETIME_FORMATS, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxMonthView,\n      selectors: [[\"mtx-month-view\"]],\n      inputs: {\n        type: \"type\",\n        dateFilter: \"dateFilter\",\n        activeDate: \"activeDate\",\n        selected: \"selected\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        _userSelection: \"_userSelection\"\n      },\n      exportAs: [\"mtxMonthView\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 5,\n      consts: [[\"role\", \"grid\", 1, \"mtx-calendar-table\"], [1, \"mtx-calendar-table-header\"], [\"mtx-calendar-body\", \"\", 3, \"selectedValueChange\", \"rows\", \"todayValue\", \"activeCell\", \"selectedValue\"]],\n      template: function MtxMonthView_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n          i0.ɵɵrepeaterCreate(3, MtxMonthView_For_4_Template, 2, 2, \"th\", null, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"tbody\", 2);\n          i0.ɵɵlistener(\"@slideCalendar.done\", function MtxMonthView_Template_tbody_animation_slideCalendar_done_5_listener() {\n            return ctx._calendarStateDone();\n          })(\"selectedValueChange\", function MtxMonthView_Template_tbody_selectedValueChange_5_listener($event) {\n            return ctx._dateSelected($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵrepeater(ctx._weekdays);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"@slideCalendar\", ctx._calendarState)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"activeCell\", ctx._adapter.getDate(ctx.activeDate) - 1)(\"selectedValue\", ctx._selectedDate);\n        }\n      },\n      dependencies: [MtxCalendarBody],\n      encapsulation: 2,\n      data: {\n        animation: [mtxDatetimepickerAnimations.slideCalendar]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-month-view',\n      exportAs: 'mtxMonthView',\n      animations: [mtxDatetimepickerAnimations.slideCalendar],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MtxCalendarBody],\n      template: \"<table class=\\\"mtx-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mtx-calendar-table-header\\\">\\n    <tr>\\n      @for (day of _weekdays; track day) {\\n        <th [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n      }\\n    </tr>\\n  </thead>\\n  <tbody mtx-calendar-body\\n    (@slideCalendar.done)=\\\"_calendarStateDone()\\\"\\n    [@slideCalendar]=\\\"_calendarState\\\"\\n    [rows]=\\\"_weeks\\\"\\n    [todayValue]=\\\"_todayDate!\\\"\\n    [activeCell]=\\\"_adapter.getDate(activeDate) - 1\\\"\\n    [selectedValue]=\\\"_selectedDate!\\\"\\n    (selectedValueChange)=\\\"_dateSelected($event)\\\"></tbody>\\n</table>\\n\"\n    }]\n  }], () => [{\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MTX_DATETIME_FORMATS]\n    }]\n  }], {\n    type: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display multiple years in the datetimepicker.\n * @docs-private\n */\nclass MtxMultiYearView {\n  constructor(_adapter, _dateFormats) {\n    this._adapter = _adapter;\n    this._dateFormats = _dateFormats;\n    this.type = 'date';\n    /** Emits when a new month is selected. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date is selected. */\n    this._userSelection = new EventEmitter();\n    if (!this._adapter) {\n      throw createMissingDateImplError('DatetimeAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MTX_DATETIME_FORMATS');\n    }\n    this._activeDate = this._adapter.today();\n  }\n  /** The date to display in this multi year view */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    const oldActiveDate = this._activeDate;\n    this._activeDate = value || this._adapter.today();\n    if (oldActiveDate && this._activeDate && !isSameMultiYearView(this._adapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = value;\n    this._selectedYear = this._selected && this._adapter.getYear(this._selected);\n  }\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  ngAfterContentInit() {\n    this._init();\n  }\n  /** Handles when a new year is selected. */\n  _yearSelected(year) {\n    const month = this._adapter.getMonth(this.activeDate);\n    const normalizedDate = this._adapter.createDatetime(year, month, 1, 0, 0);\n    const dateObject = this._adapter.createDatetime(year, month, Math.min(this._adapter.getDate(this.activeDate), this._adapter.getNumDaysInMonth(normalizedDate)), this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n    this.selectedChange.emit(dateObject);\n    this._activeDate = dateObject;\n    if (this.type === 'year') {\n      this._userSelection.emit();\n    }\n  }\n  _getActiveCell() {\n    return getActiveOffset(this._adapter, this.activeDate, this.minDate, this.maxDate);\n  }\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n  /** Initializes this year view. */\n  _init() {\n    this._todayYear = this._adapter.getYear(this._adapter.today());\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\n    const activeYear = this._adapter.getYear(this.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(this._adapter, this.activeDate, this.minDate, this.maxDate);\n    this._years = [];\n    for (let i = 0, row = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length === yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n  }\n  /** Creates an MtxCalendarCell for the given year. */\n  _createCellForYear(year) {\n    const yearName = this._adapter.getYearName(this._adapter.createDate(year, 0, 1));\n    return new MtxCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n  /** Whether the given year is enabled. */\n  _shouldEnableYear(year) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null || this.maxDate && year > this._adapter.getYear(this.maxDate) || this.minDate && year < this._adapter.getYear(this.minDate)) {\n      return false;\n    }\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n    const firstOfYear = this._adapter.createDate(year, 0, 1);\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._adapter.getYear(date) === year; date = this._adapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Gets the year in this years range that the given Date falls on.\n   * Returns null if the given Date is not in this range.\n   */\n  _getYearInCurrentRange(date) {\n    const year = this._adapter.getYear(date);\n    return this._isInRange(year) ? year : null;\n  }\n  /**\n   * Validate if the current year is in the current range\n   * Returns true if is in range else returns false\n   */\n  _isInRange(year) {\n    return true;\n  }\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._adapter.isDateInstance(obj) && this._adapter.isValid(obj) ? obj : null;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxMultiYearView_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxMultiYearView)(i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(MTX_DATETIME_FORMATS, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxMultiYearView,\n      selectors: [[\"mtx-multi-year-view\"]],\n      inputs: {\n        type: \"type\",\n        dateFilter: \"dateFilter\",\n        activeDate: \"activeDate\",\n        selected: \"selected\",\n        minDate: \"minDate\",\n        maxDate: \"maxDate\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        _userSelection: \"_userSelection\"\n      },\n      exportAs: [\"mtxMultiYearView\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 7,\n      consts: [[\"role\", \"grid\", 1, \"mtx-calendar-table\"], [1, \"mtx-calendar-table-header\"], [\"mtx-calendar-body\", \"\", 3, \"selectedValueChange\", \"todayValue\", \"rows\", \"numCols\", \"activeCell\", \"allowDisabledSelection\", \"selectedValue\"]],\n      template: function MtxMultiYearView_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0);\n          i0.ɵɵelement(1, \"thead\", 1);\n          i0.ɵɵelementStart(2, \"tbody\", 2);\n          i0.ɵɵlistener(\"@slideCalendar.done\", function MtxMultiYearView_Template_tbody_animation_slideCalendar_done_2_listener() {\n            return ctx._calendarStateDone();\n          })(\"selectedValueChange\", function MtxMultiYearView_Template_tbody_selectedValueChange_2_listener($event) {\n            return ctx._yearSelected($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"@slideCalendar\", ctx._calendarState)(\"todayValue\", ctx._todayYear)(\"rows\", ctx._years)(\"numCols\", 4)(\"activeCell\", ctx._getActiveCell())(\"allowDisabledSelection\", true)(\"selectedValue\", ctx._selectedYear);\n        }\n      },\n      dependencies: [MtxCalendarBody],\n      encapsulation: 2,\n      data: {\n        animation: [mtxDatetimepickerAnimations.slideCalendar]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-multi-year-view',\n      exportAs: 'mtxMultiYearView',\n      animations: [mtxDatetimepickerAnimations.slideCalendar],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MtxCalendarBody],\n      template: \"<table class=\\\"mtx-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mtx-calendar-table-header\\\"></thead>\\n  <tbody mtx-calendar-body\\n         (@slideCalendar.done)=\\\"_calendarStateDone()\\\"\\n         [@slideCalendar]=\\\"_calendarState\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [rows]=\\\"_years\\\"\\n         [numCols]=\\\"4\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         [allowDisabledSelection]=\\\"true\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"></tbody>\\n</table>\\n\"\n    }]\n  }], () => [{\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MTX_DATETIME_FORMATS]\n    }]\n  }], {\n    type: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }]\n  });\n})();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\nclass MtxDatetimepickerIntl {\n  constructor() {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    this.changes = new Subject();\n    /** A label for the calendar popup (used by screen readers). */\n    this.calendarLabel = 'Calendar';\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    this.openCalendarLabel = 'Open calendar';\n    /** Label for the button used to close the calendar popup. */\n    this.closeCalendarLabel = 'Close calendar';\n    /** A label for the previous month button (used by screen readers). */\n    this.prevMonthLabel = 'Previous month';\n    /** A label for the next month button (used by screen readers). */\n    this.nextMonthLabel = 'Next month';\n    /** A label for the previous year button (used by screen readers). */\n    this.prevYearLabel = 'Previous year';\n    /** A label for the next year button (used by screen readers). */\n    this.nextYearLabel = 'Next year';\n    /** A label for the previous multi-year button (used by screen readers). */\n    this.prevMultiYearLabel = 'Previous 24 years';\n    /** A label for the next multi-year button (used by screen readers). */\n    this.nextMultiYearLabel = 'Next 24 years';\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    this.switchToMonthViewLabel = 'Choose date';\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    this.switchToYearViewLabel = 'Choose month';\n    /** A label for the 'switch to multi-year view' button (used by screen readers). */\n    this.switchToMultiYearViewLabel = 'Choose month and year';\n    /** A label for the first date of a range of dates (used by screen readers). */\n    this.startDateLabel = 'Start date';\n    /** A label for the last date of a range of dates (used by screen readers). */\n    this.endDateLabel = 'End date';\n    /** A label for the 'switch to clock hour view' button (used by screen readers). */\n    this.switchToClockHourViewLabel = 'Choose hour';\n    /** A label for the 'switch to clock minute view' button (used by screen readers). */\n    this.switchToClockMinuteViewLabel = 'Choose minute';\n    /** Label used for ok button within the manual time input. */\n    this.okLabel = 'OK';\n    /** Label used for cancel button within the manual time input. */\n    this.cancelLabel = 'Cancel';\n  }\n  /** Formats a range of years (used for visuals). */\n  formatYearRange(start, end) {\n    return `${start} \\u2013 ${end}`;\n  }\n  /** Formats a label for a range of years (used by screen readers). */\n  formatYearRangeLabel(start, end) {\n    return `${start} to ${end}`;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerIntl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerIntl)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MtxDatetimepickerIntl,\n      factory: MtxDatetimepickerIntl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction pad(num, size) {\n  num = String(num);\n  while (num.length < size) num = '0' + num;\n  return num;\n}\nclass MtxTimeInput {\n  set timeInterval(value) {\n    this._interval = coerceNumberProperty(value);\n  }\n  set timeMin(value) {\n    this._min = coerceNumberProperty(value);\n  }\n  set timeMax(value) {\n    this._max = coerceNumberProperty(value);\n  }\n  set timeValue(value) {\n    this._value = coerceNumberProperty(value);\n    if (!this.hasFocus) {\n      this.writeValue(this._value);\n    }\n    this.writePlaceholder(this._value);\n  }\n  constructor(element, cdr) {\n    this.element = element;\n    this.cdr = cdr;\n    this._interval = 1;\n    this._min = 0;\n    this._max = Infinity;\n    this.timeValueChanged = new EventEmitter();\n    this.keyDownListener = this.keyDownHandler.bind(this);\n    this.keyPressListener = this.keyPressHandler.bind(this);\n    this.inputEventListener = this.inputChangedHandler.bind(this);\n    this.inputElement.addEventListener('keydown', this.keyDownListener, {\n      passive: true\n    });\n    // Do not passive since we want to be able to preventDefault()\n    this.inputElement.addEventListener('keypress', this.keyPressListener);\n    this.inputElement.addEventListener('input', this.inputEventListener, {\n      passive: true\n    });\n  }\n  get hasFocus() {\n    return this.element.nativeElement && this.element?.nativeElement === document?.activeElement;\n  }\n  get inputElement() {\n    return this.element.nativeElement;\n  }\n  // We look here at the placeholder value, because we write '' into the value on focus\n  // placeholder should always be up to date with \"currentValue\"\n  get valid() {\n    // At the start _value is undefined therefore this would result in not valid and\n    // make a ugly warning border afterwards we can safely check\n    if (this._value) {\n      const currentValue = String(this.inputElement.value);\n      // It can be that currentValue is empty due to we removing the value on focus,\n      // if that is the case we should check previous value which should be in the placeholder\n      if (currentValue.length) {\n        return this._value == this.inputElement.value;\n      } else {\n        return this._value == this.inputElement.placeholder;\n      }\n    }\n    return true;\n  }\n  get invalid() {\n    return !this.valid;\n  }\n  blur() {\n    this.writeValue(this._value);\n    this.writePlaceholder(this._value);\n  }\n  focus() {\n    this.writeValue('');\n  }\n  /**\n   * Write value to inputElement\n   * @param value NumberInput\n   */\n  writeValue(value) {\n    if (value !== '') {\n      this.inputElement.value = pad(value, 2);\n    } else {\n      this.inputElement.value = '';\n    }\n    this.cdr.markForCheck();\n  }\n  /**\n   * Writes value to placeholder\n   * @param value NumberInput\n   */\n  writePlaceholder(value) {\n    this.inputElement.placeholder = pad(value, 2);\n    this.cdr.markForCheck();\n  }\n  keyDownHandler(event) {\n    if (String(this.inputElement.value).length > 0) {\n      let value = null;\n      if (event.keyCode === UP_ARROW) {\n        value = coerceNumberProperty(this._value);\n        value += this._interval;\n        event.stopPropagation();\n      } else if (event.keyCode === DOWN_ARROW) {\n        value = coerceNumberProperty(this._value);\n        value -= this._interval;\n        event.stopPropagation();\n      }\n      // if value has changed\n      if (typeof value === 'number') {\n        this.writeValue(value);\n        this.writePlaceholder(value);\n        this.clampInputValue();\n        this.timeValueChanged.emit(this._value);\n      }\n    }\n  }\n  /**\n   * Prevent non number inputs in the inputElement with the exception of Enter/BackSpace\n   * @param event KeyboardEvent\n   */\n  keyPressHandler(event) {\n    const key = event?.key ?? null;\n    if (isNaN(Number(key)) && key !== 'Enter') {\n      event.preventDefault();\n    }\n  }\n  inputChangedHandler() {\n    this.clampInputValue();\n    this.timeValueChanged.emit(this._value);\n  }\n  clampInputValue() {\n    if (this.inputElement?.value === '') {\n      return;\n    }\n    const value = coerceNumberProperty(this.inputElement?.value ?? null);\n    // if this._min === 0, we should allow 0\n    if (value || this._min === 0 && value === 0) {\n      const clampedValue = Math.min(Math.max(value, this._min), this._max);\n      if (clampedValue !== value) {\n        this.writeValue(clampedValue);\n        this.writePlaceholder(clampedValue);\n      }\n      this._value = clampedValue;\n    }\n  }\n  /**\n   * Remove event listeners on destruction\n   */\n  ngOnDestroy() {\n    this.inputElement.removeEventListener('keydown', this.keyDownListener);\n    this.inputElement.removeEventListener('keypress', this.keyPressListener);\n    this.inputElement.removeEventListener('input', this.inputEventListener);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxTimeInput_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxTimeInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxTimeInput,\n      selectors: [[\"input\", 8, \"mtx-time-input\"]],\n      hostBindings: function MtxTimeInput_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"blur\", function MtxTimeInput_blur_HostBindingHandler($event) {\n            return ctx.blur($event);\n          })(\"focus\", function MtxTimeInput_focus_HostBindingHandler($event) {\n            return ctx.focus($event);\n          });\n        }\n      },\n      inputs: {\n        timeInterval: \"timeInterval\",\n        timeMin: \"timeMin\",\n        timeMax: \"timeMax\",\n        timeValue: \"timeValue\"\n      },\n      outputs: {\n        timeValueChanged: \"timeValueChanged\"\n      },\n      exportAs: [\"mtxTimeInput\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxTimeInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input.mtx-time-input',\n      host: {\n        '(blur)': 'blur($event)',\n        '(focus)': 'focus($event)'\n      },\n      exportAs: 'mtxTimeInput',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    timeInterval: [{\n      type: Input,\n      args: ['timeInterval']\n    }],\n    timeMin: [{\n      type: Input,\n      args: ['timeMin']\n    }],\n    timeMax: [{\n      type: Input,\n      args: ['timeMax']\n    }],\n    timeValue: [{\n      type: Input,\n      args: ['timeValue']\n    }],\n    timeValueChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass MtxTime {\n  /**\n   * The date to display in this clock view.\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n    if (this._selected) {\n      this.activeDate = this._selected;\n    }\n  }\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n  /** Whether the clock should be started in hour or minute view. */\n  get clockView() {\n    return this._clockView;\n  }\n  set clockView(value) {\n    this._clockView = value;\n  }\n  get isHourView() {\n    return this._clockView === 'hour';\n  }\n  get isMinuteView() {\n    return this._clockView === 'hour';\n  }\n  get hour() {\n    if (!this.activeDate) {\n      if (this.twelvehour) {\n        return '12';\n      } else {\n        return '00';\n      }\n    }\n    const hour = Number(this._adapter.getHour(this.activeDate));\n    if (!this.twelvehour) {\n      return this.prefixWithZero(hour);\n    }\n    if (hour === 0) {\n      return '12';\n    } else {\n      return this.prefixWithZero(hour > 12 ? hour - 12 : hour);\n    }\n  }\n  get minute() {\n    if (this.activeDate) {\n      return this.prefixWithZero(this._adapter.getMinute(this.activeDate));\n    }\n    return '00';\n  }\n  prefixWithZero(value) {\n    if (value < 10) {\n      return '0' + String(value);\n    }\n    return String(value);\n  }\n  constructor(_adapter, _changeDetectorRef, _datetimepickerIntl) {\n    this._adapter = _adapter;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._datetimepickerIntl = _datetimepickerIntl;\n    /** Emits when the currently selected date changes. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date changes. */\n    this.activeDateChange = new EventEmitter();\n    /** Emits when any date is selected. */\n    this._userSelection = new EventEmitter();\n    /** Emits when AM/PM button are clicked. */\n    this.ampmChange = new EventEmitter();\n    /** Emits when AM/PM button are clicked. */\n    this.clockViewChange = new EventEmitter();\n    /** Step over minutes. */\n    this.interval = 1;\n    /** Input for action buttons. */\n    this.actionsPortal = null;\n    /** Whether the clock uses 12 hour format. */\n    this.twelvehour = false;\n    /** Whether the time is now in AM or PM. */\n    this.AMPM = 'AM';\n    /** Whether the clock is in hour view. */\n    this._clockView = 'hour';\n    this.datetimepickerIntlChangesSubscription = this._datetimepickerIntl.changes.subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n    });\n  }\n  ngOnChanges(changes) {\n    // when clockView changes by input we should focus the correct input\n    if (changes.clockView) {\n      if (changes.clockView.currentValue !== changes.clockView.previousValue) {\n        this.focusInputElement();\n      }\n    }\n  }\n  ngAfterViewInit() {\n    this.focusInputElement();\n  }\n  ngOnDestroy() {\n    if (this.datetimepickerIntlChangesSubscription) {\n      this.datetimepickerIntlChangesSubscription.unsubscribe();\n    }\n  }\n  focusInputElement() {\n    if (this.clockView === 'hour') {\n      if (this.hourInputElement) {\n        this.hourInputElement.nativeElement.focus();\n      }\n    } else {\n      if (this.minuteInputElement) {\n        this.minuteInputElement.nativeElement.focus();\n      }\n    }\n  }\n  _handleHourInputChange(value) {\n    const hour = coerceNumberProperty(value);\n    if (hour || hour === 0) {\n      const newValue = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), this._updateHourForAmPm(hour), this._adapter.getMinute(this.activeDate));\n      this._activeDate = this._adapter.clampDate(newValue, this.minDate, this.maxDate);\n      this.activeDateChange.emit(this.activeDate);\n      // If previously we did set [mtxValue]=\"13\" and the input changed to 6, and the clamping\n      // will make it \"13\" again then the hourInputDirective will not have been updated\n      // since \"13\" === \"13\" same reference so no change detected by directly setting it within\n      // this handler, we handle this usecase\n      if (this.hourInputDirective) {\n        this.hourInputDirective.timeValue = this.hour;\n      }\n    }\n  }\n  _updateHourForAmPm(value) {\n    if (!this.twelvehour) {\n      return value;\n    }\n    // value should be between 1-12\n    if (this.AMPM === 'AM') {\n      if (value === 0 || value === 12) {\n        return 0;\n      }\n      return value;\n    }\n    // PM\n    else {\n      if (value === 0 || value === 12) {\n        return 12;\n      }\n      // other cases, we should add 12 to the value aka 3:00 PM = 3 + 12 = 15:00\n      return value + 12;\n    }\n  }\n  _handleMinuteInputChange(value) {\n    const minute = coerceNumberProperty(value);\n    if (minute || minute === 0) {\n      const newValue = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate), this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), minute);\n      this._activeDate = this._adapter.clampDate(newValue, this.minDate, this.maxDate);\n      this.activeDateChange.emit(this.activeDate);\n      // If previously we did set [mtxValue]=\"40\" and the input changed to 30, and the clamping\n      // will make it \"40\" again then the minuteInputDirective will not have been updated\n      // since \"40\" === \"40\" same reference so no change detected by directly setting it within\n      // this handler, we handle this usecase\n      if (this.minuteInputDirective) {\n        this.minuteInputDirective.timeValue = this.minute;\n      }\n    }\n  }\n  _handleFocus(clockView) {\n    this.clockView = clockView;\n    this.clockViewChange.emit(clockView);\n  }\n  _timeSelected(date) {\n    if (this.clockView === 'hour') {\n      this.clockView = 'minute';\n    }\n    this._activeDate = this.selected = date;\n  }\n  _onActiveDateChange(date) {\n    this._activeDate = date;\n    this.activeDateChange.emit(date);\n  }\n  _handleSelection() {\n    if (this.actionsPortal && this._selected) {\n      this.selectedChange.emit(this._selected);\n    }\n  }\n  _handleOk() {\n    if (this._selected) {\n      this.selectedChange.emit(this._selected);\n    }\n    this._userSelection.emit();\n  }\n  _handleCancel() {\n    this._userSelection.emit();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxTime_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxTime)(i0.ɵɵdirectiveInject(i1.DatetimeAdapter), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MtxDatetimepickerIntl));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxTime,\n      selectors: [[\"mtx-time\"]],\n      viewQuery: function MtxTime_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 5, ElementRef);\n          i0.ɵɵviewQuery(_c1, 5, MtxTimeInput);\n          i0.ɵɵviewQuery(_c2, 5, ElementRef);\n          i0.ɵɵviewQuery(_c2, 5, MtxTimeInput);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hourInputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hourInputDirective = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minuteInputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minuteInputDirective = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mtx-time\"],\n      inputs: {\n        dateFilter: \"dateFilter\",\n        interval: \"interval\",\n        actionsPortal: \"actionsPortal\",\n        twelvehour: [2, \"twelvehour\", \"twelvehour\", booleanAttribute],\n        AMPM: \"AMPM\",\n        activeDate: \"activeDate\",\n        selected: \"selected\",\n        minDate: \"minDate\",\n        maxDate: \"maxDate\",\n        clockView: \"clockView\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        activeDateChange: \"activeDateChange\",\n        _userSelection: \"_userSelection\",\n        ampmChange: \"ampmChange\",\n        clockViewChange: \"clockViewChange\"\n      },\n      exportAs: [\"mtxTime\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 11,\n      vars: 25,\n      consts: [[\"hourInput\", \"mtxTimeInput\"], [\"minuteInput\", \"mtxTimeInput\"], [1, \"mtx-time-input-wrapper\"], [1, \"mtx-time-input-inner\"], [\"type\", \"text\", \"inputmode\", \"numeric\", \"maxlength\", \"2\", 1, \"mtx-time-input\", 3, \"timeValueChanged\", \"focus\", \"timeMin\", \"timeMax\", \"timeValue\"], [1, \"mtx-time-seperator\"], [\"type\", \"text\", \"inputmode\", \"numeric\", \"maxlength\", \"2\", 1, \"mtx-time-input\", 3, \"timeValueChanged\", \"focus\", \"timeMin\", \"timeMax\", \"timeValue\", \"timeInterval\"], [1, \"mtx-time-ampm\"], [3, \"selectedChange\", \"activeDateChange\", \"_userSelection\", \"AMPM\", \"dateFilter\", \"interval\", \"maxDate\", \"minDate\", \"selected\", \"startView\", \"twelvehour\"], [1, \"mtx-time-button-wrapper\"], [\"mat-button\", \"\", \"type\", \"button\", \"aria-label\", \"AM\", 1, \"mtx-time-am\", 3, \"keydown\", \"click\"], [\"mat-button\", \"\", \"type\", \"button\", \"aria-label\", \"PM\", 1, \"mtx-time-pm\", 3, \"keydown\", \"click\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-time-cancel-button\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-time-ok-button\", 3, \"click\", \"disabled\"]],\n      template: function MtxTime_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"input\", 4, 0);\n          i0.ɵɵlistener(\"timeValueChanged\", function MtxTime_Template_input_timeValueChanged_2_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleHourInputChange($event));\n          })(\"focus\", function MtxTime_Template_input_focus_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleFocus(\"hour\"));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 5);\n          i0.ɵɵtext(5, \":\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 6, 1);\n          i0.ɵɵlistener(\"timeValueChanged\", function MtxTime_Template_input_timeValueChanged_6_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleMinuteInputChange($event));\n          })(\"focus\", function MtxTime_Template_input_focus_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleFocus(\"minute\"));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, MtxTime_Conditional_8_Template, 5, 4, \"div\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"mtx-clock\", 8);\n          i0.ɵɵlistener(\"selectedChange\", function MtxTime_Template_mtx_clock_selectedChange_9_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._timeSelected($event));\n          })(\"activeDateChange\", function MtxTime_Template_mtx_clock_activeDateChange_9_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onActiveDateChange($event));\n          })(\"_userSelection\", function MtxTime_Template_mtx_clock__userSelection_9_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleSelection());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, MtxTime_Conditional_10_Template, 5, 3, \"div\", 9);\n        }\n        if (rf & 2) {\n          const hourInput_r5 = i0.ɵɵreference(3);\n          const minuteInput_r6 = i0.ɵɵreference(7);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mtx-time-input-active\", ctx.clockView === \"hour\")(\"mtx-time-input-warning\", !hourInput_r5.valid);\n          i0.ɵɵproperty(\"timeMin\", ctx.twelvehour ? 1 : 0)(\"timeMax\", ctx.twelvehour ? 12 : 23)(\"timeValue\", ctx.hour);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"mtx-time-input-active\", ctx.clockView === \"minute\")(\"mtx-time-input-warning\", !minuteInput_r6.valid);\n          i0.ɵɵproperty(\"timeMin\", 0)(\"timeMax\", 59)(\"timeValue\", ctx.minute)(\"timeInterval\", ctx.interval);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.twelvehour ? 8 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"AMPM\", ctx.AMPM)(\"dateFilter\", ctx.dateFilter)(\"interval\", ctx.interval)(\"maxDate\", ctx.maxDate)(\"minDate\", ctx.minDate)(\"selected\", ctx.selected)(\"startView\", ctx.clockView)(\"twelvehour\", ctx.twelvehour);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(!ctx.actionsPortal ? 10 : -1);\n        }\n      },\n      dependencies: [MatButton, MtxClock, MtxTimeInput],\n      styles: [\".mtx-time{display:block;outline:none;-webkit-user-select:none;user-select:none}.mtx-time-input-wrapper{padding:8px 0;text-align:center}.mtx-time-input-inner{display:inline-flex;height:56px}.mtx-time-input{box-sizing:border-box;width:72px;height:100%;padding:0;font-size:36px;text-align:center;border:2px solid transparent;appearance:none;outline:none;border-radius:var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small));background-color:var(--mtx-datetimepicker-time-input-background-color, var(--mat-app-surface-container-highest));color:var(--mtx-datetimepicker-time-input-text-color, var(--mat-app-on-surface))}.mtx-time-input.mtx-time-input-active{background-color:var(--mtx-datetimepicker-time-input-active-state-background-color, var(--mat-app-primary-container));color:var(--mtx-datetimepicker-time-input-active-state-text-color, var(--mat-app-on-primary-container))}.mtx-time-input.mtx-time-input-active:focus{border-color:var(--mtx-datetimepicker-time-input-focus-state-outline-color, var(--mat-app-primary));background-color:var(--mtx-datetimepicker-time-input-focus-state-background-color, var(--mat-app-primary-container))}.mtx-time-input.mtx-time-input-active:focus::placeholder{color:var(--mtx-datetimepicker-time-input-focus-state-placeholder-text-color, var(--mat-app-on-primary-container))}.mtx-time-input.mtx-time-input-warning{border-color:var(--mtx-datetimepicker-time-input-warn-state-outline-color, var(--mat-app-error))}.mtx-time-seperator{display:inline-flex;justify-content:center;align-items:center;width:24px;font-size:36px}.mtx-time-ampm{display:inline-flex;flex-direction:column;margin-left:12px}[dir=rtl] .mtx-time-ampm{margin-left:auto;margin-right:12px}.mtx-time-ampm .mtx-time-am,.mtx-time-ampm .mtx-time-pm{--mdc-text-button-label-text-weight: 400;flex:1;width:40px;min-width:auto;border-width:1px;border-style:solid;--mdc-text-button-label-text-color: var(--mtx-datetimepicker-time-ampm-text-color, var(--mat-app-on-surface));--mdc-text-button-container-shape: var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small));border-color:var(--mtx-datetimepicker-time-ampm-outline-color, var(--mat-app-outline))}.mtx-time-ampm .mtx-time-am.mtx-time-ampm-active,.mtx-time-ampm .mtx-time-pm.mtx-time-ampm-active{--mdc-text-button-label-text-weight: 500;--mdc-text-button-label-text-color: var(--mtx-datetimepicker-time-ampm-selected-state-text-color, var(--mat-app-on-tertiary-container));background-color:var(--mtx-datetimepicker-time-ampm-selected-state-background-color, var(--mat-app-tertiary-container))}.mtx-time-ampm .mtx-time-am .mat-mdc-button-touch-target,.mtx-time-ampm .mtx-time-pm .mat-mdc-button-touch-target{height:100%}.mtx-time-ampm .mtx-time-am{border-bottom-left-radius:0;border-bottom-right-radius:0}.mtx-time-ampm .mtx-time-pm{border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.mtx-time-button-wrapper{display:flex;justify-content:flex-end;padding-top:8px}.mtx-time-button-wrapper .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mtx-time-button-wrapper .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxTime, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-time',\n      exportAs: 'mtxTime',\n      host: {\n        class: 'mtx-time'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatButton, MtxClock, MtxTimeInput],\n      template: \"<div class=\\\"mtx-time-input-wrapper\\\">\\n  <div class=\\\"mtx-time-input-inner\\\">\\n    <input class=\\\"mtx-time-input\\\"\\n      [class.mtx-time-input-active]=\\\"clockView === 'hour'\\\"\\n      [class.mtx-time-input-warning]=\\\"!hourInput.valid\\\"\\n      #hourInput=\\\"mtxTimeInput\\\"\\n      type=\\\"text\\\"\\n      inputmode=\\\"numeric\\\"\\n      maxlength=\\\"2\\\"\\n      [timeMin]=\\\"twelvehour ? 1 : 0\\\"\\n      [timeMax]=\\\"twelvehour ? 12 : 23\\\"\\n      [timeValue]=\\\"hour\\\"\\n      (timeValueChanged)=\\\"_handleHourInputChange($event)\\\"\\n      (focus)=\\\"_handleFocus('hour')\\\" />\\n\\n    <div class=\\\"mtx-time-seperator\\\">:</div>\\n\\n    <input class=\\\"mtx-time-input\\\"\\n      [class.mtx-time-input-active]=\\\"clockView === 'minute'\\\"\\n      [class.mtx-time-input-warning]=\\\"!minuteInput.valid\\\"\\n      #minuteInput=\\\"mtxTimeInput\\\"\\n      type=\\\"text\\\"\\n      inputmode=\\\"numeric\\\"\\n      maxlength=\\\"2\\\"\\n      [timeMin]=\\\"0\\\"\\n      [timeMax]=\\\"59\\\"\\n      [timeValue]=\\\"minute\\\"\\n      (timeValueChanged)=\\\"_handleMinuteInputChange($event)\\\"\\n      [timeInterval]=\\\"interval\\\"\\n      (focus)=\\\"_handleFocus('minute')\\\" />\\n\\n    @if (twelvehour) {\\n      <div class=\\\"mtx-time-ampm\\\">\\n        <button mat-button type=\\\"button\\\" class=\\\"mtx-time-am\\\"\\n          [class.mtx-time-ampm-active]=\\\"AMPM === 'AM'\\\" aria-label=\\\"AM\\\"\\n          (keydown)=\\\"$event.stopPropagation()\\\"\\n          (click)=\\\"ampmChange.emit('AM')\\\">AM</button>\\n        <button mat-button type=\\\"button\\\" class=\\\"mtx-time-pm\\\"\\n          [class.mtx-time-ampm-active]=\\\"AMPM === 'PM'\\\" aria-label=\\\"PM\\\"\\n          (keydown)=\\\"$event.stopPropagation()\\\"\\n          (click)=\\\"ampmChange.emit('PM')\\\">PM</button>\\n      </div>\\n    }\\n  </div>\\n</div>\\n\\n<mtx-clock (selectedChange)=\\\"_timeSelected($event)\\\"\\n  (activeDateChange)=\\\"_onActiveDateChange($event)\\\"\\n  (_userSelection)=\\\"_handleSelection()\\\"\\n  [AMPM]=\\\"AMPM\\\"\\n  [dateFilter]=\\\"dateFilter\\\"\\n  [interval]=\\\"interval\\\"\\n  [maxDate]=\\\"maxDate\\\"\\n  [minDate]=\\\"minDate\\\"\\n  [selected]=\\\"selected\\\"\\n  [startView]=\\\"clockView\\\"\\n  [twelvehour]=\\\"twelvehour\\\">\\n</mtx-clock>\\n\\n@if (!actionsPortal) {\\n  <div class=\\\"mtx-time-button-wrapper\\\">\\n    <button class=\\\"mtx-time-cancel-button\\\" mat-button type=\\\"button\\\" (click)=\\\"_handleCancel()\\\">\\n      {{ _datetimepickerIntl.cancelLabel }}\\n    </button>\\n    <button class=\\\"mtx-time-ok-button\\\" mat-button type=\\\"button\\\" (click)=\\\"_handleOk()\\\"\\n      [disabled]=\\\"minuteInputDirective?.invalid || hourInputDirective?.invalid\\\">\\n      {{ _datetimepickerIntl.okLabel }}\\n    </button>\\n  </div>\\n}\\n\",\n      styles: [\".mtx-time{display:block;outline:none;-webkit-user-select:none;user-select:none}.mtx-time-input-wrapper{padding:8px 0;text-align:center}.mtx-time-input-inner{display:inline-flex;height:56px}.mtx-time-input{box-sizing:border-box;width:72px;height:100%;padding:0;font-size:36px;text-align:center;border:2px solid transparent;appearance:none;outline:none;border-radius:var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small));background-color:var(--mtx-datetimepicker-time-input-background-color, var(--mat-app-surface-container-highest));color:var(--mtx-datetimepicker-time-input-text-color, var(--mat-app-on-surface))}.mtx-time-input.mtx-time-input-active{background-color:var(--mtx-datetimepicker-time-input-active-state-background-color, var(--mat-app-primary-container));color:var(--mtx-datetimepicker-time-input-active-state-text-color, var(--mat-app-on-primary-container))}.mtx-time-input.mtx-time-input-active:focus{border-color:var(--mtx-datetimepicker-time-input-focus-state-outline-color, var(--mat-app-primary));background-color:var(--mtx-datetimepicker-time-input-focus-state-background-color, var(--mat-app-primary-container))}.mtx-time-input.mtx-time-input-active:focus::placeholder{color:var(--mtx-datetimepicker-time-input-focus-state-placeholder-text-color, var(--mat-app-on-primary-container))}.mtx-time-input.mtx-time-input-warning{border-color:var(--mtx-datetimepicker-time-input-warn-state-outline-color, var(--mat-app-error))}.mtx-time-seperator{display:inline-flex;justify-content:center;align-items:center;width:24px;font-size:36px}.mtx-time-ampm{display:inline-flex;flex-direction:column;margin-left:12px}[dir=rtl] .mtx-time-ampm{margin-left:auto;margin-right:12px}.mtx-time-ampm .mtx-time-am,.mtx-time-ampm .mtx-time-pm{--mdc-text-button-label-text-weight: 400;flex:1;width:40px;min-width:auto;border-width:1px;border-style:solid;--mdc-text-button-label-text-color: var(--mtx-datetimepicker-time-ampm-text-color, var(--mat-app-on-surface));--mdc-text-button-container-shape: var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small));border-color:var(--mtx-datetimepicker-time-ampm-outline-color, var(--mat-app-outline))}.mtx-time-ampm .mtx-time-am.mtx-time-ampm-active,.mtx-time-ampm .mtx-time-pm.mtx-time-ampm-active{--mdc-text-button-label-text-weight: 500;--mdc-text-button-label-text-color: var(--mtx-datetimepicker-time-ampm-selected-state-text-color, var(--mat-app-on-tertiary-container));background-color:var(--mtx-datetimepicker-time-ampm-selected-state-background-color, var(--mat-app-tertiary-container))}.mtx-time-ampm .mtx-time-am .mat-mdc-button-touch-target,.mtx-time-ampm .mtx-time-pm .mat-mdc-button-touch-target{height:100%}.mtx-time-ampm .mtx-time-am{border-bottom-left-radius:0;border-bottom-right-radius:0}.mtx-time-ampm .mtx-time-pm{border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.mtx-time-button-wrapper{display:flex;justify-content:flex-end;padding-top:8px}.mtx-time-button-wrapper .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mtx-time-button-wrapper .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], () => [{\n    type: i1.DatetimeAdapter\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MtxDatetimepickerIntl\n  }], {\n    selectedChange: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    ampmChange: [{\n      type: Output\n    }],\n    clockViewChange: [{\n      type: Output\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    actionsPortal: [{\n      type: Input\n    }],\n    hourInputElement: [{\n      type: ViewChild,\n      args: ['hourInput', {\n        read: ElementRef\n      }]\n    }],\n    hourInputDirective: [{\n      type: ViewChild,\n      args: ['hourInput', {\n        read: MtxTimeInput\n      }]\n    }],\n    minuteInputElement: [{\n      type: ViewChild,\n      args: ['minuteInput', {\n        read: ElementRef\n      }]\n    }],\n    minuteInputDirective: [{\n      type: ViewChild,\n      args: ['minuteInput', {\n        read: MtxTimeInput\n      }]\n    }],\n    twelvehour: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    AMPM: [{\n      type: Input\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    clockView: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * An internal component used to display a single year in the datetimepicker.\n * @docs-private\n */\nclass MtxYearView {\n  constructor(_adapter, _dateFormats) {\n    this._adapter = _adapter;\n    this._dateFormats = _dateFormats;\n    this.type = 'date';\n    /** Emits when a new month is selected. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date is selected. */\n    this._userSelection = new EventEmitter();\n    if (!this._adapter) {\n      throw createMissingDateImplError('DatetimeAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MTX_DATETIME_FORMATS');\n    }\n    this._activeDate = this._adapter.today();\n  }\n  /** The date to display in this year view (everything other than the year is ignored). */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    const oldActiveDate = this._activeDate;\n    this._activeDate = value || this._adapter.today();\n    if (oldActiveDate && this._activeDate && !this._adapter.sameYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      // if (oldActiveDate < this._activeDate) {\n      //  this.calendarState('right');\n      // } else {\n      //  this.calendarState('left');\n      // }\n    }\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = value;\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n  }\n  ngAfterContentInit() {\n    this._init();\n  }\n  /** Handles when a new month is selected. */\n  _monthSelected(month) {\n    const normalizedDate = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1, 0, 0);\n    const dateObject = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, Math.min(this._adapter.getDate(this.activeDate), this._adapter.getNumDaysInMonth(normalizedDate)), this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n    this.selectedChange.emit(dateObject);\n    this._activeDate = dateObject;\n    if (this.type === 'month') {\n      this._userSelection.emit();\n    }\n  }\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n  /** Initializes this month view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._adapter.today());\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\n    const monthNames = this._adapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n  }\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  _getMonthInCurrentYear(date) {\n    return this._adapter.sameYear(date, this.activeDate) ? this._adapter.getMonth(date) : null;\n  }\n  /** Creates an MdCalendarCell for the given month. */\n  _createCellForMonth(month, monthName) {\n    const ariaLabel = this._adapter.format(this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1, this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate)), this._dateFormats.display.monthYearA11yLabel);\n    return new MtxCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\n  }\n  // private calendarState(direction: string): void {\n  //   this._calendarState = direction;\n  // }\n  /** Whether the given month is enabled. */\n  _isMonthEnabled(month) {\n    if (!this.dateFilter) {\n      return true;\n    }\n    const firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1, this._adapter.getHour(this.activeDate), this._adapter.getMinute(this.activeDate));\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._adapter.getMonth(date) === month; date = this._adapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxYearView_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxYearView)(i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(MTX_DATETIME_FORMATS, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxYearView,\n      selectors: [[\"mtx-year-view\"]],\n      inputs: {\n        type: \"type\",\n        dateFilter: \"dateFilter\",\n        activeDate: \"activeDate\",\n        selected: \"selected\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        _userSelection: \"_userSelection\"\n      },\n      exportAs: [\"mtxYearView\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 9,\n      consts: [[\"role\", \"grid\", 1, \"mtx-calendar-table\"], [1, \"mtx-calendar-table-header\"], [\"mtx-calendar-body\", \"\", 3, \"selectedValueChange\", \"label\", \"rows\", \"todayValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"selectedValue\", \"allowDisabledSelection\"]],\n      template: function MtxYearView_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\", 0);\n          i0.ɵɵelement(1, \"thead\", 1);\n          i0.ɵɵelementStart(2, \"tbody\", 2);\n          i0.ɵɵlistener(\"@slideCalendar.done\", function MtxYearView_Template_tbody_animation_slideCalendar_done_2_listener() {\n            return ctx._calendarStateDone();\n          })(\"selectedValueChange\", function MtxYearView_Template_tbody_selectedValueChange_2_listener($event) {\n            return ctx._monthSelected($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"@slideCalendar\", ctx._calendarState)(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"activeCell\", ctx._adapter.getMonth(ctx.activeDate))(\"selectedValue\", ctx._selectedMonth)(\"allowDisabledSelection\", true);\n        }\n      },\n      dependencies: [MtxCalendarBody],\n      encapsulation: 2,\n      data: {\n        animation: [mtxDatetimepickerAnimations.slideCalendar]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-year-view',\n      exportAs: 'mtxYearView',\n      animations: [mtxDatetimepickerAnimations.slideCalendar],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MtxCalendarBody],\n      template: \"<table class=\\\"mtx-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mtx-calendar-table-header\\\"></thead>\\n  <tbody mtx-calendar-body\\n         (@slideCalendar.done)=\\\"_calendarStateDone()\\\"\\n         [@slideCalendar]=\\\"_calendarState\\\"\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [activeCell]=\\\"_adapter.getMonth(activeDate)\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         [allowDisabledSelection]=\\\"true\\\"></tbody>\\n</table>\\n\"\n    }]\n  }], () => [{\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MTX_DATETIME_FORMATS]\n    }]\n  }], {\n    type: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * A calendar that is used as part of the datetimepicker.\n * @docs-private\n */\nclass MtxCalendar {\n  constructor(_elementRef, _intl, _ngZone, _adapter, _dateFormats, _changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._intl = _intl;\n    this._ngZone = _ngZone;\n    this._adapter = _adapter;\n    this._dateFormats = _dateFormats;\n    /** Whether to show multi-year view. */\n    this.multiYearSelector = false;\n    /** Whether the clock uses 12 hour format. */\n    this.twelvehour = false;\n    /** Whether the calendar should be started in month or year view. */\n    this.startView = 'month';\n    /** Step over minutes. */\n    this.timeInterval = 1;\n    /** Prevent user to select same date time */\n    this.preventSameDateTimeSelection = false;\n    /** Input for action buttons. */\n    this.actionsPortal = null;\n    /** Emits when the currently selected date changes. */\n    this.selectedChange = new EventEmitter();\n    /** Emits when the view has been changed. */\n    this.viewChanged = new EventEmitter();\n    this._userSelection = new EventEmitter();\n    this._clockView = 'hour';\n    this._injector = inject(Injector);\n    this._type = 'date';\n    /**\n     * Whether the calendar is in time mode. In time mode the calendar clock gets time input elements\n     * rather then just clock. When touchUi is enabled this will be disabled\n     */\n    this.timeInput = false;\n    /** Date filter for the month and year views. */\n    this._dateFilterForViews = date => {\n      return !!date && (!this.dateFilter || this.dateFilter(date, MtxDatetimepickerFilterType.DATE)) && (!this.minDate || this._adapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._adapter.compareDate(date, this.maxDate) <= 0);\n    };\n    if (!this._adapter) {\n      throw createMissingDateImplError('DatetimeAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MTX_DATETIME_FORMATS');\n    }\n    this._intlChanges = _intl.changes.subscribe(() => _changeDetectorRef.markForCheck());\n  }\n  /** The display type of datetimepicker. */\n  get type() {\n    return this._type;\n  }\n  set type(value) {\n    this._type = value || 'date';\n    if (this.type === 'year') {\n      this.multiYearSelector = true;\n    }\n  }\n  /** A date representing the period (month or year) to start the calendar in. */\n  get startAt() {\n    return this._startAt;\n  }\n  set startAt(value) {\n    this._startAt = this._adapter.getValidDateOrNull(value);\n  }\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = this._adapter.getValidDateOrNull(value);\n  }\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._adapter.getValidDateOrNull(value);\n  }\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._adapter.getValidDateOrNull(value);\n  }\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get _activeDate() {\n    return this._clampedActiveDate;\n  }\n  set _activeDate(value) {\n    const oldActiveDate = this._clampedActiveDate;\n    this._clampedActiveDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\n    // whenever active date changed, and possibly got clamped we should adjust the am/pm setting\n    this._selectAMPM(this._clampedActiveDate);\n    if (oldActiveDate && this._clampedActiveDate && this.currentView === 'month' && !this._adapter.sameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\n      if (this._adapter.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\n        this.calendarState('right');\n      } else {\n        this.calendarState('left');\n      }\n    }\n  }\n  /** Whether the calendar is in month view. */\n  get currentView() {\n    return this._currentView;\n  }\n  set currentView(view) {\n    this._currentView = view;\n    this.viewChanged.emit(view);\n  }\n  get _yearPeriodText() {\n    if (this.currentView === 'multi-year') {\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view, and the last year is\n      // just yearsPerPage - 1 away.\n      const activeYear = this._adapter.getYear(this._activeDate);\n      const minYearOfPage = activeYear - getActiveOffset(this._adapter, this._activeDate, this.minDate, this.maxDate);\n      const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n      const minYearName = this._adapter.getYearName(this._adapter.createDate(minYearOfPage, 0, 1));\n      const maxYearName = this._adapter.getYearName(this._adapter.createDate(maxYearOfPage, 0, 1));\n      return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    return this.currentView === 'month' ? this._adapter.getMonthNames('long')[this._adapter.getMonth(this._activeDate)] : this._adapter.getYearName(this._activeDate);\n  }\n  get _yearButtonText() {\n    return this._adapter.getYearName(this._activeDate);\n  }\n  get _yearButtonLabel() {\n    return this.multiYearSelector ? this._intl.switchToMultiYearViewLabel : this._intl.switchToYearViewLabel;\n  }\n  get _dateButtonText() {\n    switch (this.type) {\n      case 'month':\n        return this._adapter.getMonthNames('long')[this._adapter.getMonth(this._activeDate)];\n      default:\n        return this._adapter.format(this._activeDate, this._dateFormats.display.popupHeaderDateLabel);\n    }\n  }\n  get _dateButtonLabel() {\n    return this._intl.switchToMonthViewLabel;\n  }\n  get _hoursButtonText() {\n    let hour = this._adapter.getHour(this._activeDate);\n    if (this.twelvehour) {\n      if (hour === 0) {\n        hour = 24;\n      }\n      hour = hour > 12 ? hour - 12 : hour;\n    }\n    return this._2digit(hour);\n  }\n  get _hourButtonLabel() {\n    return this._intl.switchToClockHourViewLabel;\n  }\n  get _minutesButtonText() {\n    return this._2digit(this._adapter.getMinute(this._activeDate));\n  }\n  get _minuteButtonLabel() {\n    return this._intl.switchToClockMinuteViewLabel;\n  }\n  get _prevButtonLabel() {\n    switch (this._currentView) {\n      case 'month':\n        return this._intl.prevMonthLabel;\n      case 'year':\n        return this._intl.prevYearLabel;\n      case 'multi-year':\n        return this._intl.prevMultiYearLabel;\n      default:\n        return '';\n    }\n  }\n  get _nextButtonLabel() {\n    switch (this._currentView) {\n      case 'month':\n        return this._intl.nextMonthLabel;\n      case 'year':\n        return this._intl.nextYearLabel;\n      case 'multi-year':\n        return this._intl.nextMultiYearLabel;\n      default:\n        return '';\n    }\n  }\n  _userSelected() {\n    this._userSelection.emit();\n  }\n  ngAfterContentInit() {\n    if (this.headerComponent) {\n      this._calendarHeaderPortal = new ComponentPortal(this.headerComponent);\n    }\n    this._activeDate = this.startAt || this._adapter.today();\n    this._selectAMPM(this._activeDate);\n    if (this.type === 'year') {\n      this.currentView = 'multi-year';\n    } else if (this.type === 'month') {\n      this.currentView = 'year';\n    } else if (this.type === 'time') {\n      this.currentView = 'clock';\n    } else {\n      this.currentView = this.startView || 'month';\n    }\n  }\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n  /** Handles date selection in the month view. */\n  _dateSelected(date) {\n    if (this.type === 'date') {\n      if (!this._adapter.sameDate(date, this.selected) || !this.preventSameDateTimeSelection) {\n        this.selectedChange.emit(date);\n      }\n    } else {\n      this.selectedChange.emit(date);\n      this._activeDate = date;\n      this.currentView = 'clock';\n    }\n  }\n  /** Handles month selection in the year view. */\n  _monthSelected(month) {\n    if (this.type === 'month') {\n      if (!this._adapter.sameMonthAndYear(month, this.selected) || !this.preventSameDateTimeSelection) {\n        this.selectedChange.emit(this._adapter.getFirstDateOfMonth(month));\n      }\n    } else {\n      this._activeDate = month;\n      this.currentView = 'month';\n      this._clockView = 'hour';\n    }\n  }\n  /** Handles year selection in the multi year view. */\n  _yearSelected(year) {\n    if (this.type === 'year') {\n      if (!this._adapter.sameYear(year, this.selected) || !this.preventSameDateTimeSelection) {\n        const normalizedDate = this._adapter.createDatetime(this._adapter.getYear(year), 0, 1, 0, 0);\n        this.selectedChange.emit(normalizedDate);\n      }\n    } else {\n      this._activeDate = year;\n      this.currentView = 'year';\n    }\n  }\n  _timeSelected(date) {\n    this._activeDate = this._updateDate(date);\n    if (!this._adapter.sameDatetime(date, this.selected) || !this.preventSameDateTimeSelection) {\n      this.selectedChange.emit(date);\n    }\n  }\n  _dialTimeSelected(date) {\n    if (this._clockView !== 'minute') {\n      this._activeDate = this._updateDate(date);\n      this._clockView = 'minute';\n    } else {\n      if (!this._adapter.sameDatetime(date, this.selected) || !this.preventSameDateTimeSelection) {\n        this.selectedChange.emit(date);\n      }\n    }\n  }\n  _onActiveDateChange(date) {\n    this._activeDate = date;\n  }\n  _updateDate(date) {\n    if (this.twelvehour) {\n      const HOUR = this._adapter.getHour(date);\n      if (HOUR === 12) {\n        if (this._AMPM === 'AM') {\n          return this._adapter.addCalendarHours(date, -12);\n        }\n      } else if (this._AMPM === 'PM') {\n        return this._adapter.addCalendarHours(date, 12);\n      }\n    }\n    return date;\n  }\n  _selectAMPM(date) {\n    const hour = this._adapter.getHour(date);\n    if (hour > 11) {\n      this._AMPM = 'PM';\n    } else {\n      this._AMPM = 'AM';\n    }\n  }\n  _ampmClicked(source) {\n    this._currentView = 'clock';\n    if (source === this._AMPM) {\n      return;\n    }\n    // if AMPM changed from PM to AM substract 12 hours\n    const currentHour = this._adapter.getHour(this._activeDate);\n    let newHourValue;\n    if (source === 'AM') {\n      newHourValue = currentHour >= 12 ? this._adapter.getHour(this._activeDate) - 12 : 12;\n    }\n    // otherwise add 12 hours\n    else {\n      newHourValue = (currentHour + 12) % 24;\n    }\n    const newActiveDate = this._adapter.clampDate(this._adapter.createDatetime(this._adapter.getYear(this._activeDate), this._adapter.getMonth(this._activeDate), this._adapter.getDate(this._activeDate), newHourValue, this._adapter.getMinute(this._activeDate)), this.minDate, this.maxDate);\n    // only if our clamped date is not changed, we know we can apply the newActiveDate to the\n    // activeDate\n    if (this._adapter.getHour(newActiveDate) === newHourValue) {\n      this._activeDate = newActiveDate;\n      this._AMPM = source;\n    }\n  }\n  _yearClicked() {\n    if (this.type === 'year' || this.multiYearSelector) {\n      this.currentView = 'multi-year';\n      return;\n    }\n    this.currentView = 'year';\n  }\n  _dateClicked() {\n    if (this.type !== 'month') {\n      this.currentView = 'month';\n    }\n  }\n  _hoursClicked() {\n    this.currentView = 'clock';\n    this._clockView = 'hour';\n  }\n  _minutesClicked() {\n    this.currentView = 'clock';\n    this._clockView = 'minute';\n  }\n  /** Handles user clicks on the previous button. */\n  _previousClicked() {\n    this._activeDate = this.currentView === 'month' ? this._adapter.addCalendarMonths(this._activeDate, -1) : this._adapter.addCalendarYears(this._activeDate, this.currentView === 'year' ? -1 : -yearsPerPage);\n  }\n  /** Handles user clicks on the next button. */\n  _nextClicked() {\n    this._activeDate = this.currentView === 'month' ? this._adapter.addCalendarMonths(this._activeDate, 1) : this._adapter.addCalendarYears(this._activeDate, this.currentView === 'year' ? 1 : yearsPerPage);\n  }\n  /** Whether the previous period button is enabled. */\n  _previousEnabled() {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n  }\n  /** Whether the next period button is enabled. */\n  _nextEnabled() {\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n  }\n  /** Handles keydown events on the calendar body. */\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    if (this.currentView === 'month') {\n      this._handleCalendarBodyKeydownInMonthView(event);\n    } else if (this.currentView === 'year') {\n      this._handleCalendarBodyKeydownInYearView(event);\n    } else if (this.currentView === 'multi-year') {\n      this._handleCalendarBodyKeydownInMultiYearView(event);\n    } else {\n      this._handleCalendarBodyKeydownInClockView(event);\n    }\n  }\n  _focusActiveCell() {\n    afterNextRender(() => {\n      this._elementRef.nativeElement.focus();\n    }, {\n      injector: this._injector\n    });\n  }\n  _calendarStateDone() {\n    this._calendarState = '';\n  }\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  _isSameView(date1, date2) {\n    if (this.currentView === 'month') {\n      return this._adapter.getYear(date1) === this._adapter.getYear(date2) && this._adapter.getMonth(date1) === this._adapter.getMonth(date2);\n    }\n    if (this.currentView === 'year') {\n      return this._adapter.getYear(date1) === this._adapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(this._adapter, date1, date2, this.minDate, this.maxDate);\n  }\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydownInMonthView(event) {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1 - this._adapter.getDate(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, this._adapter.getNumDaysInMonth(this._activeDate) - this._adapter.getDate(this._activeDate));\n        break;\n      case PAGE_UP:\n        this._activeDate = event.altKey ? this._adapter.addCalendarYears(this._activeDate, -1) : this._adapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = event.altKey ? this._adapter.addCalendarYears(this._activeDate, 1) : this._adapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (this._dateFilterForViews(this._activeDate)) {\n          this._dateSelected(this._activeDate);\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydownInYearView(event) {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\n        break;\n      case HOME:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -this._adapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 11 - this._adapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._activeDate);\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydownInMultiYearView(event) {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, -getActiveOffset(this._adapter, this._activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._adapter, this._activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n        this._yearSelected(this._activeDate);\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n  }\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydownInClockView(event) {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        this._activeDate = this._clockView === 'hour' ? this._adapter.addCalendarHours(this._activeDate, 1) : this._adapter.addCalendarMinutes(this._activeDate, this.timeInterval);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._clockView === 'hour' ? this._adapter.addCalendarHours(this._activeDate, -1) : this._adapter.addCalendarMinutes(this._activeDate, -this.timeInterval);\n        break;\n      case ENTER:\n        if (!this.timeInput) {\n          this._dialTimeSelected(this._activeDate);\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /**\n   * Determine the date for the month that comes before the given month in the same column in the\n   * calendar table.\n   */\n  _prevMonthInSameCol(date) {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    const increment = this._adapter.getMonth(date) <= 4 ? -5 : this._adapter.getMonth(date) >= 7 ? -7 : -12;\n    return this._adapter.addCalendarMonths(date, increment);\n  }\n  /**\n   * Determine the date for the month that comes after the given month in the same column in the\n   * calendar table.\n   */\n  _nextMonthInSameCol(date) {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    const increment = this._adapter.getMonth(date) <= 4 ? 7 : this._adapter.getMonth(date) >= 7 ? 5 : 12;\n    return this._adapter.addCalendarMonths(date, increment);\n  }\n  calendarState(direction) {\n    this._calendarState = direction;\n  }\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxCalendar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxCalendar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MtxDatetimepickerIntl), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(MTX_DATETIME_FORMATS, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxCalendar,\n      selectors: [[\"mtx-calendar\"]],\n      hostAttrs: [\"tabindex\", \"0\", 1, \"mtx-calendar\"],\n      hostVars: 2,\n      hostBindings: function MtxCalendar_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MtxCalendar_keydown_HostBindingHandler($event) {\n            return ctx._handleCalendarBodyKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mtx-calendar-with-time-input\", ctx.timeInput);\n        }\n      },\n      inputs: {\n        multiYearSelector: [2, \"multiYearSelector\", \"multiYearSelector\", booleanAttribute],\n        twelvehour: [2, \"twelvehour\", \"twelvehour\", booleanAttribute],\n        startView: \"startView\",\n        timeInterval: \"timeInterval\",\n        dateFilter: \"dateFilter\",\n        preventSameDateTimeSelection: \"preventSameDateTimeSelection\",\n        headerComponent: \"headerComponent\",\n        actionsPortal: \"actionsPortal\",\n        type: \"type\",\n        startAt: \"startAt\",\n        timeInput: [2, \"timeInput\", \"timeInput\", booleanAttribute],\n        selected: \"selected\",\n        minDate: \"minDate\",\n        maxDate: \"maxDate\"\n      },\n      outputs: {\n        selectedChange: \"selectedChange\",\n        viewChanged: \"viewChanged\",\n        _userSelection: \"_userSelection\"\n      },\n      exportAs: [\"mtxCalendar\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 9,\n      vars: 3,\n      consts: [[1, \"mtx-calendar-header\"], [3, \"cdkPortalOutlet\"], [1, \"mtx-calendar-content\"], [1, \"mtx-month-content\"], [3, \"activeDate\", \"dateFilter\", \"selected\", \"type\"], [3, \"activeDate\", \"dateFilter\", \"maxDate\", \"minDate\", \"selected\", \"type\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-year\", 3, \"active\"], [1, \"mtx-calendar-header-date-time\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-year\", 3, \"click\"], [\"matButtonIcon\", \"\", \"iconPositionEnd\", \"\", \"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"currentColor\", 1, \"mtx-calendar-header-year-dropdown\"], [\"d\", \"M7,10L12,15L17,10H7Z\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-date\", 3, \"active\", \"not-clickable\"], [1, \"mtx-calendar-header-time\", 3, \"active\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-date\", 3, \"click\"], [1, \"mtx-calendar-header-time\"], [1, \"mtx-calendar-header-hour-minute-container\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-hours\", 3, \"click\"], [1, \"mtx-calendar-header-hour-minute-separator\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-header-minutes\", 3, \"click\"], [1, \"mtx-calendar-header-ampm-container\"], [\"mat-button\", \"\", \"type\", \"button\", \"aria-label\", \"AM\", 1, \"mtx-calendar-header-ampm\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"button\", \"aria-label\", \"PM\", 1, \"mtx-calendar-header-ampm\", 3, \"click\"], [1, \"mtx-calendar-controls\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-previous-button\", 3, \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [1, \"mtx-calendar-period-button\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mtx-calendar-next-button\", 3, \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [3, \"_userSelection\", \"selectedChange\", \"activeDate\", \"dateFilter\", \"selected\", \"type\"], [3, \"_userSelection\", \"selectedChange\", \"activeDate\", \"dateFilter\", \"maxDate\", \"minDate\", \"selected\", \"type\"], [3, \"AMPM\", \"clockView\", \"twelvehour\", \"dateFilter\", \"interval\", \"maxDate\", \"minDate\", \"selected\", \"actionsPortal\"], [3, \"AMPM\", \"dateFilter\", \"interval\", \"maxDate\", \"minDate\", \"selected\", \"startView\", \"twelvehour\"], [3, \"_userSelection\", \"activeDateChange\", \"selectedChange\", \"ampmChange\", \"clockViewChange\", \"AMPM\", \"clockView\", \"twelvehour\", \"dateFilter\", \"interval\", \"maxDate\", \"minDate\", \"selected\", \"actionsPortal\"], [3, \"_userSelection\", \"activeDateChange\", \"selectedChange\", \"AMPM\", \"dateFilter\", \"interval\", \"maxDate\", \"minDate\", \"selected\", \"startView\", \"twelvehour\"]],\n      template: function MtxCalendar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, MtxCalendar_Conditional_1_Template, 1, 1, null, 1)(2, MtxCalendar_Conditional_2_Template, 2, 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵtemplate(4, MtxCalendar_Conditional_4_Template, 11, 10, \"div\", 3)(5, MtxCalendar_Case_5_Template, 1, 4, \"mtx-month-view\", 4)(6, MtxCalendar_Case_6_Template, 1, 4, \"mtx-year-view\", 4)(7, MtxCalendar_Case_7_Template, 1, 6, \"mtx-multi-year-view\", 5)(8, MtxCalendar_Case_8_Template, 2, 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._calendarHeaderPortal ? 1 : 2);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(ctx.currentView === \"month\" || ctx.currentView === \"year\" || ctx.currentView === \"multi-year\" ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((tmp_2_0 = ctx.currentView) === \"month\" ? 5 : tmp_2_0 === \"year\" ? 6 : tmp_2_0 === \"multi-year\" ? 7 : 8);\n        }\n      },\n      dependencies: [CdkPortalOutlet, MatButton, MatIconButton, MtxMonthView, MtxYearView, MtxMultiYearView, MtxTime, MtxClock],\n      styles: [\".mtx-calendar{display:block;outline:none;font-family:var(--mtx-datetimepicker-calendar-text-font, var(--mat-app-body-large-font));font-size:var(--mtx-datetimepicker-calendar-text-size, var(--mat-app-body-large-size))}.mtx-calendar-header{box-sizing:border-box;padding:8px;border-bottom:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));background-color:var(--mtx-datetimepicker-calendar-header-background-color);color:var(--mtx-datetimepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));--mdc-text-button-container-shape: var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small))}.mtx-calendar-header .mtx-calendar-header-year,.mtx-calendar-header .mtx-calendar-header-date,.mtx-calendar-header .mtx-calendar-header-hours,.mtx-calendar-header .mtx-calendar-header-minutes,.mtx-calendar-header .mtx-calendar-header-ampm{height:auto;min-width:auto;padding:0 4px;text-align:inherit;line-height:inherit;color:inherit;font-size:inherit;font-weight:inherit;letter-spacing:normal;white-space:normal;word-break:break-word}.mtx-calendar-header .mtx-calendar-header-year .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-date .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-hours .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-minutes .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-ampm .mat-mdc-button-touch-target{height:100%}.mtx-calendar-header .mtx-calendar-header-year{line-height:24px}.mtx-calendar-header-date-time{font-size:24px;line-height:36px}.mtx-calendar-header-year:not(.active),.mtx-calendar-header-date:not(.active),.mtx-calendar-header-hours:not(.active),.mtx-calendar-header-minutes:not(.active),.mtx-calendar-header-ampm:not(.active){opacity:.6}.mtx-calendar-header-year.not-clickable,.mtx-calendar-header-date.not-clickable,.mtx-calendar-header-hours.not-clickable,.mtx-calendar-header-minutes.not-clickable,.mtx-calendar-header-ampm.not-clickable{cursor:initial}.mtx-calendar-header-time{display:inline-flex}.mtx-calendar-header-time:not(.active){opacity:.6}.mtx-calendar-header-time:not(.active) .mtx-calendar-header-hours,.mtx-calendar-header-time:not(.active) .mtx-calendar-header-minutes,.mtx-calendar-header-time:not(.active) .mtx-calendar-header-ampm{opacity:1}.mtx-calendar-header-hour-minute-separator{display:inline-block;width:8px;text-align:center}.mtx-calendar-header-ampm-container{display:inline-flex;flex-direction:column;line-height:18px;font-size:12px}[mode=landscape] .mtx-calendar{display:flex}[mode=landscape] .mtx-calendar .mtx-calendar-header{width:144px;min-width:144px;padding:16px 8px;border-bottom-width:0;border-top-right-radius:0;border-bottom-right-radius:0;border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=landscape] .mtx-calendar .mtx-calendar-header{border-top-left-radius:0;border-bottom-left-radius:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[mode=landscape] .mtx-calendar .mtx-calendar-header-year+.mtx-calendar-header-date-time,[mode=landscape] .mtx-calendar .mtx-calendar-header-date+.mtx-calendar-header-time{margin-top:4px}[mode=landscape] .mtx-calendar .mtx-calendar-header-date-time{font-size:28px}[mode=landscape] .mtx-calendar .mtx-calendar-header-time{display:flex;flex-direction:column}[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-hours,[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-minutes,[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-ampm{width:40px;text-align:center}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm-container{flex-direction:row;font-size:20px}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm{padding:4px}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm+.mtx-calendar-header-ampm{margin:0 8px}[mode=landscape] .mtx-datetimepicker-content-container-with-actions .mtx-calendar .mtx-calendar-header{border-bottom-left-radius:0;border-bottom-right-radius:0}[mode=landscape] .mtx-datetimepicker-actions:before{position:absolute;top:0;left:0;box-sizing:border-box;width:144px;height:100%;content:\\\"\\\";border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));background-color:var(--mtx-datetimepicker-calendar-header-background-color);border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=landscape] .mtx-datetimepicker-actions:before{left:auto;right:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-bottom-left-radius:0;border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}@media all and (orientation: landscape){[mode=auto] .mtx-calendar{display:flex}[mode=auto] .mtx-calendar .mtx-calendar-header{width:144px;min-width:144px;padding:16px 8px;border-bottom-width:0;border-top-right-radius:0;border-bottom-right-radius:0;border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=auto] .mtx-calendar .mtx-calendar-header{border-top-left-radius:0;border-bottom-left-radius:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[mode=auto] .mtx-calendar .mtx-calendar-header-year+.mtx-calendar-header-date-time,[mode=auto] .mtx-calendar .mtx-calendar-header-date+.mtx-calendar-header-time{margin-top:4px}[mode=auto] .mtx-calendar .mtx-calendar-header-date-time{font-size:28px}[mode=auto] .mtx-calendar .mtx-calendar-header-time{display:flex;flex-direction:column}[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-hours,[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-minutes,[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-ampm{width:40px;text-align:center}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm-container{flex-direction:row;font-size:20px}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm{padding:4px}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm+.mtx-calendar-header-ampm{margin:0 8px}[mode=auto] .mtx-datetimepicker-content-container-with-actions .mtx-calendar .mtx-calendar-header{border-bottom-left-radius:0;border-bottom-right-radius:0}[mode=auto] .mtx-datetimepicker-actions:before{position:absolute;top:0;left:0;box-sizing:border-box;width:144px;height:100%;content:\\\"\\\";border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));background-color:var(--mtx-datetimepicker-calendar-header-background-color);border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=auto] .mtx-datetimepicker-actions:before{left:auto;right:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-bottom-left-radius:0;border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}}.mtx-calendar-content{width:100%;padding:8px;outline:none;box-sizing:border-box;overflow:hidden}.mtx-calendar-controls{display:flex;align-items:center;justify-content:space-between;margin:0 calc(4.7142857143% - 16px)}.mtx-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mtx-calendar-period-button{display:inline-block;height:40px;line-height:40px;outline:none;border:0;background:transparent;box-sizing:border-box;font-size:var(--mtx-datetimepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mtx-datetimepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight))}.mtx-calendar-previous-button.disabled,.mtx-calendar-next-button.disabled{pointer-events:none;color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-previous-button svg,.mtx-calendar-next-button svg{fill:currentColor;vertical-align:top}[dir=rtl] .mtx-calendar-previous-button svg,[dir=rtl] .mtx-calendar-next-button svg{transform:rotate(180deg)}.mtx-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mtx-calendar-table-header th{text-align:center;padding:8px 0;color:var(--mtx-datetimepicker-calendar-table-header-text-color, var(--mat-app-on-surface));font-size:var(--mtx-datetimepicker-calendar-table-header-text-size);font-weight:var(--mtx-datetimepicker-calendar-table-header-text-weight)}\\n\"],\n      encapsulation: 2,\n      data: {\n        animation: [mtxDatetimepickerAnimations.slideCalendar]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-calendar',\n      host: {\n        'class': 'mtx-calendar',\n        '[class.mtx-calendar-with-time-input]': 'timeInput',\n        'tabindex': '0',\n        '(keydown)': '_handleCalendarBodyKeydown($event)'\n      },\n      exportAs: 'mtxCalendar',\n      animations: [mtxDatetimepickerAnimations.slideCalendar],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [CdkPortalOutlet, MatButton, MatIconButton, MtxMonthView, MtxYearView, MtxMultiYearView, MtxTime, MtxClock],\n      template: \"<div class=\\\"mtx-calendar-header\\\">\\n  @if (_calendarHeaderPortal) {\\n    <ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n  } @else {\\n    @if (type !== 'time') {\\n      <button\\n        mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-year\\\"\\n        [class.active]=\\\"currentView === 'year' || currentView === 'multi-year'\\\"\\n        [attr.aria-label]=\\\"_yearButtonLabel\\\"\\n        (click)=\\\"_yearClicked()\\\">\\n        <span>{{ _yearButtonText }}</span>\\n        @if (multiYearSelector || type === 'year') {\\n          <svg\\n            class=\\\"mtx-calendar-header-year-dropdown\\\" matButtonIcon iconPositionEnd\\n            width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"currentColor\\\">\\n            <path d=\\\"M7,10L12,15L17,10H7Z\\\" />\\n          </svg>\\n        }\\n      </button>\\n    }\\n    @if (type !== 'year') {\\n      <div class=\\\"mtx-calendar-header-date-time\\\">\\n        @if (type !== 'time') {\\n          <button\\n            mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-date\\\"\\n            [class.active]=\\\"currentView === 'month'\\\"\\n            [class.not-clickable]=\\\"type === 'month'\\\"\\n            [attr.aria-label]=\\\"_dateButtonLabel\\\"\\n            (click)=\\\"_dateClicked()\\\">{{ _dateButtonText }}</button>\\n        }\\n        @if (type.endsWith('time')) {\\n          <span class=\\\"mtx-calendar-header-time\\\" [class.active]=\\\"currentView === 'clock'\\\">\\n            <span class=\\\"mtx-calendar-header-hour-minute-container\\\">\\n              <button mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-hours\\\"\\n                [class.active]=\\\"_clockView === 'hour'\\\"\\n                [attr.aria-label]=\\\"_hourButtonLabel\\\"\\n                (click)=\\\"_hoursClicked()\\\">{{ _hoursButtonText }}</button>\\n              <span class=\\\"mtx-calendar-header-hour-minute-separator\\\">:</span>\\n              <button mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-minutes\\\"\\n                [class.active]=\\\"_clockView === 'minute'\\\"\\n                [attr.aria-label]=\\\"_minuteButtonLabel\\\"\\n                (click)=\\\"_minutesClicked()\\\">{{ _minutesButtonText }}</button>\\n            </span>\\n            @if (twelvehour) {\\n              <span class=\\\"mtx-calendar-header-ampm-container\\\">\\n                <button mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-ampm\\\"\\n                  [class.active]=\\\"_AMPM === 'AM'\\\" aria-label=\\\"AM\\\"\\n                  (click)=\\\"_ampmClicked('AM')\\\">AM</button>\\n                <button mat-button type=\\\"button\\\" class=\\\"mtx-calendar-header-ampm\\\"\\n                  [class.active]=\\\"_AMPM === 'PM'\\\" aria-label=\\\"PM\\\"\\n                  (click)=\\\"_ampmClicked('PM')\\\">PM</button>\\n              </span>\\n            }\\n          </span>\\n        }\\n      </div>\\n    }\\n  }\\n</div>\\n\\n<div class=\\\"mtx-calendar-content\\\">\\n  @if (currentView === 'month' || currentView === 'year' || currentView === 'multi-year') {\\n    <div class=\\\"mtx-month-content\\\">\\n      <div class=\\\"mtx-calendar-controls\\\">\\n        <button mat-icon-button type=\\\"button\\\"\\n          class=\\\"mtx-calendar-previous-button\\\"\\n          [class.disabled]=\\\"!_previousEnabled()\\\"\\n          [attr.aria-disabled]=\\\"!_previousEnabled()\\\"\\n          [attr.aria-label]=\\\"_prevButtonLabel\\\"\\n          (click)=\\\"_previousClicked()\\\">\\n          <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\" />\\n          </svg>\\n        </button>\\n        <div class=\\\"mtx-calendar-period-button\\\"\\n          [@slideCalendar]=\\\"_calendarState\\\"\\n          (@slideCalendar.done)=\\\"_calendarStateDone()\\\">\\n          <strong>{{ _yearPeriodText }}</strong>\\n        </div>\\n        <button mat-icon-button type=\\\"button\\\"\\n          class=\\\"mtx-calendar-next-button\\\"\\n          [class.disabled]=\\\"!_nextEnabled()\\\"\\n          [attr.aria-disabled]=\\\"!_nextEnabled()\\\"\\n          [attr.aria-label]=\\\"_nextButtonLabel\\\"\\n          (click)=\\\"_nextClicked()\\\">\\n          <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\" />\\n          </svg>\\n        </button>\\n      </div>\\n    </div>\\n  }\\n\\n  @switch (currentView) {\\n    @case ('month') {\\n      <mtx-month-view\\n        (_userSelection)=\\\"_userSelected()\\\"\\n        (selectedChange)=\\\"_dateSelected($event)\\\"\\n        [activeDate]=\\\"_activeDate\\\"\\n        [dateFilter]=\\\"_dateFilterForViews\\\"\\n        [selected]=\\\"selected!\\\"\\n        [type]=\\\"type\\\">\\n      </mtx-month-view>\\n    }\\n    @case ('year') {\\n      <mtx-year-view\\n        (_userSelection)=\\\"_userSelected()\\\"\\n        (selectedChange)=\\\"_monthSelected($event)\\\"\\n        [activeDate]=\\\"_activeDate\\\"\\n        [dateFilter]=\\\"_dateFilterForViews\\\"\\n        [selected]=\\\"selected!\\\"\\n        [type]=\\\"type\\\">\\n      </mtx-year-view>\\n    }\\n    @case ('multi-year') {\\n      <mtx-multi-year-view\\n        (_userSelection)=\\\"_userSelected()\\\"\\n        (selectedChange)=\\\"_yearSelected($event)\\\"\\n        [activeDate]=\\\"_activeDate\\\"\\n        [dateFilter]=\\\"_dateFilterForViews\\\"\\n        [maxDate]=\\\"maxDate\\\"\\n        [minDate]=\\\"minDate\\\"\\n        [selected]=\\\"selected!\\\"\\n        [type]=\\\"type\\\">\\n      </mtx-multi-year-view>\\n    }\\n    @default {\\n      @if (timeInput) {\\n        <mtx-time\\n          (_userSelection)=\\\"_userSelected()\\\"\\n          (activeDateChange)=\\\"_onActiveDateChange($event)\\\"\\n          (selectedChange)=\\\"_timeSelected($event)\\\"\\n          [AMPM]=\\\"_AMPM\\\"\\n          (ampmChange)=\\\"_ampmClicked($event)\\\"\\n          [clockView]=\\\"_clockView\\\"\\n          (clockViewChange)=\\\"_clockView = $event\\\"\\n          [twelvehour]=\\\"twelvehour\\\"\\n          [dateFilter]=\\\"dateFilter\\\"\\n          [interval]=\\\"timeInterval\\\"\\n          [maxDate]=\\\"maxDate\\\"\\n          [minDate]=\\\"minDate\\\"\\n          [selected]=\\\"_activeDate\\\"\\n          [actionsPortal]=\\\"actionsPortal\\\">\\n        </mtx-time>\\n      } @else {\\n        <mtx-clock (_userSelection)=\\\"_userSelected()\\\"\\n          (activeDateChange)=\\\"_onActiveDateChange($event)\\\"\\n          (selectedChange)=\\\"_dialTimeSelected($event)\\\"\\n          [AMPM]=\\\"_AMPM\\\"\\n          [dateFilter]=\\\"dateFilter\\\"\\n          [interval]=\\\"timeInterval\\\"\\n          [maxDate]=\\\"maxDate\\\"\\n          [minDate]=\\\"minDate\\\"\\n          [selected]=\\\"_activeDate\\\"\\n          [startView]=\\\"_clockView\\\"\\n          [twelvehour]=\\\"twelvehour\\\">\\n        </mtx-clock>\\n      }\\n    }\\n  }\\n</div>\\n\",\n      styles: [\".mtx-calendar{display:block;outline:none;font-family:var(--mtx-datetimepicker-calendar-text-font, var(--mat-app-body-large-font));font-size:var(--mtx-datetimepicker-calendar-text-size, var(--mat-app-body-large-size))}.mtx-calendar-header{box-sizing:border-box;padding:8px;border-bottom:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));background-color:var(--mtx-datetimepicker-calendar-header-background-color);color:var(--mtx-datetimepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));--mdc-text-button-container-shape: var(--mtx-datetimepicker-selector-container-shape, var(--mat-app-corner-small))}.mtx-calendar-header .mtx-calendar-header-year,.mtx-calendar-header .mtx-calendar-header-date,.mtx-calendar-header .mtx-calendar-header-hours,.mtx-calendar-header .mtx-calendar-header-minutes,.mtx-calendar-header .mtx-calendar-header-ampm{height:auto;min-width:auto;padding:0 4px;text-align:inherit;line-height:inherit;color:inherit;font-size:inherit;font-weight:inherit;letter-spacing:normal;white-space:normal;word-break:break-word}.mtx-calendar-header .mtx-calendar-header-year .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-date .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-hours .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-minutes .mat-mdc-button-touch-target,.mtx-calendar-header .mtx-calendar-header-ampm .mat-mdc-button-touch-target{height:100%}.mtx-calendar-header .mtx-calendar-header-year{line-height:24px}.mtx-calendar-header-date-time{font-size:24px;line-height:36px}.mtx-calendar-header-year:not(.active),.mtx-calendar-header-date:not(.active),.mtx-calendar-header-hours:not(.active),.mtx-calendar-header-minutes:not(.active),.mtx-calendar-header-ampm:not(.active){opacity:.6}.mtx-calendar-header-year.not-clickable,.mtx-calendar-header-date.not-clickable,.mtx-calendar-header-hours.not-clickable,.mtx-calendar-header-minutes.not-clickable,.mtx-calendar-header-ampm.not-clickable{cursor:initial}.mtx-calendar-header-time{display:inline-flex}.mtx-calendar-header-time:not(.active){opacity:.6}.mtx-calendar-header-time:not(.active) .mtx-calendar-header-hours,.mtx-calendar-header-time:not(.active) .mtx-calendar-header-minutes,.mtx-calendar-header-time:not(.active) .mtx-calendar-header-ampm{opacity:1}.mtx-calendar-header-hour-minute-separator{display:inline-block;width:8px;text-align:center}.mtx-calendar-header-ampm-container{display:inline-flex;flex-direction:column;line-height:18px;font-size:12px}[mode=landscape] .mtx-calendar{display:flex}[mode=landscape] .mtx-calendar .mtx-calendar-header{width:144px;min-width:144px;padding:16px 8px;border-bottom-width:0;border-top-right-radius:0;border-bottom-right-radius:0;border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=landscape] .mtx-calendar .mtx-calendar-header{border-top-left-radius:0;border-bottom-left-radius:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[mode=landscape] .mtx-calendar .mtx-calendar-header-year+.mtx-calendar-header-date-time,[mode=landscape] .mtx-calendar .mtx-calendar-header-date+.mtx-calendar-header-time{margin-top:4px}[mode=landscape] .mtx-calendar .mtx-calendar-header-date-time{font-size:28px}[mode=landscape] .mtx-calendar .mtx-calendar-header-time{display:flex;flex-direction:column}[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-hours,[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-minutes,[mode=landscape] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-ampm{width:40px;text-align:center}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm-container{flex-direction:row;font-size:20px}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm{padding:4px}[mode=landscape] .mtx-calendar .mtx-calendar-header-ampm+.mtx-calendar-header-ampm{margin:0 8px}[mode=landscape] .mtx-datetimepicker-content-container-with-actions .mtx-calendar .mtx-calendar-header{border-bottom-left-radius:0;border-bottom-right-radius:0}[mode=landscape] .mtx-datetimepicker-actions:before{position:absolute;top:0;left:0;box-sizing:border-box;width:144px;height:100%;content:\\\"\\\";border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));background-color:var(--mtx-datetimepicker-calendar-header-background-color);border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=landscape] .mtx-datetimepicker-actions:before{left:auto;right:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-bottom-left-radius:0;border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}@media all and (orientation: landscape){[mode=auto] .mtx-calendar{display:flex}[mode=auto] .mtx-calendar .mtx-calendar-header{width:144px;min-width:144px;padding:16px 8px;border-bottom-width:0;border-top-right-radius:0;border-bottom-right-radius:0;border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=auto] .mtx-calendar .mtx-calendar-header{border-top-left-radius:0;border-bottom-left-radius:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-top-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[mode=auto] .mtx-calendar .mtx-calendar-header-year+.mtx-calendar-header-date-time,[mode=auto] .mtx-calendar .mtx-calendar-header-date+.mtx-calendar-header-time{margin-top:4px}[mode=auto] .mtx-calendar .mtx-calendar-header-date-time{font-size:28px}[mode=auto] .mtx-calendar .mtx-calendar-header-time{display:flex;flex-direction:column}[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-hours,[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-minutes,[mode=auto] .mtx-calendar .mtx-calendar-header-time .mtx-calendar-header-ampm{width:40px;text-align:center}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm-container{flex-direction:row;font-size:20px}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm{padding:4px}[mode=auto] .mtx-calendar .mtx-calendar-header-ampm+.mtx-calendar-header-ampm{margin:0 8px}[mode=auto] .mtx-datetimepicker-content-container-with-actions .mtx-calendar .mtx-calendar-header{border-bottom-left-radius:0;border-bottom-right-radius:0}[mode=auto] .mtx-datetimepicker-actions:before{position:absolute;top:0;left:0;box-sizing:border-box;width:144px;height:100%;content:\\\"\\\";border-right:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));background-color:var(--mtx-datetimepicker-calendar-header-background-color);border-bottom-left-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}[dir=rtl] [mode=auto] .mtx-datetimepicker-actions:before{left:auto;right:0;border-right-width:0;border-left:1px solid var(--mtx-datetimepicker-calendar-header-divider-color, var(--mat-app-outline-variant));border-bottom-left-radius:0;border-bottom-right-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large))}}.mtx-calendar-content{width:100%;padding:8px;outline:none;box-sizing:border-box;overflow:hidden}.mtx-calendar-controls{display:flex;align-items:center;justify-content:space-between;margin:0 calc(4.7142857143% - 16px)}.mtx-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mtx-calendar-period-button{display:inline-block;height:40px;line-height:40px;outline:none;border:0;background:transparent;box-sizing:border-box;font-size:var(--mtx-datetimepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mtx-datetimepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight))}.mtx-calendar-previous-button.disabled,.mtx-calendar-next-button.disabled{pointer-events:none;color:var(--mtx-datetimepicker-calendar-date-disabled-state-text-color)}.mtx-calendar-previous-button svg,.mtx-calendar-next-button svg{fill:currentColor;vertical-align:top}[dir=rtl] .mtx-calendar-previous-button svg,[dir=rtl] .mtx-calendar-next-button svg{transform:rotate(180deg)}.mtx-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mtx-calendar-table-header th{text-align:center;padding:8px 0;color:var(--mtx-datetimepicker-calendar-table-header-text-color, var(--mat-app-on-surface));font-size:var(--mtx-datetimepicker-calendar-table-header-text-size);font-weight:var(--mtx-datetimepicker-calendar-table-header-text-weight)}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: MtxDatetimepickerIntl\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MTX_DATETIME_FORMATS]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    multiYearSelector: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    twelvehour: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    startView: [{\n      type: Input\n    }],\n    timeInterval: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    preventSameDateTimeSelection: [{\n      type: Input\n    }],\n    headerComponent: [{\n      type: Input\n    }],\n    actionsPortal: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    type: [{\n      type: Input\n    }],\n    startAt: [{\n      type: Input\n    }],\n    timeInput: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Used to generate a unique ID for each datetimepicker instance. */\nlet datetimepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MTX_DATETIMEPICKER_SCROLL_STRATEGY = new InjectionToken('mtx-datetimepicker-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\nfunction MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\nconst MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MTX_DATETIMEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY\n};\n/**\n * Component used as the content for the datetimepicker dialog and popup. We use this instead of\n * using MtxCalendar directly as the content so we can control the initial focus. This also gives us\n * a place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MtxDatetimepickerContent {\n  constructor(_changeDetectorRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when an animation has finished. */\n    this._animationDone = new Subject();\n    /** Id of the label for the `role=\"dialog\"` element. */\n    this._dialogLabelId = null;\n    /** Portal with projected action buttons. */\n    this._actionsPortal = null;\n    /** The display type of datetimepicker. */\n    this.type = 'datetime';\n    /** The view of the calendar. */\n    this.view = 'month';\n  }\n  _viewChanged(view) {\n    this.view = view;\n  }\n  ngOnInit() {\n    this._animationState = this.datetimepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n  }\n  ngAfterContentInit() {\n    this._calendar._focusActiveCell();\n  }\n  ngOnDestroy() {\n    this._animationDone.complete();\n  }\n  _startExitAnimation() {\n    this._animationState = 'void';\n    this._changeDetectorRef.markForCheck();\n  }\n  _handleUserSelection() {\n    // Delegate closing the overlay to the actions.\n    if (!this._actionsPortal) {\n      this.datetimepicker.close();\n    }\n  }\n  /**\n   * Assigns a new portal containing the datetimepicker actions.\n   * @param portal Portal with the actions to be assigned.\n   * @param forceRerender Whether a re-render of the portal should be triggered.\n   */\n  _assignActions(portal, forceRerender) {\n    this._actionsPortal = portal;\n    if (forceRerender) {\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxDatetimepickerContent,\n      selectors: [[\"mtx-datetimepicker-content\"]],\n      viewQuery: function MtxDatetimepickerContent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MtxCalendar, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mtx-datetimepicker-content\"],\n      hostVars: 6,\n      hostBindings: function MtxDatetimepickerContent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MtxDatetimepickerContent_animation_transformPanel_done_HostBindingHandler() {\n            return ctx._animationDone.next();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n          i0.ɵɵattribute(\"mode\", ctx.datetimepicker.mode);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mtx-datetimepicker-content-touch\", ctx.datetimepicker == null ? null : ctx.datetimepicker.touchUi);\n        }\n      },\n      inputs: {\n        color: \"color\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 29,\n      consts: [[\"cdkTrapFocus\", \"\", \"role\", \"dialog\", 1, \"mtx-datetimepicker-content-container\"], [3, \"selectedChange\", \"viewChanged\", \"_userSelection\", \"id\", \"type\", \"startAt\", \"startView\", \"maxDate\", \"minDate\", \"dateFilter\", \"multiYearSelector\", \"preventSameDateTimeSelection\", \"headerComponent\", \"timeInterval\", \"twelvehour\", \"selected\", \"timeInput\", \"actionsPortal\"], [3, \"cdkPortalOutlet\"]],\n      template: function MtxDatetimepickerContent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mtx-calendar\", 1);\n          i0.ɵɵlistener(\"selectedChange\", function MtxDatetimepickerContent_Template_mtx_calendar_selectedChange_1_listener($event) {\n            return ctx.datetimepicker._select($event);\n          })(\"viewChanged\", function MtxDatetimepickerContent_Template_mtx_calendar_viewChanged_1_listener($event) {\n            return ctx.datetimepicker._viewChanged($event);\n          })(\"viewChanged\", function MtxDatetimepickerContent_Template_mtx_calendar_viewChanged_1_listener($event) {\n            return ctx._viewChanged($event);\n          })(\"_userSelection\", function MtxDatetimepickerContent_Template_mtx_calendar__userSelection_1_listener() {\n            return ctx._handleUserSelection();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, MtxDatetimepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_4_0;\n          i0.ɵɵclassProp(\"mtx-datetimepicker-content-container-with-custom-header\", ctx.datetimepicker.calendarHeaderComponent)(\"mtx-datetimepicker-content-container-with-actions\", ctx._actionsPortal)(\"mtx-datetimepicker-content-container-with-time-input\", ctx.datetimepicker.timeInput);\n          i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", (tmp_4_0 = ctx._dialogLabelId) !== null && tmp_4_0 !== undefined ? tmp_4_0 : undefined)(\"mode\", ctx.datetimepicker.mode);\n          i0.ɵɵadvance();\n          i0.ɵɵclassMap(ctx.datetimepicker.panelClass);\n          i0.ɵɵproperty(\"id\", ctx.datetimepicker.id)(\"type\", ctx.datetimepicker.type)(\"startAt\", ctx.datetimepicker.startAt)(\"startView\", ctx.datetimepicker.startView)(\"maxDate\", ctx.datetimepicker._maxDate)(\"minDate\", ctx.datetimepicker._minDate)(\"dateFilter\", ctx.datetimepicker._dateFilter)(\"multiYearSelector\", ctx.datetimepicker.multiYearSelector)(\"preventSameDateTimeSelection\", ctx.datetimepicker.preventSameDateTimeSelection)(\"headerComponent\", ctx.datetimepicker.calendarHeaderComponent)(\"timeInterval\", ctx.datetimepicker.timeInterval)(\"twelvehour\", ctx.datetimepicker.twelvehour)(\"selected\", ctx.datetimepicker._selected)(\"timeInput\", ctx.datetimepicker.timeInput)(\"actionsPortal\", ctx._actionsPortal)(\"@fadeInCalendar\", \"enter\");\n          i0.ɵɵattribute(\"mode\", ctx.datetimepicker.mode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        }\n      },\n      dependencies: [MtxCalendar, CdkPortalOutlet],\n      styles: [\".mtx-datetimepicker-content{display:block;border-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));background-color:var(--mtx-datetimepicker-container-background-color, var(--mat-app-surface-container-high));box-shadow:var(--mtx-datetimepicker-container-elevation-shadow);color:var(--mtx-datetimepicker-container-text-color, var(--mat-app-on-surface))}.mtx-datetimepicker-content .mtx-calendar{width:296px;height:424px}.mtx-datetimepicker-content .mtx-calendar.mtx-calendar-with-time-input{height:490px}.mtx-datetimepicker-content .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:442px}.mtx-datetimepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mtx-datetimepicker-content[mode=landscape] .mtx-calendar{width:432px;height:328px}.mtx-datetimepicker-content[mode=landscape] .mtx-calendar.mtx-calendar-with-time-input{height:404px}.mtx-datetimepicker-content[mode=landscape] .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:356px}@media all and (orientation: landscape){.mtx-datetimepicker-content[mode=auto] .mtx-calendar{width:432px;height:328px}.mtx-datetimepicker-content[mode=auto] .mtx-calendar.mtx-calendar-with-time-input{height:404px}.mtx-datetimepicker-content[mode=auto] .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:356px}}.mtx-datetimepicker-content-touch{display:block;max-height:84vh;box-shadow:var(--mtx-datetimepicker-container-touch-elevation-shadow);border-radius:var(--mtx-datetimepicker-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container{min-height:300px;max-height:850px;min-width:250px;max-width:750px}.mtx-datetimepicker-content-touch .mtx-calendar{width:100%;height:auto}.mtx-datetimepicker-content-touch .mtx-clock{width:50vh;max-width:80%;margin:12px auto}@media all and (orientation: landscape){.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto],.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape]{width:120vh;height:80vh}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape].mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{width:auto;height:100%}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait]{width:64vh;height:80vh}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait] .mtx-calendar{width:100%;height:auto}}@media all and (orientation: portrait){.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto],.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait]{width:80vw;height:120vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait] .mtx-calendar{width:100%;height:auto}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-actions,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-time-input,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait].mtx-datetimepicker-content-container-with-actions,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait].mtx-datetimepicker-content-container-with-time-input{height:124vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape]{width:90vw;height:64vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape] .mtx-calendar{width:auto;height:100%}}\\n\"],\n      encapsulation: 2,\n      data: {\n        animation: [mtxDatetimepickerAnimations.transformPanel, mtxDatetimepickerAnimations.fadeInCalendar]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-datetimepicker-content',\n      host: {\n        'class': 'mtx-datetimepicker-content',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mtx-datetimepicker-content-touch]': 'datetimepicker?.touchUi',\n        '[attr.mode]': 'datetimepicker.mode',\n        '[@transformPanel]': '_animationState',\n        '(@transformPanel.done)': '_animationDone.next()'\n      },\n      animations: [mtxDatetimepickerAnimations.transformPanel, mtxDatetimepickerAnimations.fadeInCalendar],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MtxCalendar, CdkPortalOutlet],\n      template: \"<div cdkTrapFocus\\n     role=\\\"dialog\\\"\\n     [attr.aria-modal]=\\\"true\\\"\\n     [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n     [attr.mode]=\\\"datetimepicker.mode\\\"\\n     class=\\\"mtx-datetimepicker-content-container\\\"\\n     [class.mtx-datetimepicker-content-container-with-custom-header]=\\\"datetimepicker.calendarHeaderComponent\\\"\\n     [class.mtx-datetimepicker-content-container-with-actions]=\\\"_actionsPortal\\\"\\n     [class.mtx-datetimepicker-content-container-with-time-input]=\\\"datetimepicker.timeInput\\\">\\n  <mtx-calendar [id]=\\\"datetimepicker.id\\\"\\n                [class]=\\\"datetimepicker.panelClass\\\"\\n                [attr.mode]=\\\"datetimepicker.mode\\\"\\n                [type]=\\\"datetimepicker.type\\\"\\n                [startAt]=\\\"datetimepicker.startAt\\\"\\n                [startView]=\\\"datetimepicker.startView\\\"\\n                [maxDate]=\\\"datetimepicker._maxDate\\\"\\n                [minDate]=\\\"datetimepicker._minDate\\\"\\n                [dateFilter]=\\\"datetimepicker._dateFilter\\\"\\n                [multiYearSelector]=\\\"datetimepicker.multiYearSelector\\\"\\n                [preventSameDateTimeSelection]=\\\"datetimepicker.preventSameDateTimeSelection\\\"\\n                [headerComponent]=\\\"datetimepicker.calendarHeaderComponent\\\"\\n                [timeInterval]=\\\"datetimepicker.timeInterval\\\"\\n                [twelvehour]=\\\"datetimepicker.twelvehour\\\"\\n                [selected]=\\\"datetimepicker._selected\\\"\\n                [timeInput]=\\\"datetimepicker.timeInput\\\"\\n                [actionsPortal]=\\\"_actionsPortal\\\"\\n                (selectedChange)=\\\"datetimepicker._select($event)\\\"\\n                (viewChanged)=\\\"datetimepicker._viewChanged($event)\\\"\\n                (viewChanged)=\\\"_viewChanged($event)\\\"\\n                (_userSelection)=\\\"_handleUserSelection()\\\"\\n                [@fadeInCalendar]=\\\"'enter'\\\">\\n  </mtx-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n</div>\\n\",\n      styles: [\".mtx-datetimepicker-content{display:block;border-radius:var(--mtx-datetimepicker-container-shape, var(--mat-app-corner-large));background-color:var(--mtx-datetimepicker-container-background-color, var(--mat-app-surface-container-high));box-shadow:var(--mtx-datetimepicker-container-elevation-shadow);color:var(--mtx-datetimepicker-container-text-color, var(--mat-app-on-surface))}.mtx-datetimepicker-content .mtx-calendar{width:296px;height:424px}.mtx-datetimepicker-content .mtx-calendar.mtx-calendar-with-time-input{height:490px}.mtx-datetimepicker-content .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:442px}.mtx-datetimepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mtx-datetimepicker-content[mode=landscape] .mtx-calendar{width:432px;height:328px}.mtx-datetimepicker-content[mode=landscape] .mtx-calendar.mtx-calendar-with-time-input{height:404px}.mtx-datetimepicker-content[mode=landscape] .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:356px}@media all and (orientation: landscape){.mtx-datetimepicker-content[mode=auto] .mtx-calendar{width:432px;height:328px}.mtx-datetimepicker-content[mode=auto] .mtx-calendar.mtx-calendar-with-time-input{height:404px}.mtx-datetimepicker-content[mode=auto] .mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{height:356px}}.mtx-datetimepicker-content-touch{display:block;max-height:84vh;box-shadow:var(--mtx-datetimepicker-container-touch-elevation-shadow);border-radius:var(--mtx-datetimepicker-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container{min-height:300px;max-height:850px;min-width:250px;max-width:750px}.mtx-datetimepicker-content-touch .mtx-calendar{width:100%;height:auto}.mtx-datetimepicker-content-touch .mtx-clock{width:50vh;max-width:80%;margin:12px auto}@media all and (orientation: landscape){.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto],.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape]{width:120vh;height:80vh}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape].mtx-datetimepicker-content-container-with-actions .mtx-calendar.mtx-calendar-with-time-input{width:auto;height:100%}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait]{width:64vh;height:80vh}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait] .mtx-calendar{width:100%;height:auto}}@media all and (orientation: portrait){.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto],.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait]{width:80vw;height:120vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto] .mtx-calendar,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait] .mtx-calendar{width:100%;height:auto}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-actions,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=auto].mtx-datetimepicker-content-container-with-time-input,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait].mtx-datetimepicker-content-container-with-actions,.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=portrait].mtx-datetimepicker-content-container-with-time-input{height:124vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape]{width:90vw;height:64vw}.mtx-datetimepicker-content-touch .mtx-datetimepicker-content-container[mode=landscape] .mtx-calendar{width:auto;height:100%}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], {\n    _calendar: [{\n      type: ViewChild,\n      args: [MtxCalendar, {\n        static: true\n      }]\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\nclass MtxDatetimepicker {\n  /** Classes to be passed to the date picker panel. */\n  get panelClass() {\n    return this._panelClass;\n  }\n  set panelClass(value) {\n    this._panelClass = coerceStringArray(value);\n  }\n  /** Whether the calendar is open. */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    value ? this.open() : this.close();\n  }\n  /** Color palette to use on the datetimepicker's calendar. */\n  get color() {\n    return this._color || (this.datetimepickerInput ? this.datetimepickerInput.getThemePalette() : undefined);\n  }\n  set color(value) {\n    this._color = value;\n  }\n  constructor(_overlay, _viewContainerRef, _scrollStrategy, _dateAdapter, _dir) {\n    this._overlay = _overlay;\n    this._viewContainerRef = _viewContainerRef;\n    this._scrollStrategy = _scrollStrategy;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._document = inject(DOCUMENT);\n    this._injector = inject(Injector);\n    /** Whether to show multi-year view. */\n    this.multiYearSelector = false;\n    /** Whether the clock uses 12 hour format. */\n    this.twelvehour = false;\n    /** The view that the calendar should start in. */\n    this.startView = 'month';\n    /** The display mode of datetimepicker. */\n    this.mode = 'auto';\n    /** Step over minutes. */\n    this.timeInterval = 1;\n    /** Prevent user to select same date time */\n    this.preventSameDateTimeSelection = false;\n    /**\n     * Emits new selected date when selected date changes.\n     * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\n     */\n    this.selectedChanged = new EventEmitter();\n    /** Emits when the datetimepicker has been opened. */\n    this.openedStream = new EventEmitter();\n    /** Emits when the datetimepicker has been closed. */\n    this.closedStream = new EventEmitter();\n    /** Emits when the view has been changed. */\n    this.viewChanged = new EventEmitter();\n    this._opened = false;\n    /** The id for the datetimepicker calendar. */\n    this.id = `mtx-datetimepicker-${datetimepickerUid++}`;\n    /** Emits when the datetimepicker is disabled. */\n    this._disabledChange = new Subject();\n    this._validSelected = null;\n    /** The element that was focused before the datetimepicker was opened. */\n    this._focusedElementBeforeOpen = null;\n    /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n    this._backdropHarnessClass = `${this.id}-backdrop`;\n    this._inputStateChanges = Subscription.EMPTY;\n    /** Portal with projected action buttons. */\n    this._actionsPortal = null;\n    /** Previous selected value. */\n    this.oldValue = null;\n    this._type = 'datetime';\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n    this.touchUi = false;\n    /**\n     * Whether the calendar is in time mode. In time mode the calendar clock gets time input\n     * elements rather then just clock. When `touchUi` is enabled this will be disabled.\n     */\n    this.timeInput = false;\n    /** Preferred position of the datetimepicker in the X axis. */\n    this.xPosition = 'start';\n    /** Preferred position of the datetimepicker in the Y axis. */\n    this.yPosition = 'below';\n    /**\n     * Whether to restore focus to the previously-focused element when the panel is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    this.restoreFocus = true;\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n  /** The date to open the calendar to initially. */\n  get startAt() {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this.datetimepickerInput ? this.datetimepickerInput.value : null);\n  }\n  set startAt(date) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(date);\n  }\n  /** The display type of datetimepicker. */\n  get type() {\n    return this._type;\n  }\n  set type(value) {\n    this._type = value || 'datetime';\n  }\n  /** Whether the datetimepicker pop-up should be disabled. */\n  get disabled() {\n    return this._disabled === undefined && this.datetimepickerInput ? this.datetimepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._disabledChange.next(value);\n    }\n  }\n  /** The currently selected date. */\n  get _selected() {\n    return this._validSelected;\n  }\n  set _selected(value) {\n    this._validSelected = value;\n  }\n  /** The minimum selectable date. */\n  get _minDate() {\n    return this.datetimepickerInput && this.datetimepickerInput.min;\n  }\n  /** The maximum selectable date. */\n  get _maxDate() {\n    return this.datetimepickerInput && this.datetimepickerInput.max;\n  }\n  get _dateFilter() {\n    return this.datetimepickerInput && this.datetimepickerInput._dateFilter;\n  }\n  _viewChanged(view) {\n    this.viewChanged.emit(view);\n  }\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this.close();\n    this._inputStateChanges.unsubscribe();\n    this._disabledChange.complete();\n  }\n  /** Selects the given date */\n  _select(date) {\n    this.oldValue = this._selected;\n    this._selected = date;\n    if (!this._actionsPortal) {\n      if (!this._dateAdapter.sameDatetime(this.oldValue, this._selected)) {\n        this.selectedChanged.emit(date);\n      }\n    }\n  }\n  _selectManually() {\n    if (!this._selected) {\n      this._selected = this._dateAdapter.today();\n      this.selectedChanged.emit(this._selected);\n    } else if (!this._dateAdapter.sameDatetime(this.oldValue, this._selected)) {\n      this.selectedChanged.emit(this._selected || this.oldValue);\n    }\n    this.close();\n  }\n  _clearSelected() {\n    this.oldValue = null;\n    this._selected = null;\n    this.selectedChanged.emit();\n    this.close();\n  }\n  /**\n   * Register an input with this datetimepicker.\n   * @param input The datetimepicker input to register with this datetimepicker.\n   */\n  _registerInput(input) {\n    if (this.datetimepickerInput) {\n      throw Error('A MtxDatetimepicker can only be associated with a single input.');\n    }\n    this.datetimepickerInput = input;\n    this._inputStateChanges = this.datetimepickerInput._valueChange.subscribe(value => this._selected = value);\n  }\n  /** Open the calendar. */\n  open() {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this.datetimepickerInput) {\n      throw Error('Attempted to open an MtxDatetimepicker with no associated input.');\n    }\n    this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n    this._openOverlay();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n  /** Close the calendar. */\n  close() {\n    if (!this._opened) {\n      return;\n    }\n    const canRestoreFocus = this.restoreFocus && this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function';\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n      }\n    };\n    if (this._componentRef) {\n      const {\n        instance,\n        location\n      } = this._componentRef;\n      instance._startExitAnimation();\n      instance._animationDone.pipe(take(1)).subscribe(() => {\n        const activeElement = this._document.activeElement;\n        // Since we restore focus after the exit animation, we have to check that\n        // the user didn't move focus themselves inside the `close` handler.\n        if (canRestoreFocus && (!activeElement || activeElement === this._document.activeElement || location.nativeElement.contains(activeElement))) {\n          this._focusedElementBeforeOpen.focus();\n        }\n        this._focusedElementBeforeOpen = null;\n        this._destroyOverlay();\n      });\n    }\n    if (canRestoreFocus) {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datetimepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datetimepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datetimepicker as closed, async as well.\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n  /**\n   * Forwards relevant values from the datetimepicker to the\n   * datetimepicker content inside the overlay.\n   */\n  _forwardContentValues(instance) {\n    instance.datetimepicker = this;\n    instance.color = this.color;\n    instance._dialogLabelId = this.datetimepickerInput.getOverlayLabelId();\n    instance.type = this.type;\n    instance.view = this.startView;\n    instance._assignActions(this._actionsPortal, false);\n  }\n  /** Opens the overlay with the calendar. */\n  _openOverlay() {\n    this._destroyOverlay();\n    const isDialog = this.touchUi;\n    const labelId = this.datetimepickerInput.getOverlayLabelId();\n    const portal = new ComponentPortal(MtxDatetimepickerContent, this._viewContainerRef);\n    const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n      positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n      hasBackdrop: true,\n      backdropClass: [isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n      direction: this._dir,\n      scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n      panelClass: `mtx-datetimepicker-${isDialog ? 'dialog' : 'popup'}`\n    }));\n    const overlayElement = overlayRef.overlayElement;\n    overlayElement.setAttribute('role', 'dialog');\n    if (labelId) {\n      overlayElement.setAttribute('aria-labelledby', labelId);\n    }\n    if (isDialog) {\n      overlayElement.setAttribute('aria-modal', 'true');\n    }\n    this._getCloseStream(overlayRef).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.close();\n    });\n    this._componentRef = overlayRef.attach(portal);\n    this._forwardContentValues(this._componentRef.instance);\n    // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n    if (!isDialog) {\n      afterNextRender(() => {\n        overlayRef.updatePosition();\n      }, {\n        injector: this._injector\n      });\n    }\n  }\n  /** Destroys the current overlay. */\n  _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = this._componentRef = null;\n    }\n  }\n  /** Gets a position strategy that will open the calendar as a dropdown. */\n  _getDialogStrategy() {\n    return this._overlay.position().global().centerHorizontally().centerVertically();\n  }\n  /** Gets a position strategy that will open the calendar as a dropdown. */\n  _getDropdownStrategy() {\n    const strategy = this._overlay.position().flexibleConnectedTo(this.datetimepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mtx-datetimepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();\n    return this._setConnectedPositions(strategy);\n  }\n  /**\n   * Sets the positions of the datetimepicker in dropdown mode based on the current configuration.\n   */\n  _setConnectedPositions(strategy) {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n    return strategy.withPositions([{\n      originX: primaryX,\n      originY: secondaryY,\n      overlayX: primaryX,\n      overlayY: primaryY\n    }, {\n      originX: primaryX,\n      originY: primaryY,\n      overlayX: primaryX,\n      overlayY: secondaryY\n    }, {\n      originX: secondaryX,\n      originY: secondaryY,\n      overlayX: secondaryX,\n      overlayY: primaryY\n    }, {\n      originX: secondaryX,\n      originY: primaryY,\n      overlayX: secondaryX,\n      overlayY: secondaryY\n    }]);\n  }\n  /** Gets an observable that will emit when the overlay is supposed to be closed. */\n  _getCloseStream(overlayRef) {\n    return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n      // Closing on alt + up is only valid when there's an input associated with the\n      // datetimepicker.\n      return event.keyCode === ESCAPE && !hasModifierKey(event) || this.datetimepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW;\n    })));\n  }\n  /**\n   * Registers a portal containing action buttons with the datetimepicker.\n   * @param portal Portal to be registered.\n   */\n  registerActions(portal) {\n    if (this._actionsPortal) {\n      throw Error('A MtxDatetimepicker can only be associated with a single actions row.');\n    }\n    this._actionsPortal = portal;\n    this._componentRef?.instance._assignActions(portal, true);\n  }\n  /**\n   * Removes a portal containing action buttons from the datetimepicker.\n   * @param portal Portal to be removed.\n   */\n  removeActions(portal) {\n    if (portal === this._actionsPortal) {\n      this._actionsPortal = null;\n      this._componentRef?.instance._assignActions(null, true);\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepicker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepicker)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MTX_DATETIMEPICKER_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxDatetimepicker,\n      selectors: [[\"mtx-datetimepicker\"]],\n      inputs: {\n        multiYearSelector: [2, \"multiYearSelector\", \"multiYearSelector\", booleanAttribute],\n        twelvehour: [2, \"twelvehour\", \"twelvehour\", booleanAttribute],\n        startView: \"startView\",\n        mode: \"mode\",\n        timeInterval: \"timeInterval\",\n        preventSameDateTimeSelection: [2, \"preventSameDateTimeSelection\", \"preventSameDateTimeSelection\", booleanAttribute],\n        calendarHeaderComponent: \"calendarHeaderComponent\",\n        panelClass: \"panelClass\",\n        opened: [2, \"opened\", \"opened\", booleanAttribute],\n        color: \"color\",\n        startAt: \"startAt\",\n        type: \"type\",\n        touchUi: [2, \"touchUi\", \"touchUi\", booleanAttribute],\n        timeInput: [2, \"timeInput\", \"timeInput\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        xPosition: \"xPosition\",\n        yPosition: \"yPosition\",\n        restoreFocus: [2, \"restoreFocus\", \"restoreFocus\", booleanAttribute]\n      },\n      outputs: {\n        selectedChanged: \"selectedChanged\",\n        openedStream: \"opened\",\n        closedStream: \"closed\",\n        viewChanged: \"viewChanged\"\n      },\n      exportAs: [\"mtxDatetimepicker\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function MtxDatetimepicker_Template(rf, ctx) {},\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-datetimepicker',\n      exportAs: 'mtxDatetimepicker',\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      standalone: true\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MTX_DATETIMEPICKER_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    multiYearSelector: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    twelvehour: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    startView: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    timeInterval: [{\n      type: Input\n    }],\n    preventSameDateTimeSelection: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    selectedChanged: [{\n      type: Output\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    startAt: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    timeInput: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst MAT_DATETIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MtxDatetimepickerInput),\n  multi: true\n};\nconst MAT_DATETIMEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MtxDatetimepickerInput),\n  multi: true\n};\n/**\n * An event used for datetimepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MtxDatetimepickerInputEvent instead.\n */\nclass MtxDatetimepickerInputEvent {\n  constructor(target, targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n}\n/** Directive used to connect an input to a MtxDatetimepicker. */\nclass MtxDatetimepickerInput {\n  constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._formField = _formField;\n    /** Emits when a `change` event is fired on this `<input>`. */\n    this.dateChange = new EventEmitter();\n    /** Emits when an `input` event is fired on this `<input>`. */\n    this.dateInput = new EventEmitter();\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    this._valueChange = new EventEmitter();\n    /** Emits when the disabled state has changed */\n    this._disabledChange = new EventEmitter();\n    this._datetimepickerSubscription = Subscription.EMPTY;\n    this._localeSubscription = Subscription.EMPTY;\n    /** Whether the last value set on the input was valid. */\n    this._lastValueValid = false;\n    this._onTouched = () => {};\n    this._cvaOnChange = () => {};\n    this._validatorOnChange = () => {};\n    /** The form control validator for whether the input parses. */\n    this._parseValidator = () => {\n      return this._lastValueValid ? null : {\n        mtxDatetimepickerParse: {\n          text: this._elementRef.nativeElement.value\n        }\n      };\n    };\n    /** The form control validator for the min date. */\n    this._minValidator = control => {\n      const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this.min || !controlValue || this._dateAdapter.compareDatetime(this.min, controlValue) <= 0 ? null : {\n        mtxDatetimepickerMin: {\n          min: this.min,\n          actual: controlValue\n        }\n      };\n    };\n    /** The form control validator for the max date. */\n    this._maxValidator = control => {\n      const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this.max || !controlValue || this._dateAdapter.compareDatetime(this.max, controlValue) >= 0 ? null : {\n        mtxDatetimepickerMax: {\n          max: this.max,\n          actual: controlValue\n        }\n      };\n    };\n    /** The form control validator for the date filter. */\n    this._filterValidator = control => {\n      const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this._dateFilter || !controlValue || this._dateFilter(controlValue, MtxDatetimepickerFilterType.DATE) ? null : {\n        mtxDatetimepickerFilter: true\n      };\n    };\n    /** The combined form control validator for this input. */\n    this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DatetimeAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MTX_DATETIME_FORMATS');\n    }\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this._dateAdapter.deserialize(this.value);\n    });\n  }\n  /** The datetimepicker that this input is associated with. */\n  set mtxDatetimepicker(value) {\n    this.registerDatetimepicker(value);\n  }\n  set mtxDatetimepickerFilter(filter) {\n    this._dateFilter = filter;\n    this._validatorOnChange();\n  }\n  /** The value of the input. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._dateAdapter.getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n    // use timeout to ensure the datetimepicker is instantiated and we get the correct format\n    setTimeout(() => {\n      if (!this._dateAdapter.sameDatetime(oldDate, value)) {\n        this._valueChange.emit(value);\n      }\n    });\n  }\n  /** The minimum valid date. */\n  get min() {\n    return this._min;\n  }\n  set min(value) {\n    this._min = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  /** The maximum valid date. */\n  get max() {\n    return this._max;\n  }\n  set max(value) {\n    this._max = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  /** Whether the datetimepicker-input is disabled. */\n  get disabled() {\n    return !!this._disabled;\n  }\n  set disabled(value) {\n    if (this._disabled !== value) {\n      this._disabled = value;\n      this._disabledChange.emit(value);\n    }\n  }\n  ngAfterContentInit() {\n    if (this._datetimepicker) {\n      this._datetimepickerSubscription = this._datetimepicker.selectedChanged.subscribe(selected => {\n        this.value = selected;\n        this._cvaOnChange(selected);\n        this._onTouched();\n        this.dateInput.emit(new MtxDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n        this.dateChange.emit(new MtxDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n      });\n    }\n  }\n  ngOnDestroy() {\n    this._datetimepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  validate(c) {\n    return this._validator ? this._validator(c) : null;\n  }\n  /**\n   * Gets the element that the datetimepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n  /** Gets the ID of an element that should be used a description for the calendar overlay. */\n  getOverlayLabelId() {\n    if (this._formField) {\n      return this._formField.getLabelId();\n    }\n    return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n  }\n  // Implemented as part of ControlValueAccessor\n  writeValue(value) {\n    this.value = value;\n  }\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn) {\n    this._cvaOnChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor\n  setDisabledState(disabled) {\n    this.disabled = disabled;\n  }\n  _onKeydown(event) {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datetimepicker.open();\n      event.preventDefault();\n    }\n  }\n  _onInput(value) {\n    let date = this._dateAdapter.parse(value, this.getParseFormat());\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._dateAdapter.getValidDateOrNull(date);\n    this._value = date;\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new MtxDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n  _onChange() {\n    this.dateChange.emit(new MtxDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n    this._onTouched();\n  }\n  registerDatetimepicker(value) {\n    if (value) {\n      this._datetimepicker = value;\n      this._datetimepicker._registerInput(this);\n    }\n  }\n  getDisplayFormat() {\n    switch (this._datetimepicker.type) {\n      case 'date':\n        return this._dateFormats.display.dateInput;\n      case 'datetime':\n        return this._dateFormats.display.datetimeInput;\n      case 'time':\n        return this._dateFormats.display.timeInput;\n      case 'month':\n        return this._dateFormats.display.monthInput;\n      case 'year':\n        return this._dateFormats.display.yearInput;\n    }\n  }\n  getParseFormat() {\n    let parseFormat;\n    switch (this._datetimepicker.type) {\n      case 'date':\n        parseFormat = this._dateFormats.parse.dateInput;\n        break;\n      case 'datetime':\n        parseFormat = this._dateFormats.parse.datetimeInput;\n        break;\n      case 'time':\n        parseFormat = this._dateFormats.parse.timeInput;\n        break;\n      case 'month':\n        parseFormat = this._dateFormats.parse.monthInput;\n        break;\n      case 'year':\n        parseFormat = this._dateFormats.parse.yearInput;\n        break;\n    }\n    if (!parseFormat) {\n      parseFormat = this._dateFormats.parse.dateInput;\n    }\n    return parseFormat;\n  }\n  /** Formats a value and sets it on the input element. */\n  _formatValue(value) {\n    this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this.getDisplayFormat()) : '';\n  }\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerInput_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DatetimeAdapter, 8), i0.ɵɵdirectiveInject(MTX_DATETIME_FORMATS, 8), i0.ɵɵdirectiveInject(i2.MatFormField, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxDatetimepickerInput,\n      selectors: [[\"input\", \"mtxDatetimepicker\", \"\"]],\n      hostVars: 5,\n      hostBindings: function MtxDatetimepickerInput_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function MtxDatetimepickerInput_input_HostBindingHandler($event) {\n            return ctx._onInput($event.target.value);\n          })(\"change\", function MtxDatetimepickerInput_change_HostBindingHandler() {\n            return ctx._onChange();\n          })(\"blur\", function MtxDatetimepickerInput_blur_HostBindingHandler() {\n            return ctx._onBlur();\n          })(\"keydown\", function MtxDatetimepickerInput_keydown_HostBindingHandler($event) {\n            return ctx._onKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-owns\", (ctx._datetimepicker == null ? null : ctx._datetimepicker.opened) && ctx._datetimepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n        }\n      },\n      inputs: {\n        mtxDatetimepicker: \"mtxDatetimepicker\",\n        mtxDatetimepickerFilter: \"mtxDatetimepickerFilter\",\n        value: \"value\",\n        min: \"min\",\n        max: \"max\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        dateChange: \"dateChange\",\n        dateInput: \"dateInput\"\n      },\n      exportAs: [\"mtxDatetimepickerInput\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_DATETIMEPICKER_VALUE_ACCESSOR, MAT_DATETIMEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MtxDatetimepickerInput\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[mtxDatetimepicker]',\n      providers: [MAT_DATETIMEPICKER_VALUE_ACCESSOR, MAT_DATETIMEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MtxDatetimepickerInput\n      }],\n      host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(_datetimepicker?.opened && _datetimepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'mtxDatetimepickerInput',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.DatetimeAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MTX_DATETIME_FORMATS]\n    }]\n  }, {\n    type: i2.MatFormField,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }],\n    mtxDatetimepicker: [{\n      type: Input\n    }],\n    mtxDatetimepickerFilter: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Can be used to override the icon of a `mtxDatetimepickerToggle`. */\nclass MtxDatetimepickerToggleIcon {\n  /** @nocollapse */static {\n    this.ɵfac = function MtxDatetimepickerToggleIcon_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerToggleIcon)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxDatetimepickerToggleIcon,\n      selectors: [[\"\", \"mtxDatetimepickerToggleIcon\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[mtxDatetimepickerToggleIcon]',\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MtxDatetimepickerToggle {\n  /** Whether the toggle button is disabled. */\n  get disabled() {\n    return this._disabled === undefined ? this.datetimepicker.disabled : !!this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._stateChanges = Subscription.EMPTY;\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n  ngOnChanges(changes) {\n    if (changes.datetimepicker) {\n      this._watchStateChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n  _open(event) {\n    if (this.datetimepicker && !this.disabled) {\n      this.datetimepicker.open();\n      event.stopPropagation();\n    }\n  }\n  _watchStateChanges() {\n    const datetimepickerDisabled = this.datetimepicker ? this.datetimepicker._disabledChange : of();\n    const inputDisabled = this.datetimepicker && this.datetimepicker.datetimepickerInput ? this.datetimepicker.datetimepickerInput._disabledChange : of();\n    const datetimepickerToggled = this.datetimepicker ? merge(this.datetimepicker.openedStream, this.datetimepicker.closedStream) : of();\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(this._intl.changes, datetimepickerDisabled, inputDisabled, datetimepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerToggle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerToggle)(i0.ɵɵdirectiveInject(MtxDatetimepickerIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxDatetimepickerToggle,\n      selectors: [[\"mtx-datetimepicker-toggle\"]],\n      contentQueries: function MtxDatetimepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MtxDatetimepickerToggleIcon, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n        }\n      },\n      viewQuery: function MtxDatetimepickerToggle_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._button = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mtx-datetimepicker-toggle\"],\n      hostVars: 8,\n      hostBindings: function MtxDatetimepickerToggle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MtxDatetimepickerToggle_click_HostBindingHandler($event) {\n            return ctx._open($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"tabindex\", null)(\"data-mtx-calendar\", ctx.datetimepicker ? ctx.datetimepicker.id : null);\n          i0.ɵɵclassProp(\"mtx-datetimepicker-toggle-active\", ctx.datetimepicker && ctx.datetimepicker.opened)(\"mat-accent\", ctx.datetimepicker && ctx.datetimepicker.color === \"accent\")(\"mat-warn\", ctx.datetimepicker && ctx.datetimepicker.color === \"warn\");\n        }\n      },\n      inputs: {\n        datetimepicker: [0, \"for\", \"datetimepicker\"],\n        tabIndex: \"tabIndex\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      exportAs: [\"mtxDatetimepickerToggle\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 4,\n      vars: 6,\n      consts: [[\"button\", \"\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mtx-datetimepicker-toggle-default-icon\"], [\"d\", \"M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z\"], [\"d\", \"M15,13H16.5V15.82L18.94,17.23L18.19,18.53L15,16.69V13M19,8H5V19H9.67C9.24,18.09 9,17.07 9,16A7,7 0 0,1 16,9C17.07,9 18.09,9.24 19,9.67V8M5,21C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H6V1H8V3H16V1H18V3H19A2,2 0 0,1 21,5V11.1C22.24,12.36 23,14.09 23,16A7,7 0 0,1 16,23C14.09,23 12.36,22.24 11.1,21H5M16,11.15A4.85,4.85 0 0,0 11.15,16C11.15,18.68 13.32,20.85 16,20.85A4.85,4.85 0 0,0 20.85,16C20.85,13.32 18.68,11.15 16,11.15Z\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n      template: function MtxDatetimepickerToggle_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c4);\n          i0.ɵɵelementStart(0, \"button\", 1, 0);\n          i0.ɵɵtemplate(2, MtxDatetimepickerToggle_Conditional_2_Template, 3, 1);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n          i0.ɵɵattribute(\"aria-haspopup\", ctx.datetimepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(!ctx._customIcon ? 2 : -1);\n        }\n      },\n      dependencies: [MatIconButton],\n      styles: [\".mtx-datetimepicker-toggle{pointer-events:auto;color:var(--mtx-datetimepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mtx-datetimepicker-toggle-active{color:var(--mtx-datetimepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mtx-datetimepicker-toggle-default-icon{color:CanvasText}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-datetimepicker-toggle',\n      host: {\n        'class': 'mtx-datetimepicker-toggle',\n        '[attr.tabindex]': 'null',\n        '[class.mtx-datetimepicker-toggle-active]': 'datetimepicker && datetimepicker.opened',\n        '[class.mat-accent]': 'datetimepicker && datetimepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datetimepicker && datetimepicker.color === \"warn\"',\n        // Used by the test harness to tie this toggle to its datetimepicker.\n        '[attr.data-mtx-calendar]': 'datetimepicker ? datetimepicker.id : null',\n        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n        // it so that the input doesn't get focused automatically by the form field (See #21836).\n        '(click)': '_open($event)'\n      },\n      exportAs: 'mtxDatetimepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatIconButton],\n      template: \"<button #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datetimepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  @if (!_customIcon) {\\n    @switch (datetimepicker.type) {\\n      @case ('time') {\\n        <svg\\n          class=\\\"mtx-datetimepicker-toggle-default-icon\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          width=\\\"24px\\\"\\n          height=\\\"24px\\\"\\n          fill=\\\"currentColor\\\"\\n          focusable=\\\"false\\\">\\n          <path d=\\\"M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z\\\" />\\n        </svg>\\n      }\\n      @case ('datetime') {\\n        <svg\\n          class=\\\"mtx-datetimepicker-toggle-default-icon\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          width=\\\"24px\\\"\\n          height=\\\"24px\\\"\\n          fill=\\\"currentColor\\\"\\n          focusable=\\\"false\\\">\\n          <path d=\\\"M15,13H16.5V15.82L18.94,17.23L18.19,18.53L15,16.69V13M19,8H5V19H9.67C9.24,18.09 9,17.07 9,16A7,7 0 0,1 16,9C17.07,9 18.09,9.24 19,9.67V8M5,21C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H6V1H8V3H16V1H18V3H19A2,2 0 0,1 21,5V11.1C22.24,12.36 23,14.09 23,16A7,7 0 0,1 16,23C14.09,23 12.36,22.24 11.1,21H5M16,11.15A4.85,4.85 0 0,0 11.15,16C11.15,18.68 13.32,20.85 16,20.85A4.85,4.85 0 0,0 20.85,16C20.85,13.32 18.68,11.15 16,11.15Z\\\" />\\n        </svg>\\n      }\\n      @default {\\n        <svg\\n          class=\\\"mtx-datetimepicker-toggle-default-icon\\\"\\n          viewBox=\\\"0 0 24 24\\\"\\n          width=\\\"24px\\\"\\n          height=\\\"24px\\\"\\n          fill=\\\"currentColor\\\"\\n          focusable=\\\"false\\\">\\n          <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n          <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\" />\\n        </svg>\\n      }\\n    }\\n  }\\n\\n  <ng-content select=\\\"[mtxDatetimepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n      styles: [\".mtx-datetimepicker-toggle{pointer-events:auto;color:var(--mtx-datetimepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mtx-datetimepicker-toggle-active{color:var(--mtx-datetimepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mtx-datetimepicker-toggle-default-icon{color:CanvasText}\\n\"]\n    }]\n  }], () => [{\n    type: MtxDatetimepickerIntl\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }], {\n    datetimepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MtxDatetimepickerToggleIcon]\n    }],\n    _button: [{\n      type: ViewChild,\n      args: ['button']\n    }]\n  });\n})();\nclass MtxDatetimepickerApply {\n  constructor(_datetimepicker) {\n    this._datetimepicker = _datetimepicker;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerApply_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerApply)(i0.ɵɵdirectiveInject(MtxDatetimepicker));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxDatetimepickerApply,\n      selectors: [[\"\", \"mtxDatetimepickerApply\", \"\"]],\n      hostBindings: function MtxDatetimepickerApply_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MtxDatetimepickerApply_click_HostBindingHandler() {\n            return ctx._datetimepicker._selectManually();\n          });\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerApply, [{\n    type: Directive,\n    args: [{\n      selector: '[mtxDatetimepickerApply]',\n      host: {\n        '(click)': '_datetimepicker._selectManually()'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: MtxDatetimepicker\n  }], null);\n})();\nclass MtxDatetimepickerCancel {\n  constructor(_datetimepicker) {\n    this._datetimepicker = _datetimepicker;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerCancel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerCancel)(i0.ɵɵdirectiveInject(MtxDatetimepicker));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxDatetimepickerCancel,\n      selectors: [[\"\", \"mtxDatetimepickerCancel\", \"\"]],\n      hostBindings: function MtxDatetimepickerCancel_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MtxDatetimepickerCancel_click_HostBindingHandler() {\n            return ctx._datetimepicker.close();\n          });\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerCancel, [{\n    type: Directive,\n    args: [{\n      selector: '[mtxDatetimepickerCancel]',\n      host: {\n        '(click)': '_datetimepicker.close()'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: MtxDatetimepicker\n  }], null);\n})();\nclass MtxDatetimepickerClear {\n  constructor(_datetimepicker) {\n    this._datetimepicker = _datetimepicker;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerClear_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerClear)(i0.ɵɵdirectiveInject(MtxDatetimepicker));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MtxDatetimepickerClear,\n      selectors: [[\"\", \"mtxDatetimepickerClear\", \"\"]],\n      hostBindings: function MtxDatetimepickerClear_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MtxDatetimepickerClear_click_HostBindingHandler() {\n            return ctx._datetimepicker._clearSelected();\n          });\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerClear, [{\n    type: Directive,\n    args: [{\n      selector: '[mtxDatetimepickerClear]',\n      host: {\n        '(click)': '_datetimepicker._clearSelected()'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: MtxDatetimepicker\n  }], null);\n})();\nclass MtxDatetimepickerActions {\n  constructor(_datetimepicker, _viewContainerRef) {\n    this._datetimepicker = _datetimepicker;\n    this._viewContainerRef = _viewContainerRef;\n  }\n  ngAfterViewInit() {\n    this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    this._datetimepicker.registerActions(this._portal);\n  }\n  ngOnDestroy() {\n    this._datetimepicker.removeActions(this._portal);\n    // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n    if (this._portal && this._portal.isAttached) {\n      this._portal?.detach();\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxDatetimepickerActions_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerActions)(i0.ɵɵdirectiveInject(MtxDatetimepicker), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxDatetimepickerActions,\n      selectors: [[\"mtx-datetimepicker-actions\"]],\n      viewQuery: function MtxDatetimepickerActions_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._template = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c6,\n      decls: 1,\n      vars: 0,\n      consts: [[1, \"mtx-datetimepicker-actions\"]],\n      template: function MtxDatetimepickerActions_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MtxDatetimepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n        }\n      },\n      styles: [\".mtx-datetimepicker-actions{position:relative;display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px}.mtx-datetimepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mtx-datetimepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerActions, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-datetimepicker-actions',\n      template: `\n    <ng-template>\n      <div class=\"mtx-datetimepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      styles: [\".mtx-datetimepicker-actions{position:relative;display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px}.mtx-datetimepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mtx-datetimepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], () => [{\n    type: MtxDatetimepicker\n  }, {\n    type: i0.ViewContainerRef\n  }], {\n    _template: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\nclass MtxDatetimepickerModule {\n  /** @nocollapse */static {\n    this.ɵfac = function MtxDatetimepickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxDatetimepickerModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MtxDatetimepickerModule,\n      imports: [CommonModule, OverlayModule, A11yModule, PortalModule, MatButtonModule, MtxCalendar, MtxCalendarBody, MtxClock, MtxTime, MtxTimeInput, MtxDatetimepicker, MtxDatetimepickerToggle, MtxDatetimepickerToggleIcon, MtxDatetimepickerInput, MtxDatetimepickerContent, MtxMonthView, MtxYearView, MtxMultiYearView, MtxDatetimepickerApply, MtxDatetimepickerCancel, MtxDatetimepickerClear, MtxDatetimepickerActions],\n      exports: [MtxCalendar, MtxCalendarBody, MtxClock, MtxTime, MtxDatetimepicker, MtxDatetimepickerToggle, MtxDatetimepickerToggleIcon, MtxDatetimepickerInput, MtxDatetimepickerContent, MtxMonthView, MtxYearView, MtxMultiYearView, MtxDatetimepickerApply, MtxDatetimepickerCancel, MtxDatetimepickerClear, MtxDatetimepickerActions]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [CommonModule, OverlayModule, A11yModule, PortalModule, MatButtonModule, MtxCalendar, MtxTime, MtxDatetimepickerToggle, MtxDatetimepickerContent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxDatetimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, A11yModule, PortalModule, MatButtonModule, MtxCalendar, MtxCalendarBody, MtxClock, MtxTime, MtxTimeInput, MtxDatetimepicker, MtxDatetimepickerToggle, MtxDatetimepickerToggleIcon, MtxDatetimepickerInput, MtxDatetimepickerContent, MtxMonthView, MtxYearView, MtxMultiYearView, MtxDatetimepickerApply, MtxDatetimepickerCancel, MtxDatetimepickerClear, MtxDatetimepickerActions],\n      exports: [MtxCalendar, MtxCalendarBody, MtxClock, MtxTime, MtxDatetimepicker, MtxDatetimepickerToggle, MtxDatetimepickerToggleIcon, MtxDatetimepickerInput, MtxDatetimepickerContent, MtxMonthView, MtxYearView, MtxMultiYearView, MtxDatetimepickerApply, MtxDatetimepickerCancel, MtxDatetimepickerClear, MtxDatetimepickerActions],\n      providers: [MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CLOCK_INNER_RADIUS, CLOCK_OUTER_RADIUS, CLOCK_RADIUS, CLOCK_TICK_RADIUS, MAT_DATETIMEPICKER_VALIDATORS, MAT_DATETIMEPICKER_VALUE_ACCESSOR, MTX_DATETIMEPICKER_SCROLL_STRATEGY, MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY, MTX_DATETIMEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MtxCalendar, MtxCalendarBody, MtxCalendarCell, MtxClock, MtxDatetimepicker, MtxDatetimepickerActions, MtxDatetimepickerApply, MtxDatetimepickerCancel, MtxDatetimepickerClear, MtxDatetimepickerContent, MtxDatetimepickerFilterType, MtxDatetimepickerInput, MtxDatetimepickerInputEvent, MtxDatetimepickerIntl, MtxDatetimepickerModule, MtxDatetimepickerToggle, MtxDatetimepickerToggleIcon, MtxMonthView, MtxMultiYearView, MtxTime, MtxTimeInput, MtxYearView, getActiveOffset, isSameMultiYearView, mtxDatetimepickerAnimations, yearsPerPage, yearsPerRow };\n"],
  "mappings": "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",
  "names": ["MtxDatetimepickerFilterType", "document", "trigger", "filter"]
}
