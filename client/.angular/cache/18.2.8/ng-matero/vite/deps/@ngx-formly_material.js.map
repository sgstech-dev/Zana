{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-input.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-textarea.mjs", "../../../../../../node_modules/@ngx-formly/core/fesm2020/ngx-formly-core-select.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-radio.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-checkbox.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-multicheckbox.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-select.mjs", "../../../../../../node_modules/@ngx-formly/material/fesm2020/ngx-formly-material.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nfunction FormlyFieldInput_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.id)(\"name\", ctx_r0.field.name)(\"type\", ctx_r0.type || \"text\")(\"readonly\", ctx_r0.props.readonly)(\"required\", ctx_r0.required)(\"errorStateMatcher\", ctx_r0.errorStateMatcher)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field)(\"tabIndex\", ctx_r0.props.tabindex)(\"placeholder\", ctx_r0.props.placeholder);\n  }\n}\nfunction FormlyFieldInput_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.id)(\"name\", ctx_r0.field.name)(\"readonly\", ctx_r0.props.readonly)(\"required\", ctx_r0.required)(\"errorStateMatcher\", ctx_r0.errorStateMatcher)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field)(\"tabIndex\", ctx_r0.props.tabindex)(\"placeholder\", ctx_r0.props.placeholder);\n  }\n}\nclass FormlyFieldInput extends FieldType {\n  get type() {\n    return this.props.type || 'text';\n  }\n}\nFormlyFieldInput.ɵfac = /* @__PURE__ */(() => {\n  let ɵFormlyFieldInput_BaseFactory;\n  return function FormlyFieldInput_Factory(__ngFactoryType__) {\n    return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldInput)))(__ngFactoryType__ || FormlyFieldInput);\n  };\n})();\nFormlyFieldInput.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldInput,\n  selectors: [[\"formly-field-mat-input\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[\"numberTmp\", \"\"], [\"matInput\", \"\", 3, \"id\", \"name\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\", 4, \"ngIf\", \"ngIfElse\"], [\"matInput\", \"\", 3, \"id\", \"name\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"id\", \"name\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\"]],\n  template: function FormlyFieldInput_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldInput_input_0_Template, 1, 10, \"input\", 1)(1, FormlyFieldInput_ng_template_1_Template, 1, 9, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const numberTmp_r2 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.type !== \"number\")(\"ngIfElse\", numberTmp_r2);\n    }\n  },\n  dependencies: [i1.NgIf, i2.MatInput, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.FormControlDirective, i4.ɵFormlyAttributes, i3.NumberValueAccessor],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldInput, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-input',\n      template: `\n    <input\n      *ngIf=\"type !== 'number'; else numberTmp\"\n      matInput\n      [id]=\"id\"\n      [name]=\"field.name\"\n      [type]=\"type || 'text'\"\n      [readonly]=\"props.readonly\"\n      [required]=\"required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"props.tabindex\"\n      [placeholder]=\"props.placeholder\"\n    />\n    <ng-template #numberTmp>\n      <input\n        matInput\n        [id]=\"id\"\n        [name]=\"field.name\"\n        type=\"number\"\n        [readonly]=\"props.readonly\"\n        [required]=\"required\"\n        [errorStateMatcher]=\"errorStateMatcher\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"props.tabindex\"\n        [placeholder]=\"props.placeholder\"\n      />\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nclass FormlyMatInputModule {}\nFormlyMatInputModule.ɵfac = function FormlyMatInputModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatInputModule)();\n};\nFormlyMatInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatInputModule,\n  declarations: [FormlyFieldInput],\n  imports: [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, i4.FormlyModule]\n});\nFormlyMatInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field']\n    }, {\n      name: 'string',\n      extends: 'input'\n    }, {\n      name: 'number',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }, {\n      name: 'integer',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldInput],\n      imports: [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'input',\n          component: FormlyFieldInput,\n          wrappers: ['form-field']\n        }, {\n          name: 'string',\n          extends: 'input'\n        }, {\n          name: 'number',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }, {\n          name: 'integer',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldInput, FormlyMatInputModule };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i1 from '@angular/material/input';\nimport { MAT_INPUT_VALUE_ACCESSOR, MatInputModule } from '@angular/material/input';\nimport * as i3 from '@angular/cdk/text-field';\nclass FormlyFieldTextArea extends FieldType {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = {\n      props: {\n        cols: 1,\n        rows: 1\n      }\n    };\n  }\n}\nFormlyFieldTextArea.ɵfac = /* @__PURE__ */(() => {\n  let ɵFormlyFieldTextArea_BaseFactory;\n  return function FormlyFieldTextArea_Factory(__ngFactoryType__) {\n    return (ɵFormlyFieldTextArea_BaseFactory || (ɵFormlyFieldTextArea_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldTextArea)))(__ngFactoryType__ || FormlyFieldTextArea);\n  };\n})();\nFormlyFieldTextArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldTextArea,\n  selectors: [[\"formly-field-mat-textarea\"]],\n  features: [i0.ɵɵProvidersFeature([\n  // fix for https://github.com/ngx-formly/ngx-formly/issues/1688\n  // rely on formControl value instead of elementRef which return empty value in Firefox.\n  {\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: FormlyFieldTextArea\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 16,\n  consts: [[\"matInput\", \"\", 3, \"id\", \"name\", \"readonly\", \"required\", \"formControl\", \"errorStateMatcher\", \"cols\", \"rows\", \"formlyAttributes\", \"placeholder\", \"tabindex\", \"cdkTextareaAutosize\", \"cdkAutosizeMinRows\", \"cdkAutosizeMaxRows\"]],\n  template: function FormlyFieldTextArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"textarea\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"cdk-textarea-autosize\", ctx.props.autosize);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"name\", ctx.field.name)(\"readonly\", ctx.props.readonly)(\"required\", ctx.required)(\"formControl\", ctx.formControl)(\"errorStateMatcher\", ctx.errorStateMatcher)(\"cols\", ctx.props.cols)(\"rows\", ctx.props.rows)(\"formlyAttributes\", ctx.field)(\"placeholder\", ctx.props.placeholder)(\"tabindex\", ctx.props.tabindex)(\"cdkTextareaAutosize\", ctx.props.autosize)(\"cdkAutosizeMinRows\", ctx.props.autosizeMinRows)(\"cdkAutosizeMaxRows\", ctx.props.autosizeMaxRows);\n    }\n  },\n  dependencies: [i1.MatInput, i2.DefaultValueAccessor, i3.CdkTextareaAutosize, i2.RequiredValidator, i2.NgControlStatus, i2.FormControlDirective, i4.ɵFormlyAttributes],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldTextArea, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-textarea',\n      template: `\n    <textarea\n      matInput\n      [id]=\"id\"\n      [name]=\"field.name\"\n      [readonly]=\"props.readonly\"\n      [required]=\"required\"\n      [formControl]=\"formControl\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [cols]=\"props.cols\"\n      [rows]=\"props.rows\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"props.placeholder\"\n      [tabindex]=\"props.tabindex\"\n      [cdkTextareaAutosize]=\"props.autosize\"\n      [cdkAutosizeMinRows]=\"props.autosizeMinRows\"\n      [cdkAutosizeMaxRows]=\"props.autosizeMaxRows\"\n      [class.cdk-textarea-autosize]=\"props.autosize\"\n    ></textarea>\n  `,\n      providers: [\n      // fix for https://github.com/ngx-formly/ngx-formly/issues/1688\n      // rely on formControl value instead of elementRef which return empty value in Firefox.\n      {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: FormlyFieldTextArea\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nclass FormlyMatTextAreaModule {}\nFormlyMatTextAreaModule.ɵfac = function FormlyMatTextAreaModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatTextAreaModule)();\n};\nFormlyMatTextAreaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatTextAreaModule,\n  declarations: [FormlyFieldTextArea],\n  imports: [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, i4.FormlyModule]\n});\nFormlyMatTextAreaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'textarea',\n      component: FormlyFieldTextArea,\n      wrappers: ['form-field']\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatTextAreaModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldTextArea],\n      imports: [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'textarea',\n          component: FormlyFieldTextArea,\n          wrappers: ['form-field']\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldTextArea, FormlyMatTextAreaModule };\n", "import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\nclass FormlySelectOptionsPipe {\n  transform(options, field) {\n    if (!(options instanceof Observable)) {\n      options = this.observableOf(options, field);\n    } else {\n      this.dispose();\n    }\n    return options.pipe(map(value => this.transformOptions(value, field)));\n  }\n  ngOnDestroy() {\n    this.dispose();\n  }\n  transformOptions(options, field) {\n    const to = this.transformSelectProps(field);\n    const opts = [];\n    const groups = {};\n    options?.forEach(option => {\n      const o = this.transformOption(option, to);\n      if (o.group) {\n        const id = groups[o.label];\n        if (id === undefined) {\n          groups[o.label] = opts.push(o) - 1;\n        } else {\n          o.group.forEach(o => opts[id].group.push(o));\n        }\n      } else {\n        opts.push(o);\n      }\n    });\n    return opts;\n  }\n  transformOption(option, props) {\n    const group = props.groupProp(option);\n    if (Array.isArray(group)) {\n      return {\n        label: props.labelProp(option),\n        group: group.map(opt => this.transformOption(opt, props))\n      };\n    }\n    option = {\n      label: props.labelProp(option),\n      value: props.valueProp(option),\n      disabled: !!props.disabledProp(option)\n    };\n    if (group) {\n      return {\n        label: group,\n        group: [option]\n      };\n    }\n    return option;\n  }\n  transformSelectProps(field) {\n    const props = field?.props || field?.templateOptions || {};\n    const selectPropFn = prop => typeof prop === 'function' ? prop : o => o[prop];\n    return {\n      groupProp: selectPropFn(props.groupProp || 'group'),\n      labelProp: selectPropFn(props.labelProp || 'label'),\n      valueProp: selectPropFn(props.valueProp || 'value'),\n      disabledProp: selectPropFn(props.disabledProp || 'disabled')\n    };\n  }\n  dispose() {\n    if (this._options) {\n      this._options.complete();\n      this._options = null;\n    }\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n  }\n  observableOf(options, f) {\n    this.dispose();\n    if (f && f.options && f.options.fieldChanges) {\n      this._subscription = f.options.fieldChanges.pipe(filter(({\n        property,\n        type,\n        field\n      }) => {\n        return type === 'expressionChanges' && (property.indexOf('templateOptions.options') === 0 || property.indexOf('props.options') === 0) && field === f && Array.isArray(field.props.options) && !!this._options;\n      }), tap(() => this._options.next(f.props.options))).subscribe();\n    }\n    this._options = new BehaviorSubject(options);\n    return this._options.asObservable();\n  }\n}\nFormlySelectOptionsPipe.ɵfac = function FormlySelectOptionsPipe_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlySelectOptionsPipe)();\n};\nFormlySelectOptionsPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"formlySelectOptions\",\n  type: FormlySelectOptionsPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlySelectOptionsPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'formlySelectOptions'\n    }]\n  }], null, null);\n})();\nclass FormlySelectModule {}\nFormlySelectModule.ɵfac = function FormlySelectModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlySelectModule)();\n};\nFormlySelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlySelectModule,\n  declarations: [FormlySelectOptionsPipe],\n  exports: [FormlySelectOptionsPipe]\n});\nFormlySelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlySelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlySelectOptionsPipe],\n      exports: [FormlySelectOptionsPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlySelectModule, FormlySelectOptionsPipe };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { ɵobserve, FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i5 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i1 from '@angular/material/radio';\nimport { MatRadioGroup, MatRadioModule } from '@angular/material/radio';\nfunction FormlyFieldRadio_mat_radio_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"_\" + i_r2)(\"color\", ctx_r2.props.color)(\"labelPosition\", ctx_r2.props.labelPosition)(\"disabled\", option_r1.disabled)(\"value\", option_r1.value);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r1.label, \" \");\n  }\n}\nclass FormlyFieldRadio extends FieldType {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = {\n      props: {\n        hideFieldUnderline: true,\n        floatLabel: 'always',\n        tabindex: -1\n      }\n    };\n  }\n  ngAfterViewInit() {\n    this.focusObserver = ɵobserve(this.field, ['focus'], ({\n      currentValue\n    }) => {\n      if (this.props.tabindex === -1 && currentValue && this.radioGroup._radios.length > 0) {\n        // https://github.com/ngx-formly/ngx-formly/issues/2498\n        setTimeout(() => {\n          const radio = this.radioGroup.selected ? this.radioGroup.selected : this.radioGroup._radios.first;\n          radio.focus();\n        });\n      }\n    });\n  }\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusObserver && this.focusObserver.unsubscribe();\n  }\n}\nFormlyFieldRadio.ɵfac = /* @__PURE__ */(() => {\n  let ɵFormlyFieldRadio_BaseFactory;\n  return function FormlyFieldRadio_Factory(__ngFactoryType__) {\n    return (ɵFormlyFieldRadio_BaseFactory || (ɵFormlyFieldRadio_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldRadio)))(__ngFactoryType__ || FormlyFieldRadio);\n  };\n})();\nFormlyFieldRadio.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldRadio,\n  selectors: [[\"formly-field-mat-radio\"]],\n  viewQuery: function FormlyFieldRadio_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatRadioGroup, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioGroup = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 10,\n  consts: [[3, \"formControl\", \"formlyAttributes\", \"required\", \"tabindex\"], [3, \"id\", \"color\", \"labelPosition\", \"disabled\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", \"color\", \"labelPosition\", \"disabled\", \"value\"]],\n  template: function FormlyFieldRadio_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-radio-group\", 0);\n      i0.ɵɵtemplate(1, FormlyFieldRadio_mat_radio_button_1_Template, 2, 6, \"mat-radio-button\", 1);\n      i0.ɵɵpipe(2, \"formlySelectOptions\");\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"required\", ctx.required)(\"tabindex\", ctx.props.tabindex);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 8, i0.ɵɵpipeBind2(2, 5, ctx.props.options, ctx.field)));\n    }\n  },\n  dependencies: [i1.MatRadioButton, i1.MatRadioGroup, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i2.RequiredValidator, i4.NgForOf, i4.AsyncPipe, i5.FormlySelectOptionsPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldRadio, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-radio',\n      template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"required\"\n      [tabindex]=\"props.tabindex\"\n    >\n      <mat-radio-button\n        *ngFor=\"let option of props.options | formlySelectOptions : field | async; let i = index\"\n        [id]=\"id + '_' + i\"\n        [color]=\"props.color\"\n        [labelPosition]=\"props.labelPosition\"\n        [disabled]=\"option.disabled\"\n        [value]=\"option.value\"\n      >\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    radioGroup: [{\n      type: ViewChild,\n      args: [MatRadioGroup, {\n        static: true\n      }]\n    }]\n  });\n})();\nclass FormlyMatRadioModule {}\nFormlyMatRadioModule.ɵfac = function FormlyMatRadioModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatRadioModule)();\n};\nFormlyMatRadioModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatRadioModule,\n  declarations: [FormlyFieldRadio],\n  imports: [CommonModule, ReactiveFormsModule, MatRadioModule, FormlyMatFormFieldModule, FormlySelectModule, i3.FormlyModule]\n});\nFormlyMatRadioModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatRadioModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n    types: [{\n      name: 'radio',\n      component: FormlyFieldRadio,\n      wrappers: ['form-field']\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatRadioModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldRadio],\n      imports: [CommonModule, ReactiveFormsModule, MatRadioModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n        types: [{\n          name: 'radio',\n          component: FormlyFieldRadio,\n          wrappers: ['form-field']\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldRadio, FormlyMatRadioModule };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/checkbox';\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i1 from '@angular/cdk/a11y';\nfunction FormlyFieldCheckbox_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass FormlyFieldCheckbox extends FieldType {\n  constructor(renderer, focusMonitor) {\n    super();\n    this.renderer = renderer;\n    this.focusMonitor = focusMonitor;\n    this.defaultOptions = {\n      props: {\n        hideFieldUnderline: true,\n        indeterminate: true,\n        floatLabel: 'always',\n        hideLabel: true,\n        color: 'accent' // workaround for https://github.com/angular/components/issues/18465\n      }\n    };\n  }\n  onContainerClick(event) {\n    this.checkbox.focus();\n    super.onContainerClick(event);\n  }\n  ngAfterViewInit() {\n    if (this.checkbox) {\n      this.focusMonitor.monitor(this.checkbox._inputElement, true).subscribe(focusOrigin => {\n        this.field.focus = !!focusOrigin;\n        this.stateChanges.next();\n        if (focusOrigin) {\n          this.props.focus && this.props.focus(this.field);\n        } else {\n          this.props.blur && this.props.blur(this.field);\n        }\n      });\n    }\n  }\n  ngAfterViewChecked() {\n    if (this.required !== this._required && this.checkbox && this.checkbox._inputElement) {\n      this._required = this.required;\n      const inputElement = this.checkbox._inputElement.nativeElement;\n      if (this.required) {\n        this.renderer.setAttribute(inputElement, 'required', 'required');\n      } else {\n        this.renderer.removeAttribute(inputElement, 'required');\n      }\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.checkbox) {\n      this.focusMonitor.stopMonitoring(this.checkbox._inputElement);\n    }\n  }\n}\nFormlyFieldCheckbox.ɵfac = function FormlyFieldCheckbox_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyFieldCheckbox)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n};\nFormlyFieldCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldCheckbox,\n  selectors: [[\"formly-field-mat-checkbox\"]],\n  viewQuery: function FormlyFieldCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatCheckbox, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 10,\n  consts: [[3, \"formControl\", \"id\", \"name\", \"formlyAttributes\", \"tabIndex\", \"indeterminate\", \"color\", \"labelPosition\"], [\"aria-hidden\", \"true\", \"class\", \"mat-form-field-required-marker mat-mdc-form-field-required-marker\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-form-field-required-marker\", \"mat-mdc-form-field-required-marker\"]],\n  template: function FormlyFieldCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-checkbox\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵtemplate(2, FormlyFieldCheckbox_span_2_Template, 2, 0, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.formControl)(\"id\", ctx.id)(\"name\", ctx.field.name)(\"formlyAttributes\", ctx.field)(\"tabIndex\", ctx.props.tabindex)(\"indeterminate\", ctx.props.indeterminate && ctx.formControl.value == null)(\"color\", ctx.props.color)(\"labelPosition\", ctx.props.labelPosition);\n      i0.ɵɵadvance();\n      i0.ɵɵtextInterpolate1(\" \", ctx.props.label, \" \");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.props.required && ctx.props.hideRequiredMarker !== true);\n    }\n  },\n  dependencies: [i2.MatCheckbox, i3.NgControlStatus, i3.FormControlDirective, i4.ɵFormlyAttributes, i5.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-checkbox',\n      template: `\n    <mat-checkbox\n      [formControl]=\"formControl\"\n      [id]=\"id\"\n      [name]=\"field.name\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"props.tabindex\"\n      [indeterminate]=\"props.indeterminate && formControl.value == null\"\n      [color]=\"props.color\"\n      [labelPosition]=\"props.labelPosition\"\n    >\n      {{ props.label }}\n      <span\n        *ngIf=\"props.required && props.hideRequiredMarker !== true\"\n        aria-hidden=\"true\"\n        class=\"mat-form-field-required-marker mat-mdc-form-field-required-marker\"\n        >*</span\n      >\n    </mat-checkbox>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i1.FocusMonitor\n    }];\n  }, {\n    checkbox: [{\n      type: ViewChild,\n      args: [MatCheckbox, {\n        static: true\n      }]\n    }]\n  });\n})();\nclass FormlyMatCheckboxModule {}\nFormlyMatCheckboxModule.ɵfac = function FormlyMatCheckboxModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatCheckboxModule)();\n};\nFormlyMatCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatCheckboxModule,\n  declarations: [FormlyFieldCheckbox],\n  imports: [CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, i4.FormlyModule]\n});\nFormlyMatCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['form-field']\n    }, {\n      name: 'boolean',\n      extends: 'checkbox'\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldCheckbox],\n      imports: [CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field']\n        }, {\n          name: 'boolean',\n          extends: 'checkbox'\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldCheckbox, FormlyMatCheckboxModule };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i4 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i1 from '@angular/material/checkbox';\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material/checkbox';\nfunction FormlyFieldMultiCheckbox_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-checkbox\", 1);\n    i0.ɵɵlistener(\"change\", function FormlyFieldMultiCheckbox_ng_container_0_Template_mat_checkbox_change_1_listener($event) {\n      const option_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onChange(option_r2.value, $event.checked));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"_\" + i_r4)(\"formlyAttributes\", ctx_r2.field)(\"tabIndex\", ctx_r2.props.tabindex)(\"color\", ctx_r2.props.color)(\"labelPosition\", ctx_r2.props.labelPosition)(\"checked\", ctx_r2.isChecked(option_r2))(\"disabled\", ctx_r2.formControl.disabled || option_r2.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r2.label, \" \");\n  }\n}\nclass FormlyFieldMultiCheckbox extends FieldType {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = {\n      props: {\n        hideFieldUnderline: true,\n        floatLabel: 'always',\n        color: 'accent' // workaround for https://github.com/angular/components/issues/18465\n      }\n    };\n  }\n  onChange(value, checked) {\n    this.formControl.markAsDirty();\n    if (this.props.type === 'array') {\n      this.formControl.patchValue(checked ? [...(this.formControl.value || []), value] : [...(this.formControl.value || [])].filter(o => o !== value));\n    } else {\n      this.formControl.patchValue({\n        ...this.formControl.value,\n        [value]: checked\n      });\n    }\n    this.formControl.markAsTouched();\n  }\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n  isChecked(option) {\n    const value = this.formControl.value;\n    return value && (this.props.type === 'array' ? value.indexOf(option.value) !== -1 : value[option.value]);\n  }\n}\nFormlyFieldMultiCheckbox.ɵfac = /* @__PURE__ */(() => {\n  let ɵFormlyFieldMultiCheckbox_BaseFactory;\n  return function FormlyFieldMultiCheckbox_Factory(__ngFactoryType__) {\n    return (ɵFormlyFieldMultiCheckbox_BaseFactory || (ɵFormlyFieldMultiCheckbox_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldMultiCheckbox)))(__ngFactoryType__ || FormlyFieldMultiCheckbox);\n  };\n})();\nFormlyFieldMultiCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldMultiCheckbox,\n  selectors: [[\"formly-field-mat-multicheckbox\"]],\n  viewQuery: function FormlyFieldMultiCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatCheckbox, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkboxes = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function FormlyFieldMultiCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"change\", \"id\", \"formlyAttributes\", \"tabIndex\", \"color\", \"labelPosition\", \"checked\", \"disabled\"]],\n  template: function FormlyFieldMultiCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldMultiCheckbox_ng_container_0_Template, 3, 8, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"formlySelectOptions\");\n      i0.ɵɵpipe(2, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 4, i0.ɵɵpipeBind2(1, 1, ctx.props.options, ctx.field)));\n    }\n  },\n  dependencies: [i1.MatCheckbox, i2.NgForOf, i3.ɵFormlyAttributes, i2.AsyncPipe, i4.FormlySelectOptionsPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldMultiCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-multicheckbox',\n      template: `\n    <ng-container *ngFor=\"let option of props.options | formlySelectOptions : field | async; let i = index\">\n      <mat-checkbox\n        [id]=\"id + '_' + i\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"props.tabindex\"\n        [color]=\"props.color\"\n        [labelPosition]=\"props.labelPosition\"\n        [checked]=\"isChecked(option)\"\n        [disabled]=\"formControl.disabled || option.disabled\"\n        (change)=\"onChange(option.value, $event.checked)\"\n      >\n        {{ option.label }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[id]': 'id'\n      }\n    }]\n  }], null, {\n    checkboxes: [{\n      type: ViewChildren,\n      args: [MatCheckbox]\n    }]\n  });\n})();\nclass FormlyMatMultiCheckboxModule {}\nFormlyMatMultiCheckboxModule.ɵfac = function FormlyMatMultiCheckboxModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatMultiCheckboxModule)();\n};\nFormlyMatMultiCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatMultiCheckboxModule,\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, i3.FormlyModule]\n});\nFormlyMatMultiCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n    types: [{\n      name: 'multicheckbox',\n      component: FormlyFieldMultiCheckbox,\n      wrappers: ['form-field']\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatMultiCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldMultiCheckbox],\n      imports: [CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n        types: [{\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field']\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldMultiCheckbox, FormlyMatMultiCheckboxModule };\n", "import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i4 from '@ngx-formly/core';\nimport { ɵobserve, FormlyModule } from '@ngx-formly/core';\nimport * as i6 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/select';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport * as i1 from '@angular/material/core';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\nconst _c0 = a0 => ({\n  selectOptions: a0\n});\nfunction FormlyFieldSelect_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵlistener(\"click\", function FormlyFieldSelect_ng_template_0_Template_mat_option_click_0_listener() {\n      const selectOptions_r3 = i0.ɵɵrestoreView(_r2).selectOptions;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleSelectAll(selectOptions_r3));\n    });\n    i0.ɵɵelement(1, \"mat-pseudo-checkbox\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const selectOptions_r3 = ctx.selectOptions;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"state\", ctx_r3.getSelectAllState(selectOptions_r3));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.props.selectAllOption, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 7);\n  }\n  if (rf & 2) {\n    const selectOptions_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵnextContext();\n    const selectAll_r6 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", selectAll_r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, selectOptions_r5));\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", child_r7.value)(\"disabled\", child_r7.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", child_r7.label, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 10);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_mat_option_1_Template, 2, 3, \"mat-option\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", item_r8.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", item_r8.group);\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", item_r8.value)(\"disabled\", item_r8.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r8.label);\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_Template, 2, 2, \"mat-optgroup\", 8)(2, FormlyFieldSelect_ng_container_3_ng_container_2_mat_option_2_Template, 2, 3, \"mat-option\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r8.group);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !item_r8.group);\n  }\n}\nfunction FormlyFieldSelect_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_1_Template, 1, 4, \"ng-container\", 5)(2, FormlyFieldSelect_ng_container_3_ng_container_2_Template, 3, 2, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const selectOptions_r5 = ctx.ngIf;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.props.multiple && ctx_r3.props.selectAllOption);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", selectOptions_r5);\n  }\n}\nclass FormlyFieldSelect extends FieldType {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = {\n      props: {\n        compareWith(o1, o2) {\n          return o1 === o2;\n        }\n      }\n    };\n  }\n  set select(select) {\n    ɵobserve(select, ['_parentFormField', '_textField'], ({\n      currentValue\n    }) => {\n      if (currentValue) {\n        select._preferredOverlayOrigin = select._parentFormField.getConnectedOverlayOrigin();\n      }\n    });\n  }\n  getSelectAllState(options) {\n    if (this.empty || this.value.length === 0) {\n      return null;\n    }\n    return this.value.length !== this.getSelectAllValue(options).length ? 'indeterminate' : 'checked';\n  }\n  toggleSelectAll(options) {\n    const selectAllValue = this.getSelectAllValue(options);\n    this.formControl.markAsDirty();\n    this.formControl.setValue(!this.value || this.value.length !== selectAllValue.length ? selectAllValue : []);\n  }\n  change($event) {\n    this.props.change?.(this.field, $event);\n  }\n  _getAriaLabelledby() {\n    if (this.props.attributes?.['aria-labelledby']) {\n      return this.props.attributes['aria-labelledby'];\n    }\n    return this.formField?._labelId;\n  }\n  _getAriaLabel() {\n    return this.props.attributes?.['aria-label'];\n  }\n  getSelectAllValue(options) {\n    if (!this.selectAllValue || options !== this.selectAllValue.options) {\n      const flatOptions = [];\n      options.forEach(o => o.group ? flatOptions.push(...o.group) : flatOptions.push(o));\n      this.selectAllValue = {\n        options,\n        value: flatOptions.filter(o => !o.disabled).map(o => o.value)\n      };\n    }\n    return this.selectAllValue.value;\n  }\n}\nFormlyFieldSelect.ɵfac = /* @__PURE__ */(() => {\n  let ɵFormlyFieldSelect_BaseFactory;\n  return function FormlyFieldSelect_Factory(__ngFactoryType__) {\n    return (ɵFormlyFieldSelect_BaseFactory || (ɵFormlyFieldSelect_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldSelect)))(__ngFactoryType__ || FormlyFieldSelect);\n  };\n})();\nFormlyFieldSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldSelect,\n  selectors: [[\"formly-field-mat-select\"]],\n  viewQuery: function FormlyFieldSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatSelect, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.select = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[\"selectAll\", \"\"], [3, \"selectionChange\", \"id\", \"formControl\", \"formlyAttributes\", \"placeholder\", \"tabIndex\", \"required\", \"compareWith\", \"multiple\", \"errorStateMatcher\", \"aria-label\", \"aria-labelledby\", \"disableOptionCentering\", \"typeaheadDebounceInterval\", \"panelClass\"], [4, \"ngIf\"], [3, \"click\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"label\", 4, \"ngIf\"], [3, \"value\", \"disabled\", 4, \"ngIf\"], [3, \"label\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"disabled\"]],\n  template: function FormlyFieldSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(2, \"mat-select\", 1);\n      i0.ɵɵlistener(\"selectionChange\", function FormlyFieldSelect_Template_mat_select_selectionChange_2_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.change($event));\n      });\n      i0.ɵɵtemplate(3, FormlyFieldSelect_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n      i0.ɵɵpipe(4, \"formlySelectOptions\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"id\", ctx.id)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"placeholder\", ctx.props.placeholder)(\"tabIndex\", ctx.props.tabindex)(\"required\", ctx.required)(\"compareWith\", ctx.props.compareWith)(\"multiple\", ctx.props.multiple)(\"errorStateMatcher\", ctx.errorStateMatcher)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"disableOptionCentering\", ctx.props.disableOptionCentering)(\"typeaheadDebounceInterval\", ctx.props.typeaheadDebounceInterval)(\"panelClass\", ctx.props.panelClass);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 18, i0.ɵɵpipeBind2(4, 15, ctx.props.options, ctx.field)));\n    }\n  },\n  dependencies: [i1.MatOption, i1.MatPseudoCheckbox, i2.MatSelect, i1.MatOptgroup, i3.NgControlStatus, i3.FormControlDirective, i4.ɵFormlyAttributes, i3.RequiredValidator, i5.NgIf, i5.NgTemplateOutlet, i5.NgForOf, i5.AsyncPipe, i6.FormlySelectOptionsPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldSelect, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-select',\n      template: `\n    <ng-template #selectAll let-selectOptions=\"selectOptions\">\n      <mat-option (click)=\"toggleSelectAll(selectOptions)\">\n        <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\" [state]=\"getSelectAllState(selectOptions)\">\n        </mat-pseudo-checkbox>\n        {{ props.selectAllOption }}\n      </mat-option>\n    </ng-template>\n\n    <mat-select\n      [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"props.placeholder\"\n      [tabIndex]=\"props.tabindex\"\n      [required]=\"required\"\n      [compareWith]=\"props.compareWith\"\n      [multiple]=\"props.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [aria-label]=\"_getAriaLabel()\"\n      [aria-labelledby]=\"_getAriaLabelledby()\"\n      [disableOptionCentering]=\"props.disableOptionCentering\"\n      [typeaheadDebounceInterval]=\"props.typeaheadDebounceInterval\"\n      [panelClass]=\"props.panelClass\"\n    >\n      <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as selectOptions\">\n        <ng-container\n          *ngIf=\"props.multiple && props.selectAllOption\"\n          [ngTemplateOutlet]=\"selectAll\"\n          [ngTemplateOutletContext]=\"{ selectOptions: selectOptions }\"\n        >\n        </ng-container>\n        <ng-container *ngFor=\"let item of selectOptions\">\n          <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n            <mat-option *ngFor=\"let child of item.group\" [value]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </mat-option>\n          </mat-optgroup>\n          <mat-option *ngIf=\"!item.group\" [value]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</mat-option>\n        </ng-container>\n      </ng-container>\n    </mat-select>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    select: [{\n      type: ViewChild,\n      args: [MatSelect, {\n        static: true\n      }]\n    }]\n  });\n})();\nclass FormlyMatSelectModule {}\nFormlyMatSelectModule.ɵfac = function FormlyMatSelectModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMatSelectModule)();\n};\nFormlyMatSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatSelectModule,\n  declarations: [FormlyFieldSelect],\n  imports: [CommonModule, ReactiveFormsModule, MatSelectModule, MatPseudoCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, i4.FormlyModule]\n});\nFormlyMatSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatSelectModule, MatPseudoCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n    types: [{\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['form-field']\n    }, {\n      name: 'enum',\n      extends: 'select'\n    }]\n  })]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatSelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldSelect],\n      imports: [CommonModule, ReactiveFormsModule, MatSelectModule, MatPseudoCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n        types: [{\n          name: 'select',\n          component: FormlyFieldSelect,\n          wrappers: ['form-field']\n        }, {\n          name: 'enum',\n          extends: 'select'\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldSelect, FormlyMatSelectModule };\n", "import { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nexport { FieldType } from '@ngx-formly/material/form-field';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { FormlyMatInputModule } from '@ngx-formly/material/input';\nimport { FormlyMatTextAreaModule } from '@ngx-formly/material/textarea';\nimport { FormlyMatRadioModule } from '@ngx-formly/material/radio';\nimport { FormlyMatCheckboxModule } from '@ngx-formly/material/checkbox';\nimport { FormlyMatMultiCheckboxModule } from '@ngx-formly/material/multicheckbox';\nimport { FormlyMatSelectModule } from '@ngx-formly/material/select';\nclass FormlyMaterialModule {}\nFormlyMaterialModule.ɵfac = function FormlyMaterialModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FormlyMaterialModule)();\n};\nFormlyMaterialModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMaterialModule,\n  imports: [FormlyMatFormFieldModule, FormlyMatInputModule, FormlyMatTextAreaModule, FormlyMatRadioModule, FormlyMatCheckboxModule, FormlyMatMultiCheckboxModule, FormlyMatSelectModule]\n});\nFormlyMaterialModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[FormlyMatFormFieldModule, FormlyMatInputModule, FormlyMatTextAreaModule, FormlyMatRadioModule, FormlyMatCheckboxModule, FormlyMatMultiCheckboxModule, FormlyMatSelectModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMaterialModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormlyMatFormFieldModule, FormlyMatInputModule, FormlyMatTextAreaModule, FormlyMatRadioModule, FormlyMatCheckboxModule, FormlyMatMultiCheckboxModule, FormlyMatSelectModule]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of material\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyMaterialModule };\n"],
  "mappings": "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",
  "names": ["o"]
}
