{
  "version": 3,
  "sources": ["../../../../../../node_modules/leaflet-switch-basemap/src/L.switchBasemap.js"],
  "sourcesContent": ["L.Control.basemapsSwitcher = L.Control.extend({\n  options: {\n    position: 'topright'\n  },\n  initialize: function (layers, options) {\n    L.Util.setOptions(this, options);\n    this.layers = layers;\n  },\n  onAdd: function (map) {\n    const container = this.container = L.DomUtil.create('div', 'leaflet-control-basemapsSwitcher');\n    this._createItems();\n    this._collapse();\n    container.addEventListener('mouseover', () => {\n      this._expand();\n    });\n    container.addEventListener('mouseout', () => {\n      this._collapse();\n    });\n    return container;\n  },\n  _createItems() {\n    this.layers.forEach((obj, index) => {\n      obj.id = index;\n      const imgContainer = L.DomUtil.create('div', 'basemapImg');\n      const img = L.DomUtil.create('div');\n      const name = L.DomUtil.create('div', 'name');\n      const check = L.DomUtil.create('div', 'check');\n      name.innerHTML = obj.name;\n      if (obj.layer?._map) {\n        this.activeMap = obj;\n        check.classList.add('activeMap');\n      }\n      img.style.backgroundImage = `url(${obj.icon})`;\n      imgContainer.append(img);\n      img.append(check);\n      img.append(name);\n      imgContainer.addEventListener('click', () => {\n        this._removeLayers(obj.layer);\n        if (!obj.layer?._map) {\n          obj.layer.addTo(this._map);\n          obj.layer.bringToBack();\n          this.activeMap = obj;\n          this._collapse();\n          this._map.fire('basemapChange', {\n            layer: obj.layer\n          });\n          check.classList.add('activeMap');\n        }\n      });\n      this.container.append(imgContainer);\n    });\n  },\n  _removeLayers(layer) {\n    this.layers.forEach(obj => {\n      if (obj.layer._leaflet_id !== layer._leaflet_id && obj.layer?._map) {\n        this._map.removeLayer(obj.layer);\n      }\n    });\n  },\n  _collapse() {\n    this.container.childNodes.forEach((child, index) => {\n      if (index !== this.activeMap.id) {\n        child.classList.add('hidden');\n        let check = child.querySelector('.check');\n        check.classList.remove('activeMap');\n      }\n    });\n  },\n  _expand() {\n    this.container.childNodes.forEach(child => {\n      child.classList.remove('hidden');\n    });\n  }\n});\nL.basemapsSwitcher = function (layers, options) {\n  return new L.Control.basemapsSwitcher(layers, options);\n};"],
  "mappings": ";AAAA,EAAE,QAAQ,mBAAmB,EAAE,QAAQ,OAAO;AAAA,EAC5C,SAAS;AAAA,IACP,UAAU;AAAA,EACZ;AAAA,EACA,YAAY,SAAU,QAAQ,SAAS;AACrC,MAAE,KAAK,WAAW,MAAM,OAAO;AAC/B,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAO,SAAU,KAAK;AACpB,UAAM,YAAY,KAAK,YAAY,EAAE,QAAQ,OAAO,OAAO,kCAAkC;AAC7F,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,cAAU,iBAAiB,aAAa,MAAM;AAC5C,WAAK,QAAQ;AAAA,IACf,CAAC;AACD,cAAU,iBAAiB,YAAY,MAAM;AAC3C,WAAK,UAAU;AAAA,IACjB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,eAAe;AACb,SAAK,OAAO,QAAQ,CAAC,KAAK,UAAU;AAClC,UAAI,KAAK;AACT,YAAM,eAAe,EAAE,QAAQ,OAAO,OAAO,YAAY;AACzD,YAAM,MAAM,EAAE,QAAQ,OAAO,KAAK;AAClC,YAAM,OAAO,EAAE,QAAQ,OAAO,OAAO,MAAM;AAC3C,YAAM,QAAQ,EAAE,QAAQ,OAAO,OAAO,OAAO;AAC7C,WAAK,YAAY,IAAI;AACrB,UAAI,IAAI,OAAO,MAAM;AACnB,aAAK,YAAY;AACjB,cAAM,UAAU,IAAI,WAAW;AAAA,MACjC;AACA,UAAI,MAAM,kBAAkB,OAAO,IAAI,IAAI;AAC3C,mBAAa,OAAO,GAAG;AACvB,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,IAAI;AACf,mBAAa,iBAAiB,SAAS,MAAM;AAC3C,aAAK,cAAc,IAAI,KAAK;AAC5B,YAAI,CAAC,IAAI,OAAO,MAAM;AACpB,cAAI,MAAM,MAAM,KAAK,IAAI;AACzB,cAAI,MAAM,YAAY;AACtB,eAAK,YAAY;AACjB,eAAK,UAAU;AACf,eAAK,KAAK,KAAK,iBAAiB;AAAA,YAC9B,OAAO,IAAI;AAAA,UACb,CAAC;AACD,gBAAM,UAAU,IAAI,WAAW;AAAA,QACjC;AAAA,MACF,CAAC;AACD,WAAK,UAAU,OAAO,YAAY;AAAA,IACpC,CAAC;AAAA,EACH;AAAA,EACA,cAAc,OAAO;AACnB,SAAK,OAAO,QAAQ,SAAO;AACzB,UAAI,IAAI,MAAM,gBAAgB,MAAM,eAAe,IAAI,OAAO,MAAM;AAClE,aAAK,KAAK,YAAY,IAAI,KAAK;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,YAAY;AACV,SAAK,UAAU,WAAW,QAAQ,CAAC,OAAO,UAAU;AAClD,UAAI,UAAU,KAAK,UAAU,IAAI;AAC/B,cAAM,UAAU,IAAI,QAAQ;AAC5B,YAAI,QAAQ,MAAM,cAAc,QAAQ;AACxC,cAAM,UAAU,OAAO,WAAW;AAAA,MACpC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,SAAK,UAAU,WAAW,QAAQ,WAAS;AACzC,YAAM,UAAU,OAAO,QAAQ;AAAA,IACjC,CAAC;AAAA,EACH;AACF,CAAC;AACD,EAAE,mBAAmB,SAAU,QAAQ,SAAS;AAC9C,SAAO,IAAI,EAAE,QAAQ,iBAAiB,QAAQ,OAAO;AACvD;",
  "names": []
}
